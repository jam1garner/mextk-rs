/* automatically generated by rust-bindgen 0.56.0 */

#[repr(C)]
#[derive(Copy, Clone, Debug, Default, Eq, Hash, Ord, PartialEq, PartialOrd)]
pub struct __BindgenBitfieldUnit<Storage, Align> {
    storage: Storage,
    align: [Align; 0],
}
impl<Storage, Align> __BindgenBitfieldUnit<Storage, Align> {
    #[inline]
    pub const fn new(storage: Storage) -> Self {
        Self { storage, align: [] }
    }
}
impl<Storage, Align> __BindgenBitfieldUnit<Storage, Align>
where
    Storage: AsRef<[u8]> + AsMut<[u8]>,
{
    #[inline]
    pub fn get_bit(&self, index: usize) -> bool {
        debug_assert!(index / 8 < self.storage.as_ref().len());
        let byte_index = index / 8;
        let byte = self.storage.as_ref()[byte_index];
        let bit_index = if cfg!(target_endian = "big") {
            7 - (index % 8)
        } else {
            index % 8
        };
        let mask = 1 << bit_index;
        byte & mask == mask
    }
    #[inline]
    pub fn set_bit(&mut self, index: usize, val: bool) {
        debug_assert!(index / 8 < self.storage.as_ref().len());
        let byte_index = index / 8;
        let byte = &mut self.storage.as_mut()[byte_index];
        let bit_index = if cfg!(target_endian = "big") {
            7 - (index % 8)
        } else {
            index % 8
        };
        let mask = 1 << bit_index;
        if val {
            *byte |= mask;
        } else {
            *byte &= !mask;
        }
    }
    #[inline]
    pub fn get(&self, bit_offset: usize, bit_width: u8) -> u64 {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < self.storage.as_ref().len());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= self.storage.as_ref().len());
        let mut val = 0;
        for i in 0..(bit_width as usize) {
            if self.get_bit(i + bit_offset) {
                let index = if cfg!(target_endian = "big") {
                    bit_width as usize - 1 - i
                } else {
                    i
                };
                val |= 1 << index;
            }
        }
        val
    }
    #[inline]
    pub fn set(&mut self, bit_offset: usize, bit_width: u8, val: u64) {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < self.storage.as_ref().len());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= self.storage.as_ref().len());
        for i in 0..(bit_width as usize) {
            let mask = 1 << i;
            let val_bit_is_set = val & mask == mask;
            let index = if cfg!(target_endian = "big") {
                bit_width as usize - 1 - i
            } else {
                i
            };
            self.set_bit(index + bit_offset, val_bit_is_set);
        }
    }
}
pub const R13: u32 = 2152576672;
pub const STAGE_CONST: i32 = -19464;
pub const MEMCARD: i32 = -30656;
pub const GOBJLIST: i32 = -15988;
pub const PLCO_SHIELDCOLORS: i32 = -20880;
pub const PLCO_FTCOMMON: i32 = -20812;
pub const STAGE: u32 = 2152326856;
pub const EVMENU_ASSETS: i32 = -18952;
pub const HSD_UPDATE: u32 = 2152176984;
pub const COLL_TEST: i32 = -20980;
pub const MATCH_HUD: u32 = 2152337608;
pub const COBJDESC_MATCHHUD: u32 = 2159356288;
pub const MATCH_CAM: u32 = 2152017000;
pub const MATCH: u32 = 2152117920;
pub const PADGET_MASTER: u32 = 0;
pub const PADGET_ENGINE: u32 = 1;
pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub const JOBJ_SKELETON: u32 = 1;
pub const JOBJ_SKELETON_ROOT: u32 = 2;
pub const JOBJ_ENVELOPE_MODEL: u32 = 4;
pub const JOBJ_CLASSICAL_SCALING: u32 = 8;
pub const JOBJ_HIDDEN: u32 = 16;
pub const JOBJ_PTCL: u32 = 32;
pub const JOBJ_MTX_DIRTY: u32 = 64;
pub const JOBJ_LIGHTING: u32 = 128;
pub const JOBJ_TEXGEN: u32 = 256;
pub const JOBJ_BILLBOARD: u32 = 512;
pub const JOBJ_VBILLBOARD: u32 = 1024;
pub const JOBJ_HBILLBOARD: u32 = 1536;
pub const JOBJ_RBILLBOARD: u32 = 2048;
pub const JOBJ_INSTANCE: u32 = 4096;
pub const JOBJ_PBILLBOARD: u32 = 8192;
pub const JOBJ_SPLINE: u32 = 16384;
pub const JOBJ_FLIP_IK: u32 = 32768;
pub const JOBJ_SPECULAR: u32 = 65536;
pub const JOBJ_USE_QUATERNION: u32 = 131072;
pub const JOBJ_OPA: u32 = 262144;
pub const JOBJ_XLU: u32 = 524288;
pub const JOBJ_TEXEDGE: u32 = 1048576;
pub const JOBJ_NULL: u32 = 0;
pub const JOBJ_JOINT1: u32 = 2097152;
pub const JOBJ_JOINT2: u32 = 4194304;
pub const JOBJ_EFFECTOR: u32 = 6291456;
pub const JOBJ_USER_DEFINED_MTX: u32 = 8388608;
pub const JOBJ_MTX_INDEPEND_PARENT: u32 = 16777216;
pub const JOBJ_MTS_INDEPEND_SRT: u32 = 33554432;
pub const JOBJ_GENERALFLAG: u32 = 67108864;
pub const JOBJ_GENERALFLAG2: u32 = 134217728;
pub const JOBJ_ROOT_OPA: u32 = 268435456;
pub const JOBJ_ROOT_XLU: u32 = 536870912;
pub const JOBJ_ROOT_TEXEDGE: u32 = 1073741824;
pub const JOBJ_31: u32 = 2147483648;
pub const MOBJ_ANIM: u32 = 4;
pub const TOBJ_ANIM: u32 = 16;
pub const ALL_ANIM: u32 = 2047;
pub const HSD_A_M_AMBIENT_R: u32 = 1;
pub const HSD_A_M_AMBIENT_G: u32 = 2;
pub const HSD_A_M_AMBIENT_B: u32 = 3;
pub const HSD_A_M_DIFFUSE_R: u32 = 4;
pub const HSD_A_M_DIFFUSE_G: u32 = 5;
pub const HSD_A_M_DIFFUSE_B: u32 = 6;
pub const HSD_A_M_SPECULAR_R: u32 = 7;
pub const HSD_A_M_SPECULAR_G: u32 = 8;
pub const HSD_A_M_SPECULAR_B: u32 = 9;
pub const HSD_A_M_ALPHA: u32 = 10;
pub const HSD_A_M_PE_REF0: u32 = 11;
pub const HSD_A_M_PE_REF1: u32 = 12;
pub const HSD_A_M_PE_DSTALPHA: u32 = 13;
pub const RENDER_DIFFUSE_SHIFT: u32 = 0;
pub const RENDER_DIFFUSE_BITS: u32 = 3;
pub const RENDER_DIFFUSE_MAT0: u32 = 0;
pub const RENDER_DIFFUSE_MAT: u32 = 1;
pub const RENDER_DIFFUSE_VTX: u32 = 2;
pub const RENDER_DIFFUSE_BOTH: u32 = 3;
pub const RENDER_CONSTANT: u32 = 1;
pub const RENDER_VERTEX: u32 = 2;
pub const RENDER_DIFFUSE: u32 = 4;
pub const RENDER_SPECULAR: u32 = 8;
pub const CHANNEL_FIELD: u32 = 15;
pub const RENDER_TEX0: u32 = 16;
pub const RENDER_TEX1: u32 = 32;
pub const RENDER_TEX2: u32 = 64;
pub const RENDER_TEX3: u32 = 128;
pub const RENDER_TEX4: u32 = 256;
pub const RENDER_TEX5: u32 = 512;
pub const RENDER_TEX6: u32 = 1024;
pub const RENDER_TEX7: u32 = 2048;
pub const RENDER_TEXTURES: u32 = 4080;
pub const RENDER_TOON: u32 = 4096;
pub const RENDER_ALPHA_SHIFT: u32 = 13;
pub const RENDER_ALPHA_BITS: u32 = 24576;
pub const RENDER_ALPHA_COMPAT: u32 = 0;
pub const RENDER_ALPHA_MAT: u32 = 8192;
pub const RENDER_ALPHA_VTX: u32 = 16384;
pub const RENDER_ALPHA_BOTH: u32 = 24576;
pub const RENDER_SHADOW: u32 = 67108864;
pub const RENDER_ZMODE_ALWAYS: u32 = 134217728;
pub const RENDER_NO_ZUPDATE: u32 = 536870912;
pub const RENDER_XLU: u32 = 1073741824;
pub const DOBJ_HIDDEN: u32 = 1;
pub const PTCL_LINKMAX: u32 = 16;
pub const ECB_GROUND: u32 = 32768;
pub const ECB_CEIL: u32 = 16384;
pub const ECB_WALLLEFT: u32 = 2048;
pub const ECB_WALLRIGHT: u32 = 32;
pub const LINE_GROUND: u32 = 1;
pub const LINE_CEIL: u32 = 2;
pub const LINE_WALLRIGHT: u32 = 4;
pub const LINE_WALLLEFT: u32 = 8;
pub const ASC_PRESERVE_FASTFALL: u32 = 1;
pub const ASC_PRESERVE_GFX: u32 = 2;
pub const ASC_PRESERVE_EYE: u32 = 128;
pub const ASC_1000: u32 = 4096;
pub const ASC_SKIP_SCRIPT: u32 = 16384;
pub const ASC_PRESERVE_VISIBILITY: u32 = 262144;
pub const ASC_80000: u32 = 524288;
pub const ASC_400000: u32 = 4194304;
pub const ASC_4000000: u32 = 67108864;
pub const ASC_8000000: u32 = 134217728;
pub const ASC_NOANIM: u32 = 536870912;
pub const ASID_DEADDOWN: u32 = 0;
pub const ASID_DEADLEFT: u32 = 1;
pub const ASID_DEADRIGHT: u32 = 2;
pub const ASID_DEADUP: u32 = 3;
pub const ASID_DEADUPSTAR: u32 = 4;
pub const ASID_DEADUPSTARICE: u32 = 5;
pub const ASID_DEADUPFALL: u32 = 6;
pub const ASID_DEADUPFALLHITCAMERA: u32 = 7;
pub const ASID_DEADUPFALLHITCAMERAFLAT: u32 = 8;
pub const ASID_DEADUPFALLICE: u32 = 9;
pub const ASID_DEADUPFALLHITCAMERAICE: u32 = 10;
pub const ASID_SLEEP: u32 = 11;
pub const ASID_REBIRTH: u32 = 12;
pub const ASID_REBIRTHWAIT: u32 = 13;
pub const ASID_WAIT: u32 = 14;
pub const ASID_WALKSLOW: u32 = 15;
pub const ASID_WALKMIDDLE: u32 = 16;
pub const ASID_WALKFAST: u32 = 17;
pub const ASID_TURN: u32 = 18;
pub const ASID_TURNRUN: u32 = 19;
pub const ASID_DASH: u32 = 20;
pub const ASID_RUN: u32 = 21;
pub const ASID_RUNDIRECT: u32 = 22;
pub const ASID_RUNBRAKE: u32 = 23;
pub const ASID_KNEEBEND: u32 = 24;
pub const ASID_JUMPF: u32 = 25;
pub const ASID_JUMPB: u32 = 26;
pub const ASID_JUMPAERIALF: u32 = 27;
pub const ASID_JUMPAERIALB: u32 = 28;
pub const ASID_FALL: u32 = 29;
pub const ASID_FALLF: u32 = 30;
pub const ASID_FALLB: u32 = 31;
pub const ASID_FALLAERIAL: u32 = 32;
pub const ASID_FALLAERIALF: u32 = 33;
pub const ASID_FALLAERIALB: u32 = 34;
pub const ASID_FALLSPECIAL: u32 = 35;
pub const ASID_FALLSPECIALF: u32 = 36;
pub const ASID_FALLSPECIALB: u32 = 37;
pub const ASID_DAMAGEFALL: u32 = 38;
pub const ASID_SQUAT: u32 = 39;
pub const ASID_SQUATWAIT: u32 = 40;
pub const ASID_SQUATRV: u32 = 41;
pub const ASID_LANDING: u32 = 42;
pub const ASID_LANDINGFALLSPECIAL: u32 = 43;
pub const ASID_ATTACK11: u32 = 44;
pub const ASID_ATTACK12: u32 = 45;
pub const ASID_ATTACK13: u32 = 46;
pub const ASID_ATTACK100START: u32 = 47;
pub const ASID_ATTACK100LOOP: u32 = 48;
pub const ASID_ATTACK100END: u32 = 49;
pub const ASID_ATTACKDASH: u32 = 50;
pub const ASID_ATTACKS3HI: u32 = 51;
pub const ASID_ATTACKS3HIS: u32 = 52;
pub const ASID_ATTACKS3S: u32 = 53;
pub const ASID_ATTACKS3LWS: u32 = 54;
pub const ASID_ATTACKS3LW: u32 = 55;
pub const ASID_ATTACKHI3: u32 = 56;
pub const ASID_ATTACKLW3: u32 = 57;
pub const ASID_ATTACKS4HI: u32 = 58;
pub const ASID_ATTACKS4HIS: u32 = 59;
pub const ASID_ATTACKS4S: u32 = 60;
pub const ASID_ATTACKS4LWS: u32 = 61;
pub const ASID_ATTACKS4LW: u32 = 62;
pub const ASID_ATTACKHI4: u32 = 63;
pub const ASID_ATTACKLW4: u32 = 64;
pub const ASID_ATTACKAIRN: u32 = 65;
pub const ASID_ATTACKAIRF: u32 = 66;
pub const ASID_ATTACKAIRB: u32 = 67;
pub const ASID_ATTACKAIRHI: u32 = 68;
pub const ASID_ATTACKAIRLW: u32 = 69;
pub const ASID_LANDINGAIRN: u32 = 70;
pub const ASID_LANDINGAIRF: u32 = 71;
pub const ASID_LANDINGAIRB: u32 = 72;
pub const ASID_LANDINGAIRHI: u32 = 73;
pub const ASID_LANDINGAIRLW: u32 = 74;
pub const ASID_DAMAGEHI1: u32 = 75;
pub const ASID_DAMAGEHI2: u32 = 76;
pub const ASID_DAMAGEHI3: u32 = 77;
pub const ASID_DAMAGEN1: u32 = 78;
pub const ASID_DAMAGEN2: u32 = 79;
pub const ASID_DAMAGEN3: u32 = 80;
pub const ASID_DAMAGELW1: u32 = 81;
pub const ASID_DAMAGELW2: u32 = 82;
pub const ASID_DAMAGELW3: u32 = 83;
pub const ASID_DAMAGEAIR1: u32 = 84;
pub const ASID_DAMAGEAIR2: u32 = 85;
pub const ASID_DAMAGEAIR3: u32 = 86;
pub const ASID_DAMAGEFLYHI: u32 = 87;
pub const ASID_DAMAGEFLYN: u32 = 88;
pub const ASID_DAMAGEFLYLW: u32 = 89;
pub const ASID_DAMAGEFLYTOP: u32 = 90;
pub const ASID_DAMAGEFLYROLL: u32 = 91;
pub const ASID_LIGHTGET: u32 = 92;
pub const ASID_HEAVYGET: u32 = 93;
pub const ASID_LIGHTTHROWF: u32 = 94;
pub const ASID_LIGHTTHROWB: u32 = 95;
pub const ASID_LIGHTTHROWHI: u32 = 96;
pub const ASID_LIGHTTHROWLW: u32 = 97;
pub const ASID_LIGHTTHROWDASH: u32 = 98;
pub const ASID_LIGHTTHROWDROP: u32 = 99;
pub const ASID_LIGHTTHROWAIRF: u32 = 100;
pub const ASID_LIGHTTHROWAIRB: u32 = 101;
pub const ASID_LIGHTTHROWAIRHI: u32 = 102;
pub const ASID_LIGHTTHROWAIRLW: u32 = 103;
pub const ASID_HEAVYTHROWF: u32 = 104;
pub const ASID_HEAVYTHROWB: u32 = 105;
pub const ASID_HEAVYTHROWHI: u32 = 106;
pub const ASID_HEAVYTHROWLW: u32 = 107;
pub const ASID_LIGHTTHROWF4: u32 = 108;
pub const ASID_LIGHTTHROWB4: u32 = 109;
pub const ASID_LIGHTTHROWHI4: u32 = 110;
pub const ASID_LIGHTTHROWLW4: u32 = 111;
pub const ASID_LIGHTTHROWAIRF4: u32 = 112;
pub const ASID_LIGHTTHROWAIRB4: u32 = 113;
pub const ASID_LIGHTTHROWAIRHI4: u32 = 114;
pub const ASID_LIGHTTHROWAIRLW4: u32 = 115;
pub const ASID_HEAVYTHROWF4: u32 = 116;
pub const ASID_HEAVYTHROWB4: u32 = 117;
pub const ASID_HEAVYTHROWHI4: u32 = 118;
pub const ASID_HEAVYTHROWLW4: u32 = 119;
pub const ASID_SWORDSWING1: u32 = 120;
pub const ASID_SWORDSWING3: u32 = 121;
pub const ASID_SWORDSWING4: u32 = 122;
pub const ASID_SWORDSWINGDASH: u32 = 123;
pub const ASID_BATSWING1: u32 = 124;
pub const ASID_BATSWING3: u32 = 125;
pub const ASID_BATSWING4: u32 = 126;
pub const ASID_BATSWINGDASH: u32 = 127;
pub const ASID_PARASOLSWING1: u32 = 128;
pub const ASID_PARASOLSWING3: u32 = 129;
pub const ASID_PARASOLSWING4: u32 = 130;
pub const ASID_PARASOLSWINGDASH: u32 = 131;
pub const ASID_HARISENSWING1: u32 = 132;
pub const ASID_HARISENSWING3: u32 = 133;
pub const ASID_HARISENSWING4: u32 = 134;
pub const ASID_HARISENSWINGDASH: u32 = 135;
pub const ASID_STARRODSWING1: u32 = 136;
pub const ASID_STARRODSWING3: u32 = 137;
pub const ASID_STARRODSWING4: u32 = 138;
pub const ASID_STARRODSWINGDASH: u32 = 139;
pub const ASID_LIPSTICKSWING1: u32 = 140;
pub const ASID_LIPSTICKSWING3: u32 = 141;
pub const ASID_LIPSTICKSWING4: u32 = 142;
pub const ASID_LIPSTICKSWINGDASH: u32 = 143;
pub const ASID_ITEMPARASOLOPEN: u32 = 144;
pub const ASID_ITEMPARASOLFALL: u32 = 145;
pub const ASID_ITEMPARASOLFALLSPECIAL: u32 = 146;
pub const ASID_ITEMPARASOLDAMAGEFALL: u32 = 147;
pub const ASID_LGUNSHOOT: u32 = 148;
pub const ASID_LGUNSHOOTAIR: u32 = 149;
pub const ASID_LGUNSHOOTEMPTY: u32 = 150;
pub const ASID_LGUNSHOOTAIREMPTY: u32 = 151;
pub const ASID_FIREFLOWERSHOOT: u32 = 152;
pub const ASID_FIREFLOWERSHOOTAIR: u32 = 153;
pub const ASID_ITEMSCREW: u32 = 154;
pub const ASID_ITEMSCREWAIR: u32 = 155;
pub const ASID_DAMAGESCREW: u32 = 156;
pub const ASID_DAMAGESCREWAIR: u32 = 157;
pub const ASID_ITEMSCOPESTART: u32 = 158;
pub const ASID_ITEMSCOPERAPID: u32 = 159;
pub const ASID_ITEMSCOPEFIRE: u32 = 160;
pub const ASID_ITEMSCOPEEND: u32 = 161;
pub const ASID_ITEMSCOPEAIRSTART: u32 = 162;
pub const ASID_ITEMSCOPEAIRRAPID: u32 = 163;
pub const ASID_ITEMSCOPEAIRFIRE: u32 = 164;
pub const ASID_ITEMSCOPEAIREND: u32 = 165;
pub const ASID_ITEMSCOPESTARTEMPTY: u32 = 166;
pub const ASID_ITEMSCOPERAPIDEMPTY: u32 = 167;
pub const ASID_ITEMSCOPEFIREEMPTY: u32 = 168;
pub const ASID_ITEMSCOPEENDEMPTY: u32 = 169;
pub const ASID_ITEMSCOPEAIRSTARTEMPTY: u32 = 170;
pub const ASID_ITEMSCOPEAIRRAPIDEMPTY: u32 = 171;
pub const ASID_ITEMSCOPEAIRFIREEMPTY: u32 = 172;
pub const ASID_ITEMSCOPEAIRENDEMPTY: u32 = 173;
pub const ASID_LIFTWAIT: u32 = 174;
pub const ASID_LIFTWALK1: u32 = 175;
pub const ASID_LIFTWALK2: u32 = 176;
pub const ASID_LIFTTURN: u32 = 177;
pub const ASID_GUARDON: u32 = 178;
pub const ASID_GUARD: u32 = 179;
pub const ASID_GUARDOFF: u32 = 180;
pub const ASID_GUARDSETOFF: u32 = 181;
pub const ASID_GUARDREFLECT: u32 = 182;
pub const ASID_DOWNBOUNDU: u32 = 183;
pub const ASID_DOWNWAITU: u32 = 184;
pub const ASID_DOWNDAMAGEU: u32 = 185;
pub const ASID_DOWNSTANDU: u32 = 186;
pub const ASID_DOWNATTACKU: u32 = 187;
pub const ASID_DOWNFOWARDU: u32 = 188;
pub const ASID_DOWNBACKU: u32 = 189;
pub const ASID_DOWNSPOTU: u32 = 190;
pub const ASID_DOWNBOUNDD: u32 = 191;
pub const ASID_DOWNWAITD: u32 = 192;
pub const ASID_DOWNDAMAGED: u32 = 193;
pub const ASID_DOWNSTANDD: u32 = 194;
pub const ASID_DOWNATTACKD: u32 = 195;
pub const ASID_DOWNFOWARDD: u32 = 196;
pub const ASID_DOWNBACKD: u32 = 197;
pub const ASID_DOWNSPOTD: u32 = 198;
pub const ASID_PASSIVE: u32 = 199;
pub const ASID_PASSIVESTANDF: u32 = 200;
pub const ASID_PASSIVESTANDB: u32 = 201;
pub const ASID_PASSIVEWALL: u32 = 202;
pub const ASID_PASSIVEWALLJUMP: u32 = 203;
pub const ASID_PASSIVECEIL: u32 = 204;
pub const ASID_SHIELDBREAKFLY: u32 = 205;
pub const ASID_SHIELDBREAKFALL: u32 = 206;
pub const ASID_SHIELDBREAKDOWNU: u32 = 207;
pub const ASID_SHIELDBREAKDOWND: u32 = 208;
pub const ASID_SHIELDBREAKSTANDU: u32 = 209;
pub const ASID_SHIELDBREAKSTANDD: u32 = 210;
pub const ASID_FURAFURA: u32 = 211;
pub const ASID_CATCH: u32 = 212;
pub const ASID_CATCHPULL: u32 = 213;
pub const ASID_CATCHDASH: u32 = 214;
pub const ASID_CATCHDASHPULL: u32 = 215;
pub const ASID_CATCHWAIT: u32 = 216;
pub const ASID_CATCHATTACK: u32 = 217;
pub const ASID_CATCHCUT: u32 = 218;
pub const ASID_THROWF: u32 = 219;
pub const ASID_THROWB: u32 = 220;
pub const ASID_THROWHI: u32 = 221;
pub const ASID_THROWLW: u32 = 222;
pub const ASID_CAPTUREPULLEDHI: u32 = 223;
pub const ASID_CAPTUREWAITHI: u32 = 224;
pub const ASID_CAPTUREDAMAGEHI: u32 = 225;
pub const ASID_CAPTUREPULLEDLW: u32 = 226;
pub const ASID_CAPTUREWAITLW: u32 = 227;
pub const ASID_CAPTUREDAMAGELW: u32 = 228;
pub const ASID_CAPTURECUT: u32 = 229;
pub const ASID_CAPTUREJUMP: u32 = 230;
pub const ASID_CAPTURENECK: u32 = 231;
pub const ASID_CAPTUREFOOT: u32 = 232;
pub const ASID_ESCAPEF: u32 = 233;
pub const ASID_ESCAPEB: u32 = 234;
pub const ASID_ESCAPE: u32 = 235;
pub const ASID_ESCAPEAIR: u32 = 236;
pub const ASID_REBOUNDSTOP: u32 = 237;
pub const ASID_REBOUND: u32 = 238;
pub const ASID_THROWNF: u32 = 239;
pub const ASID_THROWNB: u32 = 240;
pub const ASID_THROWNHI: u32 = 241;
pub const ASID_THROWNLW: u32 = 242;
pub const ASID_THROWNLWWOMEN: u32 = 243;
pub const ASID_PASS: u32 = 244;
pub const ASID_OTTOTTO: u32 = 245;
pub const ASID_OTTOTTOWAIT: u32 = 246;
pub const ASID_FLYREFLECTWALL: u32 = 247;
pub const ASID_FLYREFLECTCEIL: u32 = 248;
pub const ASID_STOPWALL: u32 = 249;
pub const ASID_STOPCEIL: u32 = 250;
pub const ASID_MISSFOOT: u32 = 251;
pub const ASID_CLIFFCATCH: u32 = 252;
pub const ASID_CLIFFWAIT: u32 = 253;
pub const ASID_CLIFFCLIMBSLOW: u32 = 254;
pub const ASID_CLIFFCLIMBQUICK: u32 = 255;
pub const ASID_CLIFFATTACKSLOW: u32 = 256;
pub const ASID_CLIFFATTACKQUICK: u32 = 257;
pub const ASID_CLIFFESCAPESLOW: u32 = 258;
pub const ASID_CLIFFESCAPEQUICK: u32 = 259;
pub const ASID_CLIFFJUMPSLOW1: u32 = 260;
pub const ASID_CLIFFJUMPSLOW2: u32 = 261;
pub const ASID_CLIFFJUMPQUICK1: u32 = 262;
pub const ASID_CLIFFJUMPQUICK2: u32 = 263;
pub const ASID_APPEALR: u32 = 264;
pub const ASID_APPEALL: u32 = 265;
pub const ASID_SHOULDEREDWAIT: u32 = 266;
pub const ASID_SHOULDEREDWALKSLOW: u32 = 267;
pub const ASID_SHOULDEREDWALKMIDDLE: u32 = 268;
pub const ASID_SHOULDEREDWALKFAST: u32 = 269;
pub const ASID_SHOULDEREDTURN: u32 = 270;
pub const ASID_THROWNFF: u32 = 271;
pub const ASID_THROWNFB: u32 = 272;
pub const ASID_THROWNFHI: u32 = 273;
pub const ASID_THROWNFLW: u32 = 274;
pub const ASID_CAPTURECAPTAIN: u32 = 275;
pub const ASID_CAPTUREYOSHI: u32 = 276;
pub const ASID_YOSHIEGG: u32 = 277;
pub const ASID_CAPTUREKOOPA: u32 = 278;
pub const ASID_CAPTUREDAMAGEKOOPA: u32 = 279;
pub const ASID_CAPTUREWAITKOOPA: u32 = 280;
pub const ASID_THROWNKOOPAF: u32 = 281;
pub const ASID_THROWNKOOPAB: u32 = 282;
pub const ASID_CAPTUREKOOPAAIR: u32 = 283;
pub const ASID_CAPTUREDAMAGEKOOPAAIR: u32 = 284;
pub const ASID_CAPTUREWAITKOOPAAIR: u32 = 285;
pub const ASID_THROWNKOOPAAIRF: u32 = 286;
pub const ASID_THROWNKOOPAAIRB: u32 = 287;
pub const ASID_CAPTUREKIRBY: u32 = 288;
pub const ASID_CAPTUREWAITKIRBY: u32 = 289;
pub const ASID_THROWNKIRBYSTAR: u32 = 290;
pub const ASID_THROWNCOPYSTAR: u32 = 291;
pub const ASID_THROWNKIRBY: u32 = 292;
pub const ASID_BARRELWAIT: u32 = 293;
pub const ASID_BURY: u32 = 294;
pub const ASID_BURYWAIT: u32 = 295;
pub const ASID_BURYJUMP: u32 = 296;
pub const ASID_DAMAGESONG: u32 = 297;
pub const ASID_DAMAGESONGWAIT: u32 = 298;
pub const ASID_DAMAGESONGRV: u32 = 299;
pub const ASID_DAMAGEBIND: u32 = 300;
pub const ASID_CAPTUREMEWTWO: u32 = 301;
pub const ASID_CAPTUREMEWTWOAIR: u32 = 302;
pub const ASID_THROWNMEWTWO: u32 = 303;
pub const ASID_THROWNMEWTWOAIR: u32 = 304;
pub const ASID_WARPSTARJUMP: u32 = 305;
pub const ASID_WARPSTARFALL: u32 = 306;
pub const ASID_HAMMERWAIT: u32 = 307;
pub const ASID_HAMMERWALK: u32 = 308;
pub const ASID_HAMMERTURN: u32 = 309;
pub const ASID_HAMMERKNEEBEND: u32 = 310;
pub const ASID_HAMMERFALL: u32 = 311;
pub const ASID_HAMMERJUMP: u32 = 312;
pub const ASID_HAMMERLANDING: u32 = 313;
pub const ASID_KINOKOGIANTSTART: u32 = 314;
pub const ASID_KINOKOGIANTSTARTAIR: u32 = 315;
pub const ASID_KINOKOGIANTEND: u32 = 316;
pub const ASID_KINOKOGIANTENDAIR: u32 = 317;
pub const ASID_KINOKOSMALLSTART: u32 = 318;
pub const ASID_KINOKOSMALLSTARTAIR: u32 = 319;
pub const ASID_KINOKOSMALLEND: u32 = 320;
pub const ASID_KINOKOSMALLENDAIR: u32 = 321;
pub const ASID_ENTRY: u32 = 322;
pub const ASID_ENTRYSTART: u32 = 323;
pub const ASID_ENTRYEND: u32 = 324;
pub const ASID_DAMAGEICE: u32 = 325;
pub const ASID_DAMAGEICEJUMP: u32 = 326;
pub const ASID_CAPTUREMASTERHAND: u32 = 327;
pub const ASID_CAPTUREDAMAGEMASTERHAND: u32 = 328;
pub const ASID_CAPTUREWAITMASTERHAND: u32 = 329;
pub const ASID_THROWNMASTERHAND: u32 = 330;
pub const ASID_CAPTUREKIRBYYOSHI: u32 = 331;
pub const ASID_KIRBYYOSHIEGG: u32 = 332;
pub const ASID_CAPTURELEADEAD: u32 = 333;
pub const ASID_CAPTURELIKELIKE: u32 = 334;
pub const ASID_DOWNREFLECT: u32 = 335;
pub const ASID_CAPTURECRAZYHAND: u32 = 336;
pub const ASID_CAPTUREDAMAGECRAZYHAND: u32 = 337;
pub const ASID_CAPTUREWAITCRAZYHAND: u32 = 338;
pub const ASID_THROWNCRAZYHAND: u32 = 339;
pub const ASID_BARRELCANNONWAIT: u32 = 340;
pub const ASID_ACTIONABLE: u32 = 1000;
pub const ASID_ACTIONABLEGROUND: u32 = 1001;
pub const ASID_ACTIONABLEAIR: u32 = 1002;
pub const ASID_DAMAGEAIR: u32 = 1003;
pub const ASID_JUMPS: u32 = 1004;
pub const ASID_FALLS: u32 = 1005;
pub const MATCH_TIMER_FROZEN: u32 = 0;
pub const MATCH_TIMER_HIDE: u32 = 1;
pub const MATCH_TIMER_COUNTDOWN: u32 = 2;
pub const MATCH_TIMER_COUNTUP: u32 = 3;
pub const MATCH_MATCHTYPE_TIME: u32 = 0;
pub const MATCH_MATCHTYPE_STOCK: u32 = 1;
pub const MATCH_MATCHTYPE_COIN: u32 = 2;
pub const MATCH_HUDPOS_NONE: u32 = 0;
pub const MATCH_HUDPOS_ONE: u32 = 1;
pub const MATCH_HUDPOS_TWO: u32 = 2;
pub const MATCH_HUDPOS_THREE: u32 = 3;
pub const MATCH_HUDPOS_FOUR: u32 = 4;
pub const MATCH_HUDPOS_SIX: u32 = 5;
pub const MATCH_HUDPOS_UNK: u32 = 6;
pub const MATCH_HUDPOS_FOURCOMPACT: u32 = 7;
pub const MATCH_PAUSEHUD_HIDE: u32 = 1;
pub const MATCH_ITEMFREQ_OFF: i32 = -1;
pub const MATCH_ITEMFREQ_VERYLOW: u32 = 0;
pub const MATCH_ITEMFREQ_LOW: u32 = 1;
pub const MATCH_ITEMFREQ_MEDIUM: u32 = 2;
pub const MATCH_ITEMFREQ_HIGH: u32 = 3;
pub const MATCH_ITEMFREQ_VERYHIGH: u32 = 4;
pub const PAD_BUTTON_DPAD_LEFT: u32 = 1;
pub const PAD_BUTTON_DPAD_RIGHT: u32 = 2;
pub const PAD_BUTTON_DPAD_DOWN: u32 = 4;
pub const PAD_BUTTON_DPAD_UP: u32 = 8;
pub const PAD_TRIGGER_Z: u32 = 16;
pub const PAD_TRIGGER_R: u32 = 32;
pub const PAD_TRIGGER_L: u32 = 64;
pub const PAD_BUTTON_A: u32 = 256;
pub const PAD_BUTTON_B: u32 = 512;
pub const PAD_BUTTON_X: u32 = 1024;
pub const PAD_BUTTON_Y: u32 = 2048;
pub const PAD_BUTTON_START: u32 = 4096;
pub const PAD_BUTTON_UP: u32 = 65536;
pub const PAD_BUTTON_DOWN: u32 = 131072;
pub const PAD_BUTTON_LEFT: u32 = 262144;
pub const PAD_BUTTON_RIGHT: u32 = 524288;
pub const HSD_BUTTON_DPAD_LEFT: u32 = 1;
pub const HSD_BUTTON_DPAD_RIGHT: u32 = 2;
pub const HSD_BUTTON_DPAD_DOWN: u32 = 4;
pub const HSD_BUTTON_DPAD_UP: u32 = 8;
pub const HSD_TRIGGER_Z: u32 = 16;
pub const HSD_TRIGGER_R: u32 = 32;
pub const HSD_TRIGGER_L: u32 = 64;
pub const HSD_BUTTON_A: u32 = 256;
pub const HSD_BUTTON_B: u32 = 512;
pub const HSD_BUTTON_X: u32 = 1024;
pub const HSD_BUTTON_Y: u32 = 2048;
pub const HSD_BUTTON_START: u32 = 4096;
pub const HSD_BUTTON_UP: u32 = 65536;
pub const HSD_BUTTON_DOWN: u32 = 131072;
pub const HSD_BUTTON_LEFT: u32 = 262144;
pub const HSD_BUTTON_RIGHT: u32 = 524288;
pub const DB_FLAG: u32 = 0;
pub const M_PI: f64 = 3.141592653589793;
pub const M_1DEGREE: f64 = 0.0174533;
pub const __GNUC_VA_LIST: u32 = 1;
pub const OS_CONSOLE_RETAIL4: u32 = 4;
pub const OS_CONSOLE_RETAIL3: u32 = 3;
pub const OS_CONSOLE_RETAIL2: u32 = 2;
pub const OS_CONSOLE_RETAIL1: u32 = 1;
pub const OS_CONSOLE_DEVHW4: u32 = 268435463;
pub const OS_CONSOLE_DEVHW3: u32 = 268435462;
pub const OS_CONSOLE_DEVHW2: u32 = 268435461;
pub const OS_CONSOLE_DEVHW1: u32 = 268435460;
pub const OS_CONSOLE_MINNOW: u32 = 268435459;
pub const OS_CONSOLE_ARTHUR: u32 = 268435458;
pub const OS_CONSOLE_PC_EMULATOR: u32 = 268435457;
pub const OS_CONSOLE_EMULATOR: u32 = 268435456;
pub const OS_CONSOLE_DEVELOPMENT: u32 = 268435456;
pub const CARD_MAX_FILE: u32 = 127;
pub const CARD_FILENAME_MAX: u32 = 32;
pub const CARD_ICON_MAX: u32 = 8;
pub const CARD_COMMENT_SIZE: u32 = 64;
pub const CARD_WORKAREA_SIZE: u32 = 40960;
pub const CARD_READ_SIZE: u32 = 512;
pub const CARD_RESULT_UNLOCKED: u32 = 1;
pub const CARD_RESULT_READY: u32 = 0;
pub const CARD_RESULT_BUSY: i32 = -1;
pub const CARD_RESULT_WRONGDEVICE: i32 = -2;
pub const CARD_RESULT_NOCARD: i32 = -3;
pub const CARD_RESULT_NOFILE: i32 = -4;
pub const CARD_RESULT_IOERROR: i32 = -5;
pub const CARD_RESULT_BROKEN: i32 = -6;
pub const CARD_RESULT_EXIST: i32 = -7;
pub const CARD_RESULT_NOENT: i32 = -8;
pub const CARD_RESULT_INSSPACE: i32 = -9;
pub const CARD_RESULT_NOPERM: i32 = -10;
pub const CARD_RESULT_LIMIT: i32 = -11;
pub const CARD_RESULT_NAMETOOLONG: i32 = -12;
pub const CARD_RESULT_ENCODING: i32 = -13;
pub const CARD_RESULT_CANCELED: i32 = -14;
pub const CARD_RESULT_FATAL_ERROR: i32 = -128;
pub const ITEM_CAPSULE: u32 = 0;
pub const ITEM_BOX: u32 = 1;
pub const ITEM_BARREL: u32 = 2;
pub const ITEM_EGG: u32 = 3;
pub const ITEM_PARTYBALL: u32 = 4;
pub const ITEM_BARRELCANNON: u32 = 5;
pub const ITEM_BOBOMB: u32 = 6;
pub const ITEM_MRSATURN: u32 = 7;
pub const ITEM_HEARTCONTAINER: u32 = 8;
pub const ITEM_MAXIMTOMATO: u32 = 9;
pub const ITEM_STARMAN: u32 = 10;
pub const ITEM_HOMERUNBAT: u32 = 11;
pub const ITEM_BEAMSWORD: u32 = 12;
pub const ITEM_PARASOL: u32 = 13;
pub const ITEM_GREENSHELL: u32 = 14;
pub const ITEM_REDSHELL: u32 = 15;
pub const ITEM_RAYGUN: u32 = 16;
pub const ITEM_FREEZIE: u32 = 17;
pub const ITEM_FOOD: u32 = 18;
pub const ITEM_MOTIONSENSORBOMB: u32 = 19;
pub const ITEM_FLIPPER: u32 = 20;
pub const ITEM_SUPERSCOPE: u32 = 21;
pub const ITEM_STARROD: u32 = 22;
pub const ITEM_LIPSSTICK: u32 = 23;
pub const ITEM_FAN: u32 = 24;
pub const ITEM_FIREFLOWER: u32 = 25;
pub const ITEM_SUPERMUSHROOM: u32 = 26;
pub const ITEM_POISONMUSHROOM: u32 = 27;
pub const ITEM_HAMMER: u32 = 28;
pub const ITEM_WARPSTAR: u32 = 29;
pub const ITEM_SCREWATTACK: u32 = 30;
pub const ITEM_BUNNYHOOD: u32 = 31;
pub const ITEM_METALBOX: u32 = 32;
pub const ITEM_CLOAKINGDEVICE: u32 = 33;
pub const ITEM_POKEBALL: u32 = 34;
pub const ITEM_RAYGUNUNK: u32 = 35;
pub const ITEM_STARRODSTAR: u32 = 36;
pub const ITEM_LIPSSTICKDUST: u32 = 37;
pub const ITEM_SUPERSCOPEBEAM: u32 = 38;
pub const ITEM_RAYGUNBEAM: u32 = 39;
pub const ITEM_HAMMERHEAD: u32 = 40;
pub const ITEM_FLOWER: u32 = 41;
pub const ITEM_YOSHISEGG: u32 = 42;
pub const ITEM_GOOMBA: u32 = 43;
pub const ITEM_REDEAD: u32 = 44;
pub const ITEM_OCTAROK: u32 = 45;
pub const ITEM_OTTOSEA: u32 = 46;
pub const ITEM_STONE: u32 = 47;
pub const ITEM_MARIOFIRE: u32 = 48;
pub const ITEM_DRMARIOPILL: u32 = 49;
pub const ITEM_KIRBYCUTTER: u32 = 50;
pub const ITEM_KIRBYHAMMER: u32 = 51;
pub const ITEM_KIRBYABILITYSTAR: u32 = 52;
pub const ITEM_POKERANDOM: u32 = 160;
pub const ITEM_GOLDEEN: u32 = 161;
pub const ITEM_CHICORITA: u32 = 162;
pub const ITEM_SNORLAX: u32 = 163;
pub const ITEM_BLASTOISE: u32 = 164;
pub const ITEM_WEEZING: u32 = 165;
pub const ITEM_CHARIZARD: u32 = 166;
pub const ITEM_MOLTRES: u32 = 167;
pub const ITEM_ZAPDOS: u32 = 168;
pub const ITEM_ARCTICUNO: u32 = 169;
pub const ITEM_WOBBUFFET: u32 = 170;
pub const ITEM_SCIZOR: u32 = 171;
pub const ITEM_UNOWN: u32 = 172;
pub const ITEM_ENTEI: u32 = 173;
pub const ITEM_RAIKOU: u32 = 174;
pub const ITEM_SUICUNE: u32 = 175;
pub const ITEM_BELLOSSOM: u32 = 176;
pub const ITEM_ELECTRODE: u32 = 177;
pub const ITEM_LUGIA: u32 = 178;
pub const ITEM_HOOH: u32 = 179;
pub const ITEM_DITTO: u32 = 180;
pub const ITEM_CLEFAIRY: u32 = 181;
pub const ITEM_TOGEPI: u32 = 182;
pub const ITEM_MEW: u32 = 183;
pub const ITEM_CELEBI: u32 = 184;
pub const ITEM_STARYU: u32 = 185;
pub const ITEM_CHANSEY: u32 = 186;
pub const ITEM_PORYGON2: u32 = 187;
pub const ITEM_CYNDAQUIL: u32 = 188;
pub const ITEM_MARILL: u32 = 189;
pub const ITEM_VENUSAUR: u32 = 190;
pub const ITEM_TARGET: u32 = 209;
pub const ITEMSTATE_UPDATEANIM: u32 = 2;
pub const ITEMSTATE_GRAB: u32 = 4;
pub const ITEMSTATE_KEEPHIT: u32 = 16;
pub const ITHOLD_HAND: u32 = 0;
pub const ITHOLD_HEAVY: u32 = 1;
pub const ITHOLD_NONE: u32 = 8;
pub const MEMCARD_BANNER_SIZE: u32 = 6144;
pub const MEMCARD_ICON_SIZE: u32 = 1024;
pub const map_isBG: u32 = 1073741824;
pub const map_isUnk: u32 = 2147483648;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtSymbolLookup {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtSymbols {
    _unused: [u8; 0],
}
pub type s8 = ::std::os::raw::c_schar;
pub type s16 = ::std::os::raw::c_short;
pub type s32 = ::std::os::raw::c_int;
pub type s64 = ::std::os::raw::c_longlong;
pub type u8_ = ::std::os::raw::c_uchar;
pub type u16_ = ::std::os::raw::c_ushort;
pub type u32_ = ::std::os::raw::c_uint;
pub type u64_ = ::std::os::raw::c_ulonglong;
pub type f32_ = f32;
pub type f64_ = f64;
pub type Mtx = [[f32; 4usize]; 3usize];
pub type MtxPtr = *mut [f32; 4usize];
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Vec2 {
    pub X: f32,
    pub Y: f32,
}
#[test]
fn bindgen_test_layout_Vec2() {
    assert_eq!(
        ::std::mem::size_of::<Vec2>(),
        8usize,
        concat!("Size of: ", stringify!(Vec2))
    );
    assert_eq!(
        ::std::mem::align_of::<Vec2>(),
        4usize,
        concat!("Alignment of ", stringify!(Vec2))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Vec2>())).X as *const _ as usize },
        0usize,
        concat!("Offset of field: ", stringify!(Vec2), "::", stringify!(X))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Vec2>())).Y as *const _ as usize },
        4usize,
        concat!("Offset of field: ", stringify!(Vec2), "::", stringify!(Y))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Vec3 {
    pub X: f32,
    pub Y: f32,
    pub Z: f32,
}
#[test]
fn bindgen_test_layout_Vec3() {
    assert_eq!(
        ::std::mem::size_of::<Vec3>(),
        12usize,
        concat!("Size of: ", stringify!(Vec3))
    );
    assert_eq!(
        ::std::mem::align_of::<Vec3>(),
        4usize,
        concat!("Alignment of ", stringify!(Vec3))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Vec3>())).X as *const _ as usize },
        0usize,
        concat!("Offset of field: ", stringify!(Vec3), "::", stringify!(X))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Vec3>())).Y as *const _ as usize },
        4usize,
        concat!("Offset of field: ", stringify!(Vec3), "::", stringify!(Y))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Vec3>())).Z as *const _ as usize },
        8usize,
        concat!("Offset of field: ", stringify!(Vec3), "::", stringify!(Z))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Vec4 {
    pub X: f32,
    pub Y: f32,
    pub Z: f32,
    pub W: f32,
}
#[test]
fn bindgen_test_layout_Vec4() {
    assert_eq!(
        ::std::mem::size_of::<Vec4>(),
        16usize,
        concat!("Size of: ", stringify!(Vec4))
    );
    assert_eq!(
        ::std::mem::align_of::<Vec4>(),
        4usize,
        concat!("Alignment of ", stringify!(Vec4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Vec4>())).X as *const _ as usize },
        0usize,
        concat!("Offset of field: ", stringify!(Vec4), "::", stringify!(X))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Vec4>())).Y as *const _ as usize },
        4usize,
        concat!("Offset of field: ", stringify!(Vec4), "::", stringify!(Y))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Vec4>())).Z as *const _ as usize },
        8usize,
        concat!("Offset of field: ", stringify!(Vec4), "::", stringify!(Z))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Vec4>())).W as *const _ as usize },
        12usize,
        concat!("Offset of field: ", stringify!(Vec4), "::", stringify!(W))
    );
}
extern "C" {
    pub fn Nametag_GetText(tag_index: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn Audio_ResetCache(group_index: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Audio_QueueFileLoad(group_index: ::std::os::raw::c_int, ssm_index: u64_);
}
extern "C" {
    pub fn Audio_UpdateCache();
}
extern "C" {
    pub fn Audio_SyncLoadAll();
}
extern "C" {
    pub fn BGM_GetMenuBGM() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn BGM_Play(hpsID: ::std::os::raw::c_int);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ArchiveInfo {
    pub file_size: ::std::os::raw::c_int,
    pub reloc_offset: *mut ::std::os::raw::c_int,
    pub reloc_num: ::std::os::raw::c_int,
    pub symbol_num: ::std::os::raw::c_int,
    pub refsymbol_num: ::std::os::raw::c_int,
    pub archive_vers: ::std::os::raw::c_int,
    pub unk1: ::std::os::raw::c_int,
    pub unk2: ::std::os::raw::c_int,
    pub general_points: *mut ::std::os::raw::c_int,
    pub reloc_table: *mut ::std::os::raw::c_int,
    pub symbols1: *mut ::std::os::raw::c_int,
    pub refsymmbols: *mut ::std::os::raw::c_int,
    pub symbols2: *mut ::std::os::raw::c_int,
    pub file_start: *mut ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_ArchiveInfo() {
    assert_eq!(
        ::std::mem::size_of::<ArchiveInfo>(),
        88usize,
        concat!("Size of: ", stringify!(ArchiveInfo))
    );
    assert_eq!(
        ::std::mem::align_of::<ArchiveInfo>(),
        8usize,
        concat!("Alignment of ", stringify!(ArchiveInfo))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).file_size as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(file_size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).reloc_offset as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(reloc_offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).reloc_num as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(reloc_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).symbol_num as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(symbol_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).refsymbol_num as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(refsymbol_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).archive_vers as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(archive_vers)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).unk1 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(unk1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).unk2 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(unk2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).general_points as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(general_points)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).reloc_table as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(reloc_table)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).symbols1 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(symbols1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).refsymmbols as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(refsymmbols)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).symbols2 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(symbols2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ArchiveInfo>())).file_start as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(ArchiveInfo),
            "::",
            stringify!(file_start)
        )
    );
}
extern "C" {
    pub fn File_Load(filename: *mut ::std::os::raw::c_char) -> *mut ArchiveInfo;
}
extern "C" {
    pub fn File_LoadInitReturnSymbol(
        filename: *mut ::std::os::raw::c_char,
        ptr: *mut ::std::os::raw::c_void,
        ...
    );
}
extern "C" {
    pub fn File_GetSymbol(
        archive: *mut ::std::os::raw::c_void,
        symbol: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_void;
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct GXColor {
    pub r: u8_,
    pub g: u8_,
    pub b: u8_,
    pub a: u8_,
}
#[test]
fn bindgen_test_layout_GXColor() {
    assert_eq!(
        ::std::mem::size_of::<GXColor>(),
        4usize,
        concat!("Size of: ", stringify!(GXColor))
    );
    assert_eq!(
        ::std::mem::align_of::<GXColor>(),
        1usize,
        concat!("Alignment of ", stringify!(GXColor))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GXColor>())).r as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(GXColor),
            "::",
            stringify!(r)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GXColor>())).g as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(GXColor),
            "::",
            stringify!(g)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GXColor>())).b as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(GXColor),
            "::",
            stringify!(b)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GXColor>())).a as *const _ as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(GXColor),
            "::",
            stringify!(a)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ColorOverlay {
    pub timer: ::std::os::raw::c_int,
    pub pri: ::std::os::raw::c_int,
    pub ptr1: *mut ::std::os::raw::c_int,
    pub loop_: ::std::os::raw::c_int,
    pub ptr2: *mut ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub alloc: *mut ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_int,
    pub colanim: ::std::os::raw::c_int,
    pub hex: GXColor,
    pub color_red: f32,
    pub color_green: f32,
    pub color_blue: f32,
    pub color_alpha: f32,
    pub colorblend_red: f32,
    pub colorblend_green: f32,
    pub colorblend_blue: f32,
    pub colorblend_alpha: f32,
    pub light_color: GXColor,
    pub light_red: f32,
    pub light_green: f32,
    pub light_blue: f32,
    pub light_alpha: f32,
    pub lightblend_red: f32,
    pub lightblend_green: f32,
    pub lightblend_blue: f32,
    pub lightblend_alpha: f32,
    pub light_angle: f32,
    pub light_unk: f32,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub __bindgen_padding_0: [u8; 7usize],
}
#[test]
fn bindgen_test_layout_ColorOverlay() {
    assert_eq!(
        ::std::mem::size_of::<ColorOverlay>(),
        152usize,
        concat!("Size of: ", stringify!(ColorOverlay))
    );
    assert_eq!(
        ::std::mem::align_of::<ColorOverlay>(),
        8usize,
        concat!("Alignment of ", stringify!(ColorOverlay))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).timer as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(timer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).pri as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(pri)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).ptr1 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(ptr1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).loop_ as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(loop_)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).ptr2 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(ptr2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).x14 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).alloc as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(alloc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).x1c as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).x20 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).x24 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).colanim as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(colanim)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).hex as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(hex)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).color_red as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(color_red)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).color_green as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(color_green)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).color_blue as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(color_blue)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).color_alpha as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(color_alpha)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).colorblend_red as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(colorblend_red)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).colorblend_green as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(colorblend_green)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).colorblend_blue as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(colorblend_blue)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).colorblend_alpha as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(colorblend_alpha)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).light_color as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(light_color)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).light_red as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(light_red)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).light_green as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(light_green)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).light_blue as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(light_blue)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).light_alpha as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(light_alpha)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).lightblend_red as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(lightblend_red)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).lightblend_green as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(lightblend_green)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).lightblend_blue as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(lightblend_blue)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).lightblend_alpha as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(lightblend_alpha)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).light_angle as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(light_angle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ColorOverlay>())).light_unk as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(ColorOverlay),
            "::",
            stringify!(light_unk)
        )
    );
}
impl ColorOverlay {
    #[inline]
    pub fn color_enable(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_color_enable(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn light_enable(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_light_enable(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        color_enable: ::std::os::raw::c_uchar,
        flag2: ::std::os::raw::c_uchar,
        light_enable: ::std::os::raw::c_uchar,
        flag4: ::std::os::raw::c_uchar,
        flag5: ::std::os::raw::c_uchar,
        flag6: ::std::os::raw::c_uchar,
        flag7: ::std::os::raw::c_uchar,
        flag8: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let color_enable: u8 = unsafe { ::std::mem::transmute(color_enable) };
            color_enable as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let flag2: u8 = unsafe { ::std::mem::transmute(flag2) };
            flag2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let light_enable: u8 = unsafe { ::std::mem::transmute(light_enable) };
            light_enable as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let flag4: u8 = unsafe { ::std::mem::transmute(flag4) };
            flag4 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let flag5: u8 = unsafe { ::std::mem::transmute(flag5) };
            flag5 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let flag6: u8 = unsafe { ::std::mem::transmute(flag6) };
            flag6 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let flag7: u8 = unsafe { ::std::mem::transmute(flag7) };
            flag7 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let flag8: u8 = unsafe { ::std::mem::transmute(flag8) };
            flag8 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct GOBJ {
    pub entity_class: ::std::os::raw::c_short,
    pub p_link: ::std::os::raw::c_char,
    pub gx_link: ::std::os::raw::c_char,
    pub p_priority: ::std::os::raw::c_char,
    pub gx_pri: ::std::os::raw::c_char,
    pub obj_kind: ::std::os::raw::c_char,
    pub data_kind: ::std::os::raw::c_char,
    pub next: *mut GOBJ,
    pub previous: *mut GOBJ,
    pub nextOrdered: *mut GOBJ,
    pub previousOrdered: *mut GOBJ,
    pub proc_: *mut GOBJProc,
    pub gx_cb: *mut ::std::os::raw::c_void,
    pub cobj_links: u64_,
    pub hsd_object: *mut ::std::os::raw::c_void,
    pub userdata: *mut ::std::os::raw::c_void,
    pub destructor_function: ::std::os::raw::c_int,
    pub unk_linked_list: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_GOBJ() {
    assert_eq!(
        ::std::mem::size_of::<GOBJ>(),
        88usize,
        concat!("Size of: ", stringify!(GOBJ))
    );
    assert_eq!(
        ::std::mem::align_of::<GOBJ>(),
        8usize,
        concat!("Alignment of ", stringify!(GOBJ))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).entity_class as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(entity_class)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).p_link as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(p_link)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).gx_link as *const _ as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(gx_link)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).p_priority as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(p_priority)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).gx_pri as *const _ as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(gx_pri)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).obj_kind as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(obj_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).data_kind as *const _ as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(data_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).next as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).previous as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(previous)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).nextOrdered as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(nextOrdered)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).previousOrdered as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(previousOrdered)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).proc_ as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(proc_)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).gx_cb as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(gx_cb)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).cobj_links as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(cobj_links)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).hsd_object as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(hsd_object)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).userdata as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(userdata)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).destructor_function as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(destructor_function)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJ>())).unk_linked_list as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJ),
            "::",
            stringify!(unk_linked_list)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct GOBJProc {
    pub parent: *mut GOBJ,
    pub next: *mut GOBJProc,
    pub prev: *mut GOBJProc,
    pub s_link: ::std::os::raw::c_char,
    pub flags: ::std::os::raw::c_char,
    pub parentGOBJ: *mut GOBJ,
    pub cb: ::std::option::Option<unsafe extern "C" fn(gobj: *mut GOBJ)>,
}
#[test]
fn bindgen_test_layout_GOBJProc() {
    assert_eq!(
        ::std::mem::size_of::<GOBJProc>(),
        48usize,
        concat!("Size of: ", stringify!(GOBJProc))
    );
    assert_eq!(
        ::std::mem::align_of::<GOBJProc>(),
        8usize,
        concat!("Alignment of ", stringify!(GOBJProc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJProc>())).parent as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJProc),
            "::",
            stringify!(parent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJProc>())).next as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJProc),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJProc>())).prev as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJProc),
            "::",
            stringify!(prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJProc>())).s_link as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJProc),
            "::",
            stringify!(s_link)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJProc>())).flags as *const _ as usize },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJProc),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJProc>())).parentGOBJ as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJProc),
            "::",
            stringify!(parentGOBJ)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJProc>())).cb as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJProc),
            "::",
            stringify!(cb)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct GOBJList {
    pub x0: *mut GOBJ,
    pub x4: *mut GOBJ,
    pub x8: *mut GOBJ,
    pub xc: *mut GOBJ,
    pub x10: *mut GOBJ,
    pub cobj: *mut GOBJ,
    pub x18: *mut GOBJ,
    pub x1c: *mut GOBJ,
    pub fighter: *mut GOBJ,
    pub item: *mut GOBJ,
    pub x28: *mut GOBJ,
    pub effect_model: *mut GOBJ,
    pub effect_unk: *mut GOBJ,
    pub x34: *mut GOBJ,
    pub x38: *mut GOBJ,
    pub x3c: *mut GOBJ,
    pub x40: *mut GOBJ,
    pub x44: *mut GOBJ,
    pub match_cam: *mut GOBJ,
}
#[test]
fn bindgen_test_layout_GOBJList() {
    assert_eq!(
        ::std::mem::size_of::<GOBJList>(),
        152usize,
        concat!("Size of: ", stringify!(GOBJList))
    );
    assert_eq!(
        ::std::mem::align_of::<GOBJList>(),
        8usize,
        concat!("Alignment of ", stringify!(GOBJList))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x4 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).xc as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x10 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).cobj as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(cobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x18 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x1c as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).fighter as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(fighter)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).item as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(item)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x28 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).effect_model as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(effect_model)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).effect_unk as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(effect_unk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x34 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x38 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x3c as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x40 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).x44 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GOBJList>())).match_cam as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(GOBJList),
            "::",
            stringify!(match_cam)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct GXList {
    pub gx_render: [*mut GOBJ; 63usize],
    pub gx_camera: *mut GOBJ,
}
#[test]
fn bindgen_test_layout_GXList() {
    assert_eq!(
        ::std::mem::size_of::<GXList>(),
        512usize,
        concat!("Size of: ", stringify!(GXList))
    );
    assert_eq!(
        ::std::mem::align_of::<GXList>(),
        8usize,
        concat!("Alignment of ", stringify!(GXList))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GXList>())).gx_render as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(GXList),
            "::",
            stringify!(gx_render)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GXList>())).gx_camera as *const _ as usize },
        504usize,
        concat!(
            "Offset of field: ",
            stringify!(GXList),
            "::",
            stringify!(gx_camera)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct TOBJ {
    pub parent: *mut ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub next: *mut TOBJ,
    pub id: u32_,
    pub src: u32_,
    pub mtxid: u32_,
    pub rotate: Vec4,
    pub scale: Vec3,
    pub translate: Vec3,
    pub wrap_s: u32_,
    pub wrap_t: u32_,
    pub repeat_s: u8_,
    pub repeat_t: u8_,
    pub anim_id: u16_,
    pub flags: u32_,
    pub blending: f32_,
    pub magFilt: u32_,
    pub imagedesc: *mut _HSD_ImageDesc,
    pub tlut: *mut _HSD_Tlut,
    pub lod: *mut _HSD_TexLODDesc,
    pub aobj: *mut AOBJ,
    pub imagetbl: *mut *mut _HSD_ImageDesc,
    pub tluttbl: *mut *mut _HSD_Tlut,
    pub tlut_no: u8_,
    pub mtx: Mtx,
    pub coord: u32_,
    pub tev: *mut _HSD_TObjTev,
}
#[test]
fn bindgen_test_layout_TOBJ() {
    assert_eq!(
        ::std::mem::size_of::<TOBJ>(),
        216usize,
        concat!("Size of: ", stringify!(TOBJ))
    );
    assert_eq!(
        ::std::mem::align_of::<TOBJ>(),
        8usize,
        concat!("Alignment of ", stringify!(TOBJ))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).parent as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(parent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).x4 as *const _ as usize },
        8usize,
        concat!("Offset of field: ", stringify!(TOBJ), "::", stringify!(x4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).next as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).id as *const _ as usize },
        24usize,
        concat!("Offset of field: ", stringify!(TOBJ), "::", stringify!(id))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).src as *const _ as usize },
        28usize,
        concat!("Offset of field: ", stringify!(TOBJ), "::", stringify!(src))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).mtxid as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(mtxid)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).rotate as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(rotate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).scale as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).translate as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(translate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).wrap_s as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(wrap_s)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).wrap_t as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(wrap_t)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).repeat_s as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(repeat_s)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).repeat_t as *const _ as usize },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(repeat_t)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).anim_id as *const _ as usize },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(anim_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).flags as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).blending as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(blending)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).magFilt as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(magFilt)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).imagedesc as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(imagedesc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).tlut as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(tlut)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).lod as *const _ as usize },
        120usize,
        concat!("Offset of field: ", stringify!(TOBJ), "::", stringify!(lod))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).aobj as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(aobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).imagetbl as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(imagetbl)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).tluttbl as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(tluttbl)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).tlut_no as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(tlut_no)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).mtx as *const _ as usize },
        156usize,
        concat!("Offset of field: ", stringify!(TOBJ), "::", stringify!(mtx))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).coord as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(TOBJ),
            "::",
            stringify!(coord)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TOBJ>())).tev as *const _ as usize },
        208usize,
        concat!("Offset of field: ", stringify!(TOBJ), "::", stringify!(tev))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct AOBJ {
    pub flags: u32_,
    pub curr_frame: f32_,
    pub rewind_frame: f32_,
    pub end_frame: f32_,
    pub framerate: f32_,
    pub fobj: *mut _HSD_FObj,
    pub hsd_obj: *mut _HSD_Obj,
}
#[test]
fn bindgen_test_layout_AOBJ() {
    assert_eq!(
        ::std::mem::size_of::<AOBJ>(),
        40usize,
        concat!("Size of: ", stringify!(AOBJ))
    );
    assert_eq!(
        ::std::mem::align_of::<AOBJ>(),
        8usize,
        concat!("Alignment of ", stringify!(AOBJ))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AOBJ>())).flags as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(AOBJ),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AOBJ>())).curr_frame as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(AOBJ),
            "::",
            stringify!(curr_frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AOBJ>())).rewind_frame as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(AOBJ),
            "::",
            stringify!(rewind_frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AOBJ>())).end_frame as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(AOBJ),
            "::",
            stringify!(end_frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AOBJ>())).framerate as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(AOBJ),
            "::",
            stringify!(framerate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AOBJ>())).fobj as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(AOBJ),
            "::",
            stringify!(fobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AOBJ>())).hsd_obj as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(AOBJ),
            "::",
            stringify!(hsd_obj)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MOBJ {
    pub parent: *mut ::std::os::raw::c_int,
    pub rendermode: u32_,
    pub tobj: *mut TOBJ,
    pub mat: *mut HSD_Material,
    pub pe: *mut _HSD_PEDesc,
    pub aobj: *mut AOBJ,
    pub tevdesc: *mut _HSD_TExpTevDesc,
    pub tobj_toon: *mut _HSD_TObj,
    pub tobj_gradation: *mut _HSD_TObj,
    pub tobj_backlight: *mut _HSD_TObj,
    pub z_offset: f32_,
}
#[test]
fn bindgen_test_layout_MOBJ() {
    assert_eq!(
        ::std::mem::size_of::<MOBJ>(),
        88usize,
        concat!("Size of: ", stringify!(MOBJ))
    );
    assert_eq!(
        ::std::mem::align_of::<MOBJ>(),
        8usize,
        concat!("Alignment of ", stringify!(MOBJ))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).parent as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MOBJ),
            "::",
            stringify!(parent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).rendermode as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MOBJ),
            "::",
            stringify!(rendermode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).tobj as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MOBJ),
            "::",
            stringify!(tobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).mat as *const _ as usize },
        24usize,
        concat!("Offset of field: ", stringify!(MOBJ), "::", stringify!(mat))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).pe as *const _ as usize },
        32usize,
        concat!("Offset of field: ", stringify!(MOBJ), "::", stringify!(pe))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).aobj as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MOBJ),
            "::",
            stringify!(aobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).tevdesc as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(MOBJ),
            "::",
            stringify!(tevdesc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).tobj_toon as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(MOBJ),
            "::",
            stringify!(tobj_toon)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).tobj_gradation as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(MOBJ),
            "::",
            stringify!(tobj_gradation)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).tobj_backlight as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(MOBJ),
            "::",
            stringify!(tobj_backlight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MOBJ>())).z_offset as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(MOBJ),
            "::",
            stringify!(z_offset)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct JOBJDesc {
    pub class_name: *mut ::std::os::raw::c_char,
    pub flags: u32_,
    pub child: *mut JOBJDesc,
    pub next: *mut JOBJDesc,
    pub u: JOBJDesc__bindgen_ty_1,
    pub rotation: Vec3,
    pub scale: Vec3,
    pub position: Vec3,
    pub mtx: Mtx,
    pub robjdesc: *mut _HSD_RObjDesc,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union JOBJDesc__bindgen_ty_1 {
    pub dobjdesc: *mut _HSD_DObjDesc,
    pub spline: *mut _HSD_Spline,
    pub ptcl: *mut _HSD_SList,
    _bindgen_union_align: u64,
}
#[test]
fn bindgen_test_layout_JOBJDesc__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<JOBJDesc__bindgen_ty_1>(),
        8usize,
        concat!("Size of: ", stringify!(JOBJDesc__bindgen_ty_1))
    );
    assert_eq!(
        ::std::mem::align_of::<JOBJDesc__bindgen_ty_1>(),
        8usize,
        concat!("Alignment of ", stringify!(JOBJDesc__bindgen_ty_1))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc__bindgen_ty_1>())).dobjdesc as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc__bindgen_ty_1),
            "::",
            stringify!(dobjdesc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc__bindgen_ty_1>())).spline as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc__bindgen_ty_1),
            "::",
            stringify!(spline)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc__bindgen_ty_1>())).ptcl as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc__bindgen_ty_1),
            "::",
            stringify!(ptcl)
        )
    );
}
#[test]
fn bindgen_test_layout_JOBJDesc() {
    assert_eq!(
        ::std::mem::size_of::<JOBJDesc>(),
        136usize,
        concat!("Size of: ", stringify!(JOBJDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<JOBJDesc>(),
        8usize,
        concat!("Alignment of ", stringify!(JOBJDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc>())).class_name as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc),
            "::",
            stringify!(class_name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc>())).flags as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc>())).child as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc),
            "::",
            stringify!(child)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc>())).next as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc>())).u as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc),
            "::",
            stringify!(u)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc>())).rotation as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc),
            "::",
            stringify!(rotation)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc>())).scale as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc>())).position as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc),
            "::",
            stringify!(position)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc>())).mtx as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc),
            "::",
            stringify!(mtx)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJDesc>())).robjdesc as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJDesc),
            "::",
            stringify!(robjdesc)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct COBJDesc {
    pub class_name: *mut ::std::os::raw::c_char,
    pub flags: u16_,
    pub projection_type: u16_,
    pub viewport_left: u16_,
    pub viewport_right: u16_,
    pub viewport_top: u16_,
    pub viewport_bottom: u16_,
    pub scissor_lr: u32_,
    pub scissor_tb: u32_,
    pub eye_desc: *mut _HSD_WObjDesc,
    pub interest_desc: *mut _HSD_WObjDesc,
    pub roll: f32_,
    pub vector: *mut Vec3,
    pub near: f32_,
    pub far: f32_,
    pub projection_param: COBJDesc__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union COBJDesc__bindgen_ty_1 {
    pub perspective: COBJDesc__bindgen_ty_1__bindgen_ty_1,
    pub frustrum: COBJDesc__bindgen_ty_1__bindgen_ty_2,
    pub ortho: COBJDesc__bindgen_ty_1__bindgen_ty_3,
    _bindgen_union_align: [u32; 4usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct COBJDesc__bindgen_ty_1__bindgen_ty_1 {
    pub fov: f32_,
    pub aspect: f32_,
}
#[test]
fn bindgen_test_layout_COBJDesc__bindgen_ty_1__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<COBJDesc__bindgen_ty_1__bindgen_ty_1>(),
        8usize,
        concat!(
            "Size of: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_1)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<COBJDesc__bindgen_ty_1__bindgen_ty_1>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1__bindgen_ty_1>())).fov as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_1),
            "::",
            stringify!(fov)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1__bindgen_ty_1>())).aspect as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_1),
            "::",
            stringify!(aspect)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct COBJDesc__bindgen_ty_1__bindgen_ty_2 {
    pub top: f32_,
    pub bottom: f32_,
    pub left: f32_,
    pub right: f32_,
}
#[test]
fn bindgen_test_layout_COBJDesc__bindgen_ty_1__bindgen_ty_2() {
    assert_eq!(
        ::std::mem::size_of::<COBJDesc__bindgen_ty_1__bindgen_ty_2>(),
        16usize,
        concat!(
            "Size of: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_2)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<COBJDesc__bindgen_ty_1__bindgen_ty_2>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1__bindgen_ty_2>())).top as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_2),
            "::",
            stringify!(top)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1__bindgen_ty_2>())).bottom as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_2),
            "::",
            stringify!(bottom)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1__bindgen_ty_2>())).left as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_2),
            "::",
            stringify!(left)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1__bindgen_ty_2>())).right as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_2),
            "::",
            stringify!(right)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct COBJDesc__bindgen_ty_1__bindgen_ty_3 {
    pub top: f32_,
    pub bottom: f32_,
    pub left: f32_,
    pub right: f32_,
}
#[test]
fn bindgen_test_layout_COBJDesc__bindgen_ty_1__bindgen_ty_3() {
    assert_eq!(
        ::std::mem::size_of::<COBJDesc__bindgen_ty_1__bindgen_ty_3>(),
        16usize,
        concat!(
            "Size of: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_3)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<COBJDesc__bindgen_ty_1__bindgen_ty_3>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1__bindgen_ty_3>())).top as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_3),
            "::",
            stringify!(top)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1__bindgen_ty_3>())).bottom as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_3),
            "::",
            stringify!(bottom)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1__bindgen_ty_3>())).left as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_3),
            "::",
            stringify!(left)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1__bindgen_ty_3>())).right as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1__bindgen_ty_3),
            "::",
            stringify!(right)
        )
    );
}
#[test]
fn bindgen_test_layout_COBJDesc__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<COBJDesc__bindgen_ty_1>(),
        16usize,
        concat!("Size of: ", stringify!(COBJDesc__bindgen_ty_1))
    );
    assert_eq!(
        ::std::mem::align_of::<COBJDesc__bindgen_ty_1>(),
        4usize,
        concat!("Alignment of ", stringify!(COBJDesc__bindgen_ty_1))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1>())).perspective as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1),
            "::",
            stringify!(perspective)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1>())).frustrum as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1),
            "::",
            stringify!(frustrum)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc__bindgen_ty_1>())).ortho as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc__bindgen_ty_1),
            "::",
            stringify!(ortho)
        )
    );
}
#[test]
fn bindgen_test_layout_COBJDesc() {
    assert_eq!(
        ::std::mem::size_of::<COBJDesc>(),
        88usize,
        concat!("Size of: ", stringify!(COBJDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<COBJDesc>(),
        8usize,
        concat!("Alignment of ", stringify!(COBJDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).class_name as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(class_name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).flags as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).projection_type as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(projection_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).viewport_left as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(viewport_left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).viewport_right as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(viewport_right)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).viewport_top as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(viewport_top)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).viewport_bottom as *const _ as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(viewport_bottom)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).scissor_lr as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(scissor_lr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).scissor_tb as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(scissor_tb)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).eye_desc as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(eye_desc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).interest_desc as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(interest_desc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).roll as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(roll)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).vector as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(vector)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).near as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(near)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).far as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(far)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJDesc>())).projection_param as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJDesc),
            "::",
            stringify!(projection_param)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DOBJ {
    pub parent: ::std::os::raw::c_int,
    pub next: *mut DOBJ,
    pub mobj: *mut MOBJ,
    pub pobj: *mut ::std::os::raw::c_int,
    pub aobj: *mut AOBJ,
    pub flags: u32_,
    pub unk: u32_,
}
#[test]
fn bindgen_test_layout_DOBJ() {
    assert_eq!(
        ::std::mem::size_of::<DOBJ>(),
        48usize,
        concat!("Size of: ", stringify!(DOBJ))
    );
    assert_eq!(
        ::std::mem::align_of::<DOBJ>(),
        8usize,
        concat!("Alignment of ", stringify!(DOBJ))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DOBJ>())).parent as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(DOBJ),
            "::",
            stringify!(parent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DOBJ>())).next as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(DOBJ),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DOBJ>())).mobj as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(DOBJ),
            "::",
            stringify!(mobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DOBJ>())).pobj as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(DOBJ),
            "::",
            stringify!(pobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DOBJ>())).aobj as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(DOBJ),
            "::",
            stringify!(aobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DOBJ>())).flags as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(DOBJ),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DOBJ>())).unk as *const _ as usize },
        44usize,
        concat!("Offset of field: ", stringify!(DOBJ), "::", stringify!(unk))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JOBJ {
    pub hsd_info: ::std::os::raw::c_int,
    pub class_parent: ::std::os::raw::c_int,
    pub sibling: *mut JOBJ,
    pub parent: *mut JOBJ,
    pub child: *mut JOBJ,
    pub flags: ::std::os::raw::c_int,
    pub dobj: *mut DOBJ,
    pub rot: Vec4,
    pub scale: Vec3,
    pub trans: Vec3,
    pub rotMtx: Mtx,
    pub VEC: *mut Vec3,
    pub MTX: *mut Mtx,
    pub aobj: *mut AOBJ,
    pub RObj: *mut ::std::os::raw::c_int,
    pub desc: *mut JOBJDesc,
}
#[test]
fn bindgen_test_layout_JOBJ() {
    assert_eq!(
        ::std::mem::size_of::<JOBJ>(),
        176usize,
        concat!("Size of: ", stringify!(JOBJ))
    );
    assert_eq!(
        ::std::mem::align_of::<JOBJ>(),
        8usize,
        concat!("Alignment of ", stringify!(JOBJ))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).hsd_info as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(hsd_info)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).class_parent as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(class_parent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).sibling as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(sibling)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).parent as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(parent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).child as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(child)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).flags as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).dobj as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(dobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).rot as *const _ as usize },
        48usize,
        concat!("Offset of field: ", stringify!(JOBJ), "::", stringify!(rot))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).scale as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).trans as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(trans)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).rotMtx as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(rotMtx)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).VEC as *const _ as usize },
        136usize,
        concat!("Offset of field: ", stringify!(JOBJ), "::", stringify!(VEC))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).MTX as *const _ as usize },
        144usize,
        concat!("Offset of field: ", stringify!(JOBJ), "::", stringify!(MTX))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).aobj as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(aobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).RObj as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(RObj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJ>())).desc as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJ),
            "::",
            stringify!(desc)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct WOBJ {
    pub parent: *mut ::std::os::raw::c_void,
    pub flags: u32_,
    pub pos: Vec3,
    pub aobj: *mut AOBJ,
    pub robj: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_WOBJ() {
    assert_eq!(
        ::std::mem::size_of::<WOBJ>(),
        40usize,
        concat!("Size of: ", stringify!(WOBJ))
    );
    assert_eq!(
        ::std::mem::align_of::<WOBJ>(),
        8usize,
        concat!("Alignment of ", stringify!(WOBJ))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<WOBJ>())).parent as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(WOBJ),
            "::",
            stringify!(parent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<WOBJ>())).flags as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(WOBJ),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<WOBJ>())).pos as *const _ as usize },
        12usize,
        concat!("Offset of field: ", stringify!(WOBJ), "::", stringify!(pos))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<WOBJ>())).aobj as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(WOBJ),
            "::",
            stringify!(aobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<WOBJ>())).robj as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(WOBJ),
            "::",
            stringify!(robj)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct COBJ {
    pub parent: u64_,
    pub flags: u32_,
    pub viewport_left: f32_,
    pub viewport_right: f32_,
    pub viewport_top: f32_,
    pub viewport_bottom: f32_,
    pub scissor_left: u16_,
    pub scissor_right: u16_,
    pub scissor_top: u16_,
    pub scissor_bottom: u16_,
    pub eye_position: *mut WOBJ,
    pub interest: *mut WOBJ,
    pub u: COBJ__bindgen_ty_1,
    pub near: f32_,
    pub far: f32_,
    pub projection_param: COBJ__bindgen_ty_2,
    pub projection_type: u8_,
    pub view_mtx: Mtx,
    pub aobj: *mut AOBJ,
    pub proj_mtx: Mtx,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union COBJ__bindgen_ty_1 {
    pub roll: f32_,
    pub up: Vec3,
    _bindgen_union_align: [u32; 3usize],
}
#[test]
fn bindgen_test_layout_COBJ__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<COBJ__bindgen_ty_1>(),
        12usize,
        concat!("Size of: ", stringify!(COBJ__bindgen_ty_1))
    );
    assert_eq!(
        ::std::mem::align_of::<COBJ__bindgen_ty_1>(),
        4usize,
        concat!("Alignment of ", stringify!(COBJ__bindgen_ty_1))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ__bindgen_ty_1>())).roll as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_1),
            "::",
            stringify!(roll)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ__bindgen_ty_1>())).up as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_1),
            "::",
            stringify!(up)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union COBJ__bindgen_ty_2 {
    pub perspective: COBJ__bindgen_ty_2__bindgen_ty_1,
    pub frustrum: COBJ__bindgen_ty_2__bindgen_ty_2,
    pub ortho: COBJ__bindgen_ty_2__bindgen_ty_3,
    _bindgen_union_align: [u32; 4usize],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct COBJ__bindgen_ty_2__bindgen_ty_1 {
    pub fov: f32_,
    pub aspect: f32_,
}
#[test]
fn bindgen_test_layout_COBJ__bindgen_ty_2__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<COBJ__bindgen_ty_2__bindgen_ty_1>(),
        8usize,
        concat!("Size of: ", stringify!(COBJ__bindgen_ty_2__bindgen_ty_1))
    );
    assert_eq!(
        ::std::mem::align_of::<COBJ__bindgen_ty_2__bindgen_ty_1>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJ__bindgen_ty_2__bindgen_ty_1>())).fov as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_1),
            "::",
            stringify!(fov)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJ__bindgen_ty_2__bindgen_ty_1>())).aspect as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_1),
            "::",
            stringify!(aspect)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct COBJ__bindgen_ty_2__bindgen_ty_2 {
    pub top: f32_,
    pub bottom: f32_,
    pub left: f32_,
    pub right: f32_,
}
#[test]
fn bindgen_test_layout_COBJ__bindgen_ty_2__bindgen_ty_2() {
    assert_eq!(
        ::std::mem::size_of::<COBJ__bindgen_ty_2__bindgen_ty_2>(),
        16usize,
        concat!("Size of: ", stringify!(COBJ__bindgen_ty_2__bindgen_ty_2))
    );
    assert_eq!(
        ::std::mem::align_of::<COBJ__bindgen_ty_2__bindgen_ty_2>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJ__bindgen_ty_2__bindgen_ty_2>())).top as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_2),
            "::",
            stringify!(top)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJ__bindgen_ty_2__bindgen_ty_2>())).bottom as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_2),
            "::",
            stringify!(bottom)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJ__bindgen_ty_2__bindgen_ty_2>())).left as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_2),
            "::",
            stringify!(left)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJ__bindgen_ty_2__bindgen_ty_2>())).right as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_2),
            "::",
            stringify!(right)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct COBJ__bindgen_ty_2__bindgen_ty_3 {
    pub top: f32_,
    pub bottom: f32_,
    pub left: f32_,
    pub right: f32_,
}
#[test]
fn bindgen_test_layout_COBJ__bindgen_ty_2__bindgen_ty_3() {
    assert_eq!(
        ::std::mem::size_of::<COBJ__bindgen_ty_2__bindgen_ty_3>(),
        16usize,
        concat!("Size of: ", stringify!(COBJ__bindgen_ty_2__bindgen_ty_3))
    );
    assert_eq!(
        ::std::mem::align_of::<COBJ__bindgen_ty_2__bindgen_ty_3>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJ__bindgen_ty_2__bindgen_ty_3>())).top as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_3),
            "::",
            stringify!(top)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJ__bindgen_ty_2__bindgen_ty_3>())).bottom as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_3),
            "::",
            stringify!(bottom)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJ__bindgen_ty_2__bindgen_ty_3>())).left as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_3),
            "::",
            stringify!(left)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<COBJ__bindgen_ty_2__bindgen_ty_3>())).right as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2__bindgen_ty_3),
            "::",
            stringify!(right)
        )
    );
}
#[test]
fn bindgen_test_layout_COBJ__bindgen_ty_2() {
    assert_eq!(
        ::std::mem::size_of::<COBJ__bindgen_ty_2>(),
        16usize,
        concat!("Size of: ", stringify!(COBJ__bindgen_ty_2))
    );
    assert_eq!(
        ::std::mem::align_of::<COBJ__bindgen_ty_2>(),
        4usize,
        concat!("Alignment of ", stringify!(COBJ__bindgen_ty_2))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ__bindgen_ty_2>())).perspective as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2),
            "::",
            stringify!(perspective)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ__bindgen_ty_2>())).frustrum as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2),
            "::",
            stringify!(frustrum)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ__bindgen_ty_2>())).ortho as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ__bindgen_ty_2),
            "::",
            stringify!(ortho)
        )
    );
}
#[test]
fn bindgen_test_layout_COBJ() {
    assert_eq!(
        ::std::mem::size_of::<COBJ>(),
        200usize,
        concat!("Size of: ", stringify!(COBJ))
    );
    assert_eq!(
        ::std::mem::align_of::<COBJ>(),
        8usize,
        concat!("Alignment of ", stringify!(COBJ))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).parent as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(parent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).flags as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).viewport_left as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(viewport_left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).viewport_right as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(viewport_right)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).viewport_top as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(viewport_top)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).viewport_bottom as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(viewport_bottom)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).scissor_left as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(scissor_left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).scissor_right as *const _ as usize },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(scissor_right)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).scissor_top as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(scissor_top)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).scissor_bottom as *const _ as usize },
        34usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(scissor_bottom)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).eye_position as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(eye_position)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).interest as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(interest)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).u as *const _ as usize },
        56usize,
        concat!("Offset of field: ", stringify!(COBJ), "::", stringify!(u))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).near as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(near)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).far as *const _ as usize },
        72usize,
        concat!("Offset of field: ", stringify!(COBJ), "::", stringify!(far))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).projection_param as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(projection_param)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).projection_type as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(projection_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).view_mtx as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(view_mtx)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).aobj as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(aobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<COBJ>())).proj_mtx as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(COBJ),
            "::",
            stringify!(proj_mtx)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_ImageDesc {
    pub img_ptr: *mut ::std::os::raw::c_void,
    pub width: u16_,
    pub height: u16_,
    pub format: u32_,
    pub mipmap: u32_,
    pub minLOD: f32_,
    pub maxLOD: f32_,
}
#[test]
fn bindgen_test_layout__HSD_ImageDesc() {
    assert_eq!(
        ::std::mem::size_of::<_HSD_ImageDesc>(),
        32usize,
        concat!("Size of: ", stringify!(_HSD_ImageDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<_HSD_ImageDesc>(),
        8usize,
        concat!("Alignment of ", stringify!(_HSD_ImageDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_ImageDesc>())).img_ptr as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_ImageDesc),
            "::",
            stringify!(img_ptr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_ImageDesc>())).width as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_ImageDesc),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_ImageDesc>())).height as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_ImageDesc),
            "::",
            stringify!(height)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_ImageDesc>())).format as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_ImageDesc),
            "::",
            stringify!(format)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_ImageDesc>())).mipmap as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_ImageDesc),
            "::",
            stringify!(mipmap)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_ImageDesc>())).minLOD as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_ImageDesc),
            "::",
            stringify!(minLOD)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_ImageDesc>())).maxLOD as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_ImageDesc),
            "::",
            stringify!(maxLOD)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_LightPoint {
    pub cutoff: f32_,
    pub point_func: u8_,
    pub ref_br: f32_,
    pub ref_dist: f32_,
    pub dist_func: u8_,
}
#[test]
fn bindgen_test_layout__HSD_LightPoint() {
    assert_eq!(
        ::std::mem::size_of::<_HSD_LightPoint>(),
        20usize,
        concat!("Size of: ", stringify!(_HSD_LightPoint))
    );
    assert_eq!(
        ::std::mem::align_of::<_HSD_LightPoint>(),
        4usize,
        concat!("Alignment of ", stringify!(_HSD_LightPoint))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightPoint>())).cutoff as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightPoint),
            "::",
            stringify!(cutoff)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightPoint>())).point_func as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightPoint),
            "::",
            stringify!(point_func)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightPoint>())).ref_br as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightPoint),
            "::",
            stringify!(ref_br)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightPoint>())).ref_dist as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightPoint),
            "::",
            stringify!(ref_dist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightPoint>())).dist_func as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightPoint),
            "::",
            stringify!(dist_func)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_LightPointDesc {
    pub cutoff: f32_,
    pub point_func: u8_,
    pub ref_br: f32_,
    pub ref_dist: f32_,
    pub dist_func: u8_,
}
#[test]
fn bindgen_test_layout__HSD_LightPointDesc() {
    assert_eq!(
        ::std::mem::size_of::<_HSD_LightPointDesc>(),
        20usize,
        concat!("Size of: ", stringify!(_HSD_LightPointDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<_HSD_LightPointDesc>(),
        4usize,
        concat!("Alignment of ", stringify!(_HSD_LightPointDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightPointDesc>())).cutoff as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightPointDesc),
            "::",
            stringify!(cutoff)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightPointDesc>())).point_func as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightPointDesc),
            "::",
            stringify!(point_func)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightPointDesc>())).ref_br as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightPointDesc),
            "::",
            stringify!(ref_br)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightPointDesc>())).ref_dist as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightPointDesc),
            "::",
            stringify!(ref_dist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightPointDesc>())).dist_func as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightPointDesc),
            "::",
            stringify!(dist_func)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_LightSpot {
    pub cutoff: f32_,
    pub spot_func: u8_,
    pub ref_br: f32_,
    pub ref_dist: f32_,
    pub dist_func: u8_,
}
#[test]
fn bindgen_test_layout__HSD_LightSpot() {
    assert_eq!(
        ::std::mem::size_of::<_HSD_LightSpot>(),
        20usize,
        concat!("Size of: ", stringify!(_HSD_LightSpot))
    );
    assert_eq!(
        ::std::mem::align_of::<_HSD_LightSpot>(),
        4usize,
        concat!("Alignment of ", stringify!(_HSD_LightSpot))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightSpot>())).cutoff as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightSpot),
            "::",
            stringify!(cutoff)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightSpot>())).spot_func as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightSpot),
            "::",
            stringify!(spot_func)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightSpot>())).ref_br as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightSpot),
            "::",
            stringify!(ref_br)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightSpot>())).ref_dist as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightSpot),
            "::",
            stringify!(ref_dist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightSpot>())).dist_func as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightSpot),
            "::",
            stringify!(dist_func)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_LightSpotDesc {
    pub cutoff: f32_,
    pub spot_func: u8_,
    pub ref_br: f32_,
    pub ref_dist: f32_,
    pub dist_func: u8_,
}
#[test]
fn bindgen_test_layout__HSD_LightSpotDesc() {
    assert_eq!(
        ::std::mem::size_of::<_HSD_LightSpotDesc>(),
        20usize,
        concat!("Size of: ", stringify!(_HSD_LightSpotDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<_HSD_LightSpotDesc>(),
        4usize,
        concat!("Alignment of ", stringify!(_HSD_LightSpotDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightSpotDesc>())).cutoff as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightSpotDesc),
            "::",
            stringify!(cutoff)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightSpotDesc>())).spot_func as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightSpotDesc),
            "::",
            stringify!(spot_func)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightSpotDesc>())).ref_br as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightSpotDesc),
            "::",
            stringify!(ref_br)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightSpotDesc>())).ref_dist as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightSpotDesc),
            "::",
            stringify!(ref_dist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightSpotDesc>())).dist_func as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightSpotDesc),
            "::",
            stringify!(dist_func)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_LightAttn {
    pub a0: f32_,
    pub a1: f32_,
    pub a2: f32_,
    pub k0: f32_,
    pub k1: f32_,
    pub k2: f32_,
}
#[test]
fn bindgen_test_layout__HSD_LightAttn() {
    assert_eq!(
        ::std::mem::size_of::<_HSD_LightAttn>(),
        24usize,
        concat!("Size of: ", stringify!(_HSD_LightAttn))
    );
    assert_eq!(
        ::std::mem::align_of::<_HSD_LightAttn>(),
        4usize,
        concat!("Alignment of ", stringify!(_HSD_LightAttn))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightAttn>())).a0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightAttn),
            "::",
            stringify!(a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightAttn>())).a1 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightAttn),
            "::",
            stringify!(a1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightAttn>())).a2 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightAttn),
            "::",
            stringify!(a2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightAttn>())).k0 as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightAttn),
            "::",
            stringify!(k0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightAttn>())).k1 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightAttn),
            "::",
            stringify!(k1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_HSD_LightAttn>())).k2 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(_HSD_LightAttn),
            "::",
            stringify!(k2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct LOBJ {
    pub parent: u64_,
    pub flags: u16_,
    pub priority: u16_,
    pub next: *mut LOBJ,
    pub color: GXColor,
    pub hw_color: GXColor,
    pub position: *mut WOBJ,
    pub interest: *mut WOBJ,
    pub u: LOBJ__bindgen_ty_1,
    pub shininess: f32_,
    pub lvec: Vec3,
    pub aobj: *mut AOBJ,
    pub id: u32_,
    pub spec_id: u32_,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union LOBJ__bindgen_ty_1 {
    pub point: _HSD_LightPoint,
    pub spot: _HSD_LightSpot,
    pub attn: _HSD_LightAttn,
    _bindgen_union_align: [u32; 6usize],
}
#[test]
fn bindgen_test_layout_LOBJ__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<LOBJ__bindgen_ty_1>(),
        24usize,
        concat!("Size of: ", stringify!(LOBJ__bindgen_ty_1))
    );
    assert_eq!(
        ::std::mem::align_of::<LOBJ__bindgen_ty_1>(),
        4usize,
        concat!("Alignment of ", stringify!(LOBJ__bindgen_ty_1))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ__bindgen_ty_1>())).point as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ__bindgen_ty_1),
            "::",
            stringify!(point)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ__bindgen_ty_1>())).spot as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ__bindgen_ty_1),
            "::",
            stringify!(spot)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ__bindgen_ty_1>())).attn as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ__bindgen_ty_1),
            "::",
            stringify!(attn)
        )
    );
}
#[test]
fn bindgen_test_layout_LOBJ() {
    assert_eq!(
        ::std::mem::size_of::<LOBJ>(),
        104usize,
        concat!("Size of: ", stringify!(LOBJ))
    );
    assert_eq!(
        ::std::mem::align_of::<LOBJ>(),
        8usize,
        concat!("Alignment of ", stringify!(LOBJ))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).parent as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(parent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).flags as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).priority as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(priority)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).next as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).color as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(color)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).hw_color as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(hw_color)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).position as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(position)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).interest as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(interest)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).u as *const _ as usize },
        48usize,
        concat!("Offset of field: ", stringify!(LOBJ), "::", stringify!(u))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).shininess as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(shininess)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).lvec as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(lvec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).aobj as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(aobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).id as *const _ as usize },
        96usize,
        concat!("Offset of field: ", stringify!(LOBJ), "::", stringify!(id))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<LOBJ>())).spec_id as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(LOBJ),
            "::",
            stringify!(spec_id)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct JOBJAnimSet {
    pub jobj: *mut JOBJDesc,
    pub animjoint: *mut ::std::os::raw::c_void,
    pub matanimjoint: *mut ::std::os::raw::c_void,
    pub shapeaninjoint: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_JOBJAnimSet() {
    assert_eq!(
        ::std::mem::size_of::<JOBJAnimSet>(),
        32usize,
        concat!("Size of: ", stringify!(JOBJAnimSet))
    );
    assert_eq!(
        ::std::mem::align_of::<JOBJAnimSet>(),
        8usize,
        concat!("Alignment of ", stringify!(JOBJAnimSet))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJAnimSet>())).jobj as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJAnimSet),
            "::",
            stringify!(jobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJAnimSet>())).animjoint as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJAnimSet),
            "::",
            stringify!(animjoint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJAnimSet>())).matanimjoint as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJAnimSet),
            "::",
            stringify!(matanimjoint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<JOBJAnimSet>())).shapeaninjoint as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(JOBJAnimSet),
            "::",
            stringify!(shapeaninjoint)
        )
    );
}
extern "C" {
    pub static mut stc_gobj_list: *mut *mut GOBJList;
}
extern "C" {
    pub static mut obj_kind: *mut u8_;
}
extern "C" {
    #[doc = " Functions"]
    pub fn JOBJ_GetWorldPosition(
        source: *mut JOBJ,
        add: *mut Vec3,
        dest: *mut Vec3,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn JOBJ_SetMtxDirtySub(jobj: *mut JOBJ);
}
extern "C" {
    pub fn JOBJ_LoadJoint(joint: *mut JOBJDesc) -> *mut JOBJ;
}
extern "C" {
    pub fn JOBJ_RemoveAll(joint: *mut JOBJ);
}
extern "C" {
    pub fn JOBJ_Remove(joint: *mut JOBJ);
}
extern "C" {
    pub fn JOBJ_GetChild(
        joint: *mut JOBJ,
        ptr: ::std::os::raw::c_int,
        index: ::std::os::raw::c_int,
        ...
    );
}
extern "C" {
    pub fn JOBJ_AddChild(parent: *mut JOBJ, child: *mut JOBJ);
}
extern "C" {
    pub fn JOBJ_GetCurrentMatAnimFrame(joint: *mut JOBJ) -> f32;
}
extern "C" {
    pub fn JOBJ_SetFlags(joint: *mut JOBJ, flags: ::std::os::raw::c_int);
}
extern "C" {
    pub fn JOBJ_SetFlagsAll(joint: *mut JOBJ, flags: ::std::os::raw::c_int);
}
extern "C" {
    pub fn JOBJ_ClearFlags(joint: *mut JOBJ, flags: ::std::os::raw::c_int);
}
extern "C" {
    pub fn JOBJ_ClearFlagsAll(joint: *mut JOBJ, flags: ::std::os::raw::c_int);
}
extern "C" {
    pub fn JOBJ_BillBoard(joint: *mut JOBJ, m: *mut Mtx, mx: *mut Mtx);
}
extern "C" {
    pub fn JOBJ_RunAOBJCallback(
        joint: *mut JOBJ,
        unk: ::std::os::raw::c_int,
        flags: u16_,
        cb: *mut ::std::os::raw::c_void,
        argkind: ::std::os::raw::c_int,
        ...
    );
}
extern "C" {
    pub fn JOBJ_Anim(joint: *mut JOBJ);
}
extern "C" {
    pub fn JOBJ_AnimAll(joint: *mut JOBJ);
}
extern "C" {
    pub fn JOBJ_AddAnimAll(
        joint: *mut JOBJ,
        animjoint: *mut ::std::os::raw::c_void,
        matanimjoint: *mut ::std::os::raw::c_void,
        shapeanimjoint: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn JOBJ_RemoveAnimAll(joint: *mut JOBJ);
}
extern "C" {
    pub fn JOBJ_ReqAnim(joint: *mut JOBJ, frame: f32);
}
extern "C" {
    pub fn JOBJ_ReqAnimByFlags(joint: *mut JOBJ, flags: ::std::os::raw::c_int, frame: f32);
}
extern "C" {
    pub fn JOBJ_ReqAnimAll(joint: *mut JOBJ, unk: f32);
}
extern "C" {
    pub fn JOBJ_ReqAnimAllByFlags(joint: *mut JOBJ, flags: ::std::os::raw::c_int, frame: f32);
}
extern "C" {
    pub fn JOBJ_GetJointAnimFrameTotal(joint: *mut JOBJ) -> f32;
}
extern "C" {
    pub fn JOBJ_GetJointAnimNextFrame(joint: *mut JOBJ) -> f32;
}
extern "C" {
    pub fn JOBJ_SetAllMOBJFlags(joint: *mut JOBJ, flags: ::std::os::raw::c_int);
}
extern "C" {
    pub fn JOBJ_CheckAObjEnd(joint: *mut JOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn AOBJ_ReqAnim(aobj: *mut ::std::os::raw::c_int, unk: f32);
}
extern "C" {
    pub fn AOBJ_StopAnim(
        jobj: *mut JOBJ,
        flags: ::std::os::raw::c_int,
        flags2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn AOBJ_SetRate(aobj: *mut AOBJ, rate: f32);
}
extern "C" {
    pub fn DOBJ_SetFlags(dobj: *mut DOBJ, flags: ::std::os::raw::c_int);
}
extern "C" {
    pub fn DOBJ_ClearFlags(dobj: *mut DOBJ, flags: ::std::os::raw::c_int);
}
extern "C" {
    pub fn COBJ_LoadDesc(cobj: *mut COBJDesc) -> *mut COBJ;
}
extern "C" {
    pub fn COBJ_LoadDescSetScissor(cobj: *mut COBJDesc) -> *mut COBJ;
}
extern "C" {
    pub fn COBJ_GetMatchCamera() -> *mut COBJ;
}
extern "C" {
    pub fn CObjThink_Common(gobj: *mut GOBJ);
}
extern "C" {
    pub fn GObj_Create(
        type_: ::std::os::raw::c_int,
        subclass: ::std::os::raw::c_int,
        flags: ::std::os::raw::c_int,
    ) -> *mut GOBJ;
}
extern "C" {
    pub fn GObj_Destroy(gobj: *mut GOBJ);
}
extern "C" {
    pub fn GObj_AddGXLink(
        gobj: *mut GOBJ,
        cb: *mut ::std::os::raw::c_void,
        gx_link: ::std::os::raw::c_int,
        gx_pri: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GObj_DestroyGXLink(gobj: *mut GOBJ);
}
extern "C" {
    pub fn GObj_GXReorder(gobj: *mut GOBJ, unk: ::std::os::raw::c_int);
}
extern "C" {
    pub fn GObj_AddProc(
        gobj: *mut GOBJ,
        callback: *mut ::std::os::raw::c_void,
        priority: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GObj_RemoveProc(gobj: *mut GOBJ);
}
extern "C" {
    pub fn GObj_AddObject(gobj: *mut GOBJ, unk: u8_, object: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn GObj_FreeObject(gobj: *mut GOBJ);
}
extern "C" {
    pub fn GObj_AddUserData(
        gobj: *mut GOBJ,
        userDataKind: ::std::os::raw::c_int,
        destructor: *mut ::std::os::raw::c_void,
        userData: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn GOBJ_InitCamera(
        gobj: *mut GOBJ,
        cb: *mut ::std::os::raw::c_void,
        gx_pri: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GXLink_Common(gobj: *mut GOBJ, pass: ::std::os::raw::c_int);
}
extern "C" {
    pub fn GXLink_LObj(gobj: *mut GOBJ, pass: ::std::os::raw::c_int);
}
extern "C" {
    pub fn GXLink_Fog(gobj: *mut GOBJ, pass: ::std::os::raw::c_int);
}
extern "C" {
    pub fn LObj_LoadDesc(lobjdesc: *mut ::std::os::raw::c_void) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fog_LoadDesc(fogdesc: *mut ::std::os::raw::c_void) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn JOBJ_GetDObj(jobj: *mut JOBJ) -> *mut DOBJ;
}
extern "C" {
    pub fn MOBJ_SetAlpha(dobj: *mut DOBJ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn GObj_CopyGXPri(target: *mut GOBJ, source: *mut GOBJ);
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Effect {
    pub child: *mut GOBJ,
    pub gobj: *mut GOBJ,
    pub x8: ::std::os::raw::c_int,
    pub xc: ::std::os::raw::c_int,
    pub callback: *mut ::std::os::raw::c_void,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: f32,
    pub lifetime: ::std::os::raw::c_short,
    pub x26: ::std::os::raw::c_char,
    pub x27: ::std::os::raw::c_char,
    pub x28: ::std::os::raw::c_char,
    pub x29: ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_Effect() {
    assert_eq!(
        ::std::mem::size_of::<Effect>(),
        56usize,
        concat!("Size of: ", stringify!(Effect))
    );
    assert_eq!(
        ::std::mem::align_of::<Effect>(),
        8usize,
        concat!("Alignment of ", stringify!(Effect))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).child as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(child)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).gobj as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(gobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).xc as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).callback as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(callback)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).x14 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).x18 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).x1c as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).x20 as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).lifetime as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(lifetime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).x26 as *const _ as usize },
        50usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(x26)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).x27 as *const _ as usize },
        51usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(x27)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).x28 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Effect>())).x29 as *const _ as usize },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(Effect),
            "::",
            stringify!(x29)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Particle {
    pub x0: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub x8: ::std::os::raw::c_int,
    pub xc: ::std::os::raw::c_int,
    pub x10: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_int,
    pub x28: ::std::os::raw::c_int,
    pub x2c: ::std::os::raw::c_int,
    pub x30: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3c: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4c: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub param: *mut GeneratorAppSRT,
}
#[test]
fn bindgen_test_layout_Particle() {
    assert_eq!(
        ::std::mem::size_of::<Particle>(),
        96usize,
        concat!("Size of: ", stringify!(Particle))
    );
    assert_eq!(
        ::std::mem::align_of::<Particle>(),
        8usize,
        concat!("Alignment of ", stringify!(Particle))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x10 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x14 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x18 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x1c as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x20 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x24 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x28 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x2c as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x30 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x34 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x38 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x3c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x40 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x44 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x48 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x4c as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).x50 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle>())).param as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle),
            "::",
            stringify!(param)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ptclGen {
    pub next: *mut ptclGen,
    pub kind: ::std::os::raw::c_int,
    pub random: f32,
    pub xc: f32,
    pub joint: *mut JOBJ,
    pub genlife: u16_,
    pub type_: u16_,
    pub ef_file: u8_,
    pub link_no: u8_,
    pub tex_group: u8_,
    pub x1b: u8_,
    pub instance: u16_,
    pub life: u16_,
    pub track: *mut ::std::os::raw::c_void,
    pub pos: Vec3,
    pub vel: Vec3,
    pub gravity: f32,
    pub friction: f32,
    pub size: f32,
    pub radius: f32,
    pub angle: f32,
    pub timer: ::std::os::raw::c_int,
    pub mtx: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_ptclGen() {
    assert_eq!(
        ::std::mem::size_of::<ptclGen>(),
        112usize,
        concat!("Size of: ", stringify!(ptclGen))
    );
    assert_eq!(
        ::std::mem::align_of::<ptclGen>(),
        8usize,
        concat!("Alignment of ", stringify!(ptclGen))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).next as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).kind as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).random as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(random)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).xc as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).joint as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(joint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).genlife as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(genlife)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).type_ as *const _ as usize },
        34usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).ef_file as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(ef_file)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).link_no as *const _ as usize },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(link_no)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).tex_group as *const _ as usize },
        38usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(tex_group)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).x1b as *const _ as usize },
        39usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(x1b)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).instance as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(instance)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).life as *const _ as usize },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(life)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).track as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(track)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).pos as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).vel as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(vel)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).gravity as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(gravity)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).friction as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(friction)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).size as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).radius as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(radius)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).angle as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(angle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).timer as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(timer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ptclGen>())).mtx as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(ptclGen),
            "::",
            stringify!(mtx)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct GeneratorAppSRT {
    pub x0: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub x8: ::std::os::raw::c_int,
    pub xc: ::std::os::raw::c_int,
    pub x10: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub scale: Vec3,
    pub x30: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3c: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4c: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8c: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa2: u16_,
}
#[test]
fn bindgen_test_layout_GeneratorAppSRT() {
    assert_eq!(
        ::std::mem::size_of::<GeneratorAppSRT>(),
        168usize,
        concat!("Size of: ", stringify!(GeneratorAppSRT))
    );
    assert_eq!(
        ::std::mem::align_of::<GeneratorAppSRT>(),
        4usize,
        concat!("Alignment of ", stringify!(GeneratorAppSRT))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x10 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x14 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x18 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x1c as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x20 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).scale as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x30 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x34 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x38 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x3c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x40 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x44 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x48 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x4c as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x50 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x54 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x58 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x5c as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x60 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x64 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x68 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x6c as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x70 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x74 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x78 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x7c as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x80 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x84 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x88 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x8c as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x90 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x94 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x98 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).x9c as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).xa0 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<GeneratorAppSRT>())).xa2 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(GeneratorAppSRT),
            "::",
            stringify!(xa2)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Particle2 {
    pub next: *mut Particle2,
    pub kind: u32_,
    pub bank: u8_,
    pub texGroup: u8_,
    pub poseNum: u8_,
    pub palNum: u8_,
    pub sizeCount: u16_,
    pub primColCount: u16_,
    pub envColCount: u16_,
    pub primCol: [u8_; 4usize],
    pub envCol: [u8_; 4usize],
    pub cmdWait: u16_,
    pub loopCount: u8_,
    pub linkNo: u8_,
    pub idnum: u16_,
    pub cmdList: *mut ::std::os::raw::c_void,
    pub cmdPtr: u16_,
    pub cmdMarkPtr: u16_,
    pub cmdLoopPtr: u16_,
    pub life: u16_,
    pub v: Vec3,
    pub grav: f32,
    pub fric: f32,
    pub pos: Vec3,
    pub size: f32,
    pub rotate: f32,
    pub aCmpCount: u16_,
    pub aCmpMode: u8_,
    pub aCmpParam1: u8_,
    pub aCmpParam2: u8_,
    pub x5c: *mut ::std::os::raw::c_void,
    pub x60: *mut ::std::os::raw::c_void,
    pub x64: *mut ::std::os::raw::c_void,
    pub x68: *mut ::std::os::raw::c_void,
    pub x6c: *mut ::std::os::raw::c_void,
    pub x70: *mut ::std::os::raw::c_void,
    pub x74: *mut ::std::os::raw::c_void,
    pub x78: *mut ::std::os::raw::c_void,
    pub x7c: *mut ::std::os::raw::c_void,
    pub x80: *mut ::std::os::raw::c_void,
    pub x84: *mut ::std::os::raw::c_void,
    pub x88: *mut ::std::os::raw::c_void,
    pub gen: *mut ::std::os::raw::c_void,
    pub x90: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_Particle2() {
    assert_eq!(
        ::std::mem::size_of::<Particle2>(),
        216usize,
        concat!("Size of: ", stringify!(Particle2))
    );
    assert_eq!(
        ::std::mem::align_of::<Particle2>(),
        8usize,
        concat!("Alignment of ", stringify!(Particle2))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).next as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).kind as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).bank as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(bank)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).texGroup as *const _ as usize },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(texGroup)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).poseNum as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(poseNum)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).palNum as *const _ as usize },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(palNum)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).sizeCount as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(sizeCount)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).primColCount as *const _ as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(primColCount)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).envColCount as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(envColCount)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).primCol as *const _ as usize },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(primCol)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).envCol as *const _ as usize },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(envCol)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).cmdWait as *const _ as usize },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(cmdWait)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).loopCount as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(loopCount)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).linkNo as *const _ as usize },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(linkNo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).idnum as *const _ as usize },
        34usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(idnum)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).cmdList as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(cmdList)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).cmdPtr as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(cmdPtr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).cmdMarkPtr as *const _ as usize },
        50usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(cmdMarkPtr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).cmdLoopPtr as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(cmdLoopPtr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).life as *const _ as usize },
        54usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(life)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).v as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(v)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).grav as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(grav)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).fric as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(fric)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).pos as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).size as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).rotate as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(rotate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).aCmpCount as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(aCmpCount)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).aCmpMode as *const _ as usize },
        98usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(aCmpMode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).aCmpParam1 as *const _ as usize },
        99usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(aCmpParam1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).aCmpParam2 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(aCmpParam2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x5c as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x60 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x64 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x68 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x6c as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x70 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x74 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x78 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x7c as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x80 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x84 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x88 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).gen as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(gen)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Particle2>())).x90 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(Particle2),
            "::",
            stringify!(x90)
        )
    );
}
extern "C" {
    #[doc = " Functions"]
    pub fn Effect_SpawnSync(gfx_id: ::std::os::raw::c_int, ...) -> *mut Effect;
}
extern "C" {
    pub fn Effect_SpawnAsync(
        fighter: *mut GOBJ,
        ptr: *mut Effect,
        type_: ::std::os::raw::c_int,
        gfx_id: ::std::os::raw::c_int,
        ...
    );
}
extern "C" {
    pub fn Effect_SpawnFtEffectLookup(
        gobj: *mut GOBJ,
        gfx_id: ::std::os::raw::c_int,
        bone: ::std::os::raw::c_int,
        unk: ::std::os::raw::c_int,
        destroy_on_leave: ::std::os::raw::c_int,
        ...
    );
}
extern "C" {
    pub fn Effect_SpawnItEffectLookup(
        gobj: *mut GOBJ,
        gfx_id: ::std::os::raw::c_int,
        bone: ::std::os::raw::c_int,
        offset: *mut Vec3,
        scatter: *mut Vec3,
        unk3: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Effect_SpawnItEffect(gobj: *mut GOBJ, gfx_id: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Effect_DestroyAll(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Particle_DestroyAll(jobj: *mut JOBJ);
}
extern "C" {
    pub fn Effect_PauseAll(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Effect_ResumeAll(fighter: *mut GOBJ);
}
extern "C" {
    pub fn psRemoveParticleAppSRT(ptcl: *mut Particle2) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn psDeletePntJObjwithParticle(ptcl: *mut Particle2);
}
extern "C" {
    pub fn psKillGenerator(gen: *mut ptclGen, unk: *mut ptclGen) -> *mut ptclGen;
}
extern "C" {
    pub static mut stc_ptclnum: *mut u16_;
}
extern "C" {
    pub static mut stc_ptcl: *mut *mut Particle2;
}
extern "C" {
    pub static mut stc_ptclgen: *mut *mut ptclGen;
}
extern "C" {
    pub static mut stc_ptclgencurr: *mut *mut ptclGen;
}
extern "C" {
    pub static mut stc_ptclgennum: *mut u16_;
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ECBBones {
    pub topY: f32,
    pub botY: f32,
    pub left: Vec2,
    pub right: Vec2,
}
#[test]
fn bindgen_test_layout_ECBBones() {
    assert_eq!(
        ::std::mem::size_of::<ECBBones>(),
        24usize,
        concat!("Size of: ", stringify!(ECBBones))
    );
    assert_eq!(
        ::std::mem::align_of::<ECBBones>(),
        4usize,
        concat!("Alignment of ", stringify!(ECBBones))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ECBBones>())).topY as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ECBBones),
            "::",
            stringify!(topY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ECBBones>())).botY as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(ECBBones),
            "::",
            stringify!(botY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ECBBones>())).left as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ECBBones),
            "::",
            stringify!(left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ECBBones>())).right as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ECBBones),
            "::",
            stringify!(right)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DmgHazard {
    pub x0: ::std::os::raw::c_int,
    pub dmg: ::std::os::raw::c_int,
    pub angle: ::std::os::raw::c_int,
    pub kb_growth: ::std::os::raw::c_int,
    pub x10: ::std::os::raw::c_int,
    pub kb_base: ::std::os::raw::c_int,
    pub element: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub sfx: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_DmgHazard() {
    assert_eq!(
        ::std::mem::size_of::<DmgHazard>(),
        36usize,
        concat!("Size of: ", stringify!(DmgHazard))
    );
    assert_eq!(
        ::std::mem::align_of::<DmgHazard>(),
        4usize,
        concat!("Alignment of ", stringify!(DmgHazard))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DmgHazard>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(DmgHazard),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DmgHazard>())).dmg as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(DmgHazard),
            "::",
            stringify!(dmg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DmgHazard>())).angle as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(DmgHazard),
            "::",
            stringify!(angle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DmgHazard>())).kb_growth as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(DmgHazard),
            "::",
            stringify!(kb_growth)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DmgHazard>())).x10 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(DmgHazard),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DmgHazard>())).kb_base as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(DmgHazard),
            "::",
            stringify!(kb_base)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DmgHazard>())).element as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(DmgHazard),
            "::",
            stringify!(element)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DmgHazard>())).x1c as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(DmgHazard),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DmgHazard>())).sfx as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(DmgHazard),
            "::",
            stringify!(sfx)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CollData {
    pub gobj: *mut GOBJ,
    pub topN_Curr: Vec3,
    pub topN_CurrCorrect: Vec3,
    pub topN_Prev: Vec3,
    pub topN_Proj: Vec3,
    pub flags1: ::std::os::raw::c_int,
    pub coll_test: ::std::os::raw::c_int,
    pub ignore_line: ::std::os::raw::c_int,
    pub ledge_left: ::std::os::raw::c_int,
    pub ledge_right: ::std::os::raw::c_int,
    pub ignore_group: ::std::os::raw::c_int,
    pub check_group: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub ecbCurr_top: Vec2,
    pub ecbCurr_bot: Vec2,
    pub ecbCurr_right: Vec2,
    pub ecbCurr_left: Vec2,
    pub ecbCurrCorrect_top: Vec2,
    pub ecbCurrCorrect_bot: Vec2,
    pub ecbCurrCorrect_right: Vec2,
    pub ecbCurrCorrect_left: Vec2,
    pub ecbPrev_top: Vec2,
    pub ecbPrev_bot: Vec2,
    pub ecbPrev_right: Vec2,
    pub ecbPrev_left: Vec2,
    pub ecbProj_top: Vec2,
    pub ecbProj_bot: Vec2,
    pub ecbProj_right: Vec2,
    pub ecbProj_left: Vec2,
    pub x104: ::std::os::raw::c_int,
    pub joint_1: *mut JOBJ,
    pub joint_2: *mut JOBJ,
    pub joint_3: *mut JOBJ,
    pub joint_4: *mut JOBJ,
    pub joint_5: *mut JOBJ,
    pub joint_6: *mut JOBJ,
    pub joint_7: *mut JOBJ,
    pub x124: ::std::os::raw::c_int,
    pub x128: ::std::os::raw::c_int,
    pub x12c: ::std::os::raw::c_int,
    pub flags: ::std::os::raw::c_int,
    pub envFlags: ::std::os::raw::c_int,
    pub envFlags_prev: ::std::os::raw::c_int,
    pub x13c: ::std::os::raw::c_int,
    pub x140: ::std::os::raw::c_int,
    pub x144: ::std::os::raw::c_int,
    pub x148: ::std::os::raw::c_int,
    pub ground_index: ::std::os::raw::c_int,
    pub ground_info: u8_,
    pub ground_unk: u8_,
    pub ground_type: u8_,
    pub ground_mat: u8_,
    pub ground_slope: Vec3,
    pub rightwall_index: ::std::os::raw::c_int,
    pub rightwall_info: u8_,
    pub rightwall_unk: u8_,
    pub rightwall_type: u8_,
    pub rightwall_mat: u8_,
    pub rightwall_slope: Vec3,
    pub leftwall_index: ::std::os::raw::c_int,
    pub leftwall_info: u8_,
    pub leftwall_unk: u8_,
    pub leftwall_type: u8_,
    pub leftwall_mat: u8_,
    pub leftwall_slope: Vec3,
    pub ceil_index: ::std::os::raw::c_int,
    pub ceil_info: u8_,
    pub ceil_unk: u8_,
    pub ceil_type: u8_,
    pub ceil_mat: u8_,
    pub ceil_slope: Vec3,
    pub ecb_lock: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_CollData() {
    assert_eq!(
        ::std::mem::size_of::<CollData>(),
        456usize,
        concat!("Size of: ", stringify!(CollData))
    );
    assert_eq!(
        ::std::mem::align_of::<CollData>(),
        8usize,
        concat!("Alignment of ", stringify!(CollData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).gobj as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(gobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).topN_Curr as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(topN_Curr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).topN_CurrCorrect as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(topN_CurrCorrect)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).topN_Prev as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(topN_Prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).topN_Proj as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(topN_Proj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).flags1 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(flags1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).coll_test as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(coll_test)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ignore_line as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ignore_line)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ledge_left as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ledge_left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ledge_right as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ledge_right)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ignore_group as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ignore_group)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).check_group as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(check_group)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x50 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x54 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x58 as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x5c as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x60 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x64 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x68 as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x6c as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x70 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x74 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x78 as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x7c as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x80 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbCurr_top as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbCurr_top)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbCurr_bot as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbCurr_bot)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbCurr_right as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbCurr_right)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbCurr_left as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbCurr_left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbCurrCorrect_top as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbCurrCorrect_top)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbCurrCorrect_bot as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbCurrCorrect_bot)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbCurrCorrect_right as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbCurrCorrect_right)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbCurrCorrect_left as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbCurrCorrect_left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbPrev_top as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbPrev_top)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbPrev_bot as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbPrev_bot)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbPrev_right as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbPrev_right)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbPrev_left as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbPrev_left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbProj_top as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbProj_top)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbProj_bot as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbProj_bot)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbProj_right as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbProj_right)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecbProj_left as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecbProj_left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x104 as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).joint_1 as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(joint_1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).joint_2 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(joint_2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).joint_3 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(joint_3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).joint_4 as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(joint_4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).joint_5 as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(joint_5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).joint_6 as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(joint_6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).joint_7 as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(joint_7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x124 as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x128 as *const _ as usize },
        332usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x12c as *const _ as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x12c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).flags as *const _ as usize },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).envFlags as *const _ as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(envFlags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).envFlags_prev as *const _ as usize },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(envFlags_prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x13c as *const _ as usize },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x13c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x140 as *const _ as usize },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x144 as *const _ as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).x148 as *const _ as usize },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(x148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ground_index as *const _ as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ground_index)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ground_info as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ground_info)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ground_unk as *const _ as usize },
        373usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ground_unk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ground_type as *const _ as usize },
        374usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ground_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ground_mat as *const _ as usize },
        375usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ground_mat)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ground_slope as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ground_slope)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).rightwall_index as *const _ as usize },
        388usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(rightwall_index)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).rightwall_info as *const _ as usize },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(rightwall_info)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).rightwall_unk as *const _ as usize },
        393usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(rightwall_unk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).rightwall_type as *const _ as usize },
        394usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(rightwall_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).rightwall_mat as *const _ as usize },
        395usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(rightwall_mat)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).rightwall_slope as *const _ as usize },
        396usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(rightwall_slope)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).leftwall_index as *const _ as usize },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(leftwall_index)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).leftwall_info as *const _ as usize },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(leftwall_info)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).leftwall_unk as *const _ as usize },
        413usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(leftwall_unk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).leftwall_type as *const _ as usize },
        414usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(leftwall_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).leftwall_mat as *const _ as usize },
        415usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(leftwall_mat)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).leftwall_slope as *const _ as usize },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(leftwall_slope)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ceil_index as *const _ as usize },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ceil_index)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ceil_info as *const _ as usize },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ceil_info)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ceil_unk as *const _ as usize },
        433usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ceil_unk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ceil_type as *const _ as usize },
        434usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ceil_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ceil_mat as *const _ as usize },
        435usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ceil_mat)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ceil_slope as *const _ as usize },
        436usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ceil_slope)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollData>())).ecb_lock as *const _ as usize },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(CollData),
            "::",
            stringify!(ecb_lock)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CollGroupDesc {
    pub floor_start: u16_,
    pub floor_num: u16_,
    pub ceil_start: u16_,
    pub ceil_num: u16_,
    pub rwall_start: u16_,
    pub rwall_num: u16_,
    pub lwall_start: u16_,
    pub lwall_num: u16_,
    pub dyn_start: u16_,
    pub dyn_num: u16_,
    pub area_min: Vec2,
    pub area_max: Vec2,
    pub vert_start: u16_,
    pub vert_num: u16_,
}
#[test]
fn bindgen_test_layout_CollGroupDesc() {
    assert_eq!(
        ::std::mem::size_of::<CollGroupDesc>(),
        40usize,
        concat!("Size of: ", stringify!(CollGroupDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<CollGroupDesc>(),
        4usize,
        concat!("Alignment of ", stringify!(CollGroupDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).floor_start as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(floor_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).floor_num as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(floor_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).ceil_start as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(ceil_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).ceil_num as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(ceil_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).rwall_start as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(rwall_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).rwall_num as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(rwall_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).lwall_start as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(lwall_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).lwall_num as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(lwall_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).dyn_start as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(dyn_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).dyn_num as *const _ as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(dyn_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).area_min as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(area_min)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).area_max as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(area_max)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).vert_start as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(vert_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroupDesc>())).vert_num as *const _ as usize },
        38usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroupDesc),
            "::",
            stringify!(vert_num)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CollGroup {
    pub next: *mut CollGroup,
    pub desc: *mut CollGroupDesc,
    pub x8: ::std::os::raw::c_int,
    pub ray_id: u16_,
    pub xe: u16_,
    pub area_min: Vec2,
    pub area_max: Vec2,
    pub jobj: *mut JOBJ,
    pub cb_floor: *mut ::std::os::raw::c_void,
    pub map_data_floor: *mut ::std::os::raw::c_void,
    pub cb_ceil: *mut ::std::os::raw::c_void,
    pub map_data_ceil: *mut ::std::os::raw::c_void,
    pub x34: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_CollGroup() {
    assert_eq!(
        ::std::mem::size_of::<CollGroup>(),
        88usize,
        concat!("Size of: ", stringify!(CollGroup))
    );
    assert_eq!(
        ::std::mem::align_of::<CollGroup>(),
        8usize,
        concat!("Alignment of ", stringify!(CollGroup))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).next as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).desc as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(desc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).ray_id as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(ray_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).xe as *const _ as usize },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(xe)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).area_min as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(area_min)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).area_max as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(area_max)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).jobj as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(jobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).cb_floor as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(cb_floor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).map_data_floor as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(map_data_floor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).cb_ceil as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(cb_ceil)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).map_data_ceil as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(map_data_ceil)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollGroup>())).x34 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CollGroup),
            "::",
            stringify!(x34)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CollLineInfo {
    pub vert_prev: s16,
    pub vert_next: s16,
    pub line_prev: s16,
    pub line_next: s16,
    pub line_prev_altgroup: s16,
    pub line_next_altgroup: s16,
    pub xc: u8_,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 2usize], u8>,
    pub material: u8_,
}
#[test]
fn bindgen_test_layout_CollLineInfo() {
    assert_eq!(
        ::std::mem::size_of::<CollLineInfo>(),
        16usize,
        concat!("Size of: ", stringify!(CollLineInfo))
    );
    assert_eq!(
        ::std::mem::align_of::<CollLineInfo>(),
        2usize,
        concat!("Alignment of ", stringify!(CollLineInfo))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLineInfo>())).vert_prev as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLineInfo),
            "::",
            stringify!(vert_prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLineInfo>())).vert_next as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLineInfo),
            "::",
            stringify!(vert_next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLineInfo>())).line_prev as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLineInfo),
            "::",
            stringify!(line_prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLineInfo>())).line_next as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLineInfo),
            "::",
            stringify!(line_next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLineInfo>())).line_prev_altgroup as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLineInfo),
            "::",
            stringify!(line_prev_altgroup)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLineInfo>())).line_next_altgroup as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLineInfo),
            "::",
            stringify!(line_next_altgroup)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLineInfo>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLineInfo),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLineInfo>())).material as *const _ as usize },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLineInfo),
            "::",
            stringify!(material)
        )
    );
}
impl CollLineInfo {
    #[inline]
    pub fn xd_1(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xd_1(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xd_2(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xd_2(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xd_3(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xd_3(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn disabled(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_disabled(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_left(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_left(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_right(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_right(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_ceil(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_ceil(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_floor(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_floor(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xe_1(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(8usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xe_1(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(8usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xe_2(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(9usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xe_2(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(9usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xe_3(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(10usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xe_3(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(10usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xe_4(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(11usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xe_4(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(11usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xe_5(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(12usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xe_5(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(12usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_drop(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(13usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_drop(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(13usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_ledge(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(14usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_ledge(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(14usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_unk(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(15usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_unk(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(15usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        xd_1: u8_,
        xd_2: u8_,
        xd_3: u8_,
        disabled: u8_,
        is_left: u8_,
        is_right: u8_,
        is_ceil: u8_,
        is_floor: u8_,
        xe_1: u8_,
        xe_2: u8_,
        xe_3: u8_,
        xe_4: u8_,
        xe_5: u8_,
        is_drop: u8_,
        is_ledge: u8_,
        is_unk: u8_,
    ) -> __BindgenBitfieldUnit<[u8; 2usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 2usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let xd_1: u8 = unsafe { ::std::mem::transmute(xd_1) };
            xd_1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let xd_2: u8 = unsafe { ::std::mem::transmute(xd_2) };
            xd_2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let xd_3: u8 = unsafe { ::std::mem::transmute(xd_3) };
            xd_3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let disabled: u8 = unsafe { ::std::mem::transmute(disabled) };
            disabled as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let is_left: u8 = unsafe { ::std::mem::transmute(is_left) };
            is_left as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let is_right: u8 = unsafe { ::std::mem::transmute(is_right) };
            is_right as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let is_ceil: u8 = unsafe { ::std::mem::transmute(is_ceil) };
            is_ceil as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let is_floor: u8 = unsafe { ::std::mem::transmute(is_floor) };
            is_floor as u64
        });
        __bindgen_bitfield_unit.set(8usize, 1u8, {
            let xe_1: u8 = unsafe { ::std::mem::transmute(xe_1) };
            xe_1 as u64
        });
        __bindgen_bitfield_unit.set(9usize, 1u8, {
            let xe_2: u8 = unsafe { ::std::mem::transmute(xe_2) };
            xe_2 as u64
        });
        __bindgen_bitfield_unit.set(10usize, 1u8, {
            let xe_3: u8 = unsafe { ::std::mem::transmute(xe_3) };
            xe_3 as u64
        });
        __bindgen_bitfield_unit.set(11usize, 1u8, {
            let xe_4: u8 = unsafe { ::std::mem::transmute(xe_4) };
            xe_4 as u64
        });
        __bindgen_bitfield_unit.set(12usize, 1u8, {
            let xe_5: u8 = unsafe { ::std::mem::transmute(xe_5) };
            xe_5 as u64
        });
        __bindgen_bitfield_unit.set(13usize, 1u8, {
            let is_drop: u8 = unsafe { ::std::mem::transmute(is_drop) };
            is_drop as u64
        });
        __bindgen_bitfield_unit.set(14usize, 1u8, {
            let is_ledge: u8 = unsafe { ::std::mem::transmute(is_ledge) };
            is_ledge as u64
        });
        __bindgen_bitfield_unit.set(15usize, 1u8, {
            let is_unk: u8 = unsafe { ::std::mem::transmute(is_unk) };
            is_unk as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CollLine {
    pub info: *mut CollLineInfo,
    pub x4: u8_,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub x6: u8_,
    pub _bitfield_2: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub __bindgen_padding_0: u32,
}
#[test]
fn bindgen_test_layout_CollLine() {
    assert_eq!(
        ::std::mem::size_of::<CollLine>(),
        16usize,
        concat!("Size of: ", stringify!(CollLine))
    );
    assert_eq!(
        ::std::mem::align_of::<CollLine>(),
        8usize,
        concat!("Alignment of ", stringify!(CollLine))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLine>())).info as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLine),
            "::",
            stringify!(info)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLine>())).x4 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLine),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollLine>())).x6 as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(CollLine),
            "::",
            stringify!(x6)
        )
    );
}
impl CollLine {
    #[inline]
    pub fn x5_1(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x5_1(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x5_2(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x5_2(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x5_3(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x5_3(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x5_4(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x5_4(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x5_5(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x5_5(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x5_6(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x5_6(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x5_7(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x5_7(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_enabled(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_enabled(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        x5_1: u8_,
        x5_2: u8_,
        x5_3: u8_,
        x5_4: u8_,
        x5_5: u8_,
        x5_6: u8_,
        x5_7: u8_,
        is_enabled: u8_,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x5_1: u8 = unsafe { ::std::mem::transmute(x5_1) };
            x5_1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x5_2: u8 = unsafe { ::std::mem::transmute(x5_2) };
            x5_2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let x5_3: u8 = unsafe { ::std::mem::transmute(x5_3) };
            x5_3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let x5_4: u8 = unsafe { ::std::mem::transmute(x5_4) };
            x5_4 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let x5_5: u8 = unsafe { ::std::mem::transmute(x5_5) };
            x5_5 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let x5_6: u8 = unsafe { ::std::mem::transmute(x5_6) };
            x5_6 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let x5_7: u8 = unsafe { ::std::mem::transmute(x5_7) };
            x5_7 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let is_enabled: u8 = unsafe { ::std::mem::transmute(is_enabled) };
            is_enabled as u64
        });
        __bindgen_bitfield_unit
    }
    #[inline]
    pub fn x7(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(0usize, 4u8) as u8) }
    }
    #[inline]
    pub fn set_x7(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(0usize, 4u8, val as u64)
        }
    }
    #[inline]
    pub fn is_rwall(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_rwall(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_lwall(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_lwall(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_ceil(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_ceil(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_floor(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_floor(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_2(
        x7: u8_,
        is_rwall: u8_,
        is_lwall: u8_,
        is_ceil: u8_,
        is_floor: u8_,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 4u8, {
            let x7: u8 = unsafe { ::std::mem::transmute(x7) };
            x7 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let is_rwall: u8 = unsafe { ::std::mem::transmute(is_rwall) };
            is_rwall as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let is_lwall: u8 = unsafe { ::std::mem::transmute(is_lwall) };
            is_lwall as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let is_ceil: u8 = unsafe { ::std::mem::transmute(is_ceil) };
            is_ceil as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let is_floor: u8 = unsafe { ::std::mem::transmute(is_floor) };
            is_floor as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CollVert {
    pub pos_orig: Vec2,
    pub pos_curr: Vec2,
    pub pos_prev: Vec2,
}
#[test]
fn bindgen_test_layout_CollVert() {
    assert_eq!(
        ::std::mem::size_of::<CollVert>(),
        24usize,
        concat!("Size of: ", stringify!(CollVert))
    );
    assert_eq!(
        ::std::mem::align_of::<CollVert>(),
        4usize,
        concat!("Alignment of ", stringify!(CollVert))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollVert>())).pos_orig as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CollVert),
            "::",
            stringify!(pos_orig)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollVert>())).pos_curr as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CollVert),
            "::",
            stringify!(pos_curr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollVert>())).pos_prev as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CollVert),
            "::",
            stringify!(pos_prev)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CollDataStage {
    pub verts: *mut ::std::os::raw::c_void,
    pub vert_num: ::std::os::raw::c_int,
    pub lines: *mut ::std::os::raw::c_void,
    pub line_num: ::std::os::raw::c_int,
    pub floor_start: u16_,
    pub floor_num: u16_,
    pub ceil_start: u16_,
    pub ceil_num: u16_,
    pub rwall_start: u16_,
    pub rwall_num: u16_,
    pub lwall_start: u16_,
    pub lwall_num: u16_,
    pub dyn_start: u16_,
    pub dyn_num: u16_,
    pub groups: *mut ::std::os::raw::c_void,
    pub group_num: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_CollDataStage() {
    assert_eq!(
        ::std::mem::size_of::<CollDataStage>(),
        64usize,
        concat!("Size of: ", stringify!(CollDataStage))
    );
    assert_eq!(
        ::std::mem::align_of::<CollDataStage>(),
        8usize,
        concat!("Alignment of ", stringify!(CollDataStage))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).verts as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(verts)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).vert_num as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(vert_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).lines as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(lines)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).line_num as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(line_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).floor_start as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(floor_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).floor_num as *const _ as usize },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(floor_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).ceil_start as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(ceil_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).ceil_num as *const _ as usize },
        34usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(ceil_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).rwall_start as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(rwall_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).rwall_num as *const _ as usize },
        38usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(rwall_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).lwall_start as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(lwall_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).lwall_num as *const _ as usize },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(lwall_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).dyn_start as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(dyn_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).dyn_num as *const _ as usize },
        46usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(dyn_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).groups as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(groups)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CollDataStage>())).group_num as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CollDataStage),
            "::",
            stringify!(group_num)
        )
    );
}
extern "C" {
    #[doc = " Functions"]
    pub fn Coll_ECBCurrToPrev(coll_data: *mut CollData);
}
extern "C" {
    pub fn Coll_InitECB(coll_data: *mut CollData);
}
extern "C" {
    pub fn ECB_CollGround_PassLedge(
        ecb: *mut CollData,
        bones: *mut ECBBones,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ECB_CollAir(ecb: *mut CollData, bones: *mut ECBBones);
}
extern "C" {
    pub fn GrColl_GetLedgeLeft(floor_index: ::std::os::raw::c_int, pos: *mut Vec3);
}
extern "C" {
    pub fn GrColl_GetLedgeRight(floor_index: ::std::os::raw::c_int, pos: *mut Vec3);
}
extern "C" {
    pub fn GrColl_GetLedgeLeft2(floor_index: ::std::os::raw::c_int, pos: *mut Vec3);
}
extern "C" {
    pub fn GrColl_GetLedgeRight2(floor_index: ::std::os::raw::c_int, pos: *mut Vec3);
}
extern "C" {
    pub fn GrColl_RaycastGround(
        coll_pos: *mut Vec3,
        line_index: *mut ::std::os::raw::c_int,
        line_kind: *mut ::std::os::raw::c_int,
        unk1: *mut Vec3,
        unk2: *mut Vec3,
        unk3: *mut Vec3,
        unk4: *mut Vec3,
        cb: *mut ::std::os::raw::c_void,
        fromX: f32,
        fromY: f32,
        toX: f32,
        toY: f32,
        unk5: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GrColl_CrawlGround(
        line_index: ::std::os::raw::c_int,
        pos: *mut Vec3,
        return_line: *mut ::std::os::raw::c_int,
        return_pos: *mut Vec3,
        return_flags: *mut ::std::os::raw::c_int,
        return_slope: *mut Vec3,
        x_offset: f32,
        y_offset: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GrColl_GetPosDifference(
        line_index: ::std::os::raw::c_int,
        pos: *mut Vec3,
        return_pos: *mut Vec3,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GrColl_GetLineInfo(
        line_index: ::std::os::raw::c_int,
        r4: *mut Vec3,
        r5: *mut ::std::os::raw::c_void,
        flags: *mut ::std::os::raw::c_int,
        return_slope: *mut Vec3,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GrColl_GetLineSlope(line_index: ::std::os::raw::c_int, return_slope: *mut Vec3);
}
extern "C" {
    pub fn GrColl_CheckIfLineEnabled(line_index: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_colltest: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_firstcollgroup: *mut *mut CollGroup;
}
extern "C" {
    pub static mut stc_collgroup: *mut *mut CollGroup;
}
extern "C" {
    pub static mut stc_collline: *mut *mut CollLine;
}
extern "C" {
    pub static mut stc_collvert: *mut *mut CollVert;
}
extern "C" {
    pub static mut stc_colldata: *mut *mut CollDataStage;
}
pub const FtCommonBone_TopN: FtCommonBone = 0;
pub const FtCommonBone_TransN: FtCommonBone = 1;
pub const FtCommonBone_XRotN: FtCommonBone = 2;
pub const FtCommonBone_YRotN: FtCommonBone = 3;
pub const FtCommonBone_HipN: FtCommonBone = 4;
pub const FtCommonBone_WaistN: FtCommonBone = 5;
pub const FtCommonBone_LLegJA: FtCommonBone = 6;
pub const FtCommonBone_LLegJ: FtCommonBone = 7;
pub const FtCommonBone_LKneeJ: FtCommonBone = 8;
pub const FtCommonBone_LFootJA: FtCommonBone = 9;
pub const FtCommonBone_LFootJ: FtCommonBone = 10;
pub const FtCommonBone_RLegJA: FtCommonBone = 11;
pub const FtCommonBone_RLegJ: FtCommonBone = 12;
pub const FtCommonBone_RKneeJ: FtCommonBone = 13;
pub const FtCommonBone_RFootJA: FtCommonBone = 14;
pub const FtCommonBone_RFootJ: FtCommonBone = 15;
pub const FtCommonBone_WaistN2: FtCommonBone = 16;
pub const FtCommonBone_BustN: FtCommonBone = 17;
pub const FtCommonBone_LShoulderN: FtCommonBone = 18;
pub const FtCommonBone_LShoulderJA: FtCommonBone = 19;
pub const FtCommonBone_LShoulderJ: FtCommonBone = 20;
pub const FtCommonBone_LArmJ: FtCommonBone = 21;
pub const FtCommonBone_LHandN: FtCommonBone = 22;
pub const FtCommonBone_L1stNa: FtCommonBone = 23;
pub const FtCommonBone_L1stNb: FtCommonBone = 24;
pub const FtCommonBone_L2ndNa: FtCommonBone = 25;
pub const FtCommonBone_L2ndNb: FtCommonBone = 26;
pub const FtCommonBone_L3rdNa: FtCommonBone = 27;
pub const FtCommonBone_L3rdNb: FtCommonBone = 28;
pub const FtCommonBone_L4thNa: FtCommonBone = 29;
pub const FtCommonBone_L4thNb: FtCommonBone = 30;
pub const FtCommonBone_LHaveN: FtCommonBone = 31;
pub const FtCommonBone_LThumbNa: FtCommonBone = 32;
pub const FtCommonBone_LThumbNb: FtCommonBone = 33;
pub const FtCommonBone_NeckN: FtCommonBone = 34;
pub const FtCommonBone_HeadN: FtCommonBone = 35;
pub const FtCommonBone_RShoulderN: FtCommonBone = 36;
pub const FtCommonBone_RShoulderJA: FtCommonBone = 37;
pub const FtCommonBone_RShoulderJ: FtCommonBone = 38;
pub const FtCommonBone_RArmJ: FtCommonBone = 39;
pub const FtCommonBone_RHandN: FtCommonBone = 40;
pub const FtCommonBone_R1stNa: FtCommonBone = 41;
pub const FtCommonBone_R1stNb: FtCommonBone = 42;
pub const FtCommonBone_R2ndNa: FtCommonBone = 43;
pub const FtCommonBone_R2ndNb: FtCommonBone = 44;
pub const FtCommonBone_R3rdNa: FtCommonBone = 45;
pub const FtCommonBone_R3rdNb: FtCommonBone = 46;
pub const FtCommonBone_R4thNa: FtCommonBone = 47;
pub const FtCommonBone_R4thNb: FtCommonBone = 48;
pub const FtCommonBone_RHaveN: FtCommonBone = 49;
pub const FtCommonBone_RThumbNa: FtCommonBone = 50;
pub const FtCommonBone_RThumbNb: FtCommonBone = 51;
pub const FtCommonBone_ThrowN: FtCommonBone = 52;
pub const FtCommonBone_Extra: FtCommonBone = 53;
pub type FtCommonBone = ::std::os::raw::c_uint;
pub const Ft_AttackKind_ATKKIND_0: Ft_AttackKind = 0;
pub const Ft_AttackKind_ATKKIND_NONE: Ft_AttackKind = 1;
pub const Ft_AttackKind_ATKKIND_JAB1: Ft_AttackKind = 2;
pub const Ft_AttackKind_ATKKIND_JAB2: Ft_AttackKind = 3;
pub const Ft_AttackKind_ATKKIND_JAB3: Ft_AttackKind = 4;
pub const Ft_AttackKind_ATKKIND_JAB4: Ft_AttackKind = 5;
pub const Ft_AttackKind_ATKKIND_DASH: Ft_AttackKind = 6;
pub const Ft_AttackKind_ATKKIND_FTILT: Ft_AttackKind = 7;
pub const Ft_AttackKind_ATKKIND_UTILT: Ft_AttackKind = 8;
pub const Ft_AttackKind_ATKKIND_DTILT: Ft_AttackKind = 9;
pub const Ft_AttackKind_ATKKIND_FSMASH: Ft_AttackKind = 10;
pub const Ft_AttackKind_ATKKIND_USMASH: Ft_AttackKind = 11;
pub const Ft_AttackKind_ATKKIND_DSMASH: Ft_AttackKind = 12;
pub const Ft_AttackKind_ATKKIND_NAIR: Ft_AttackKind = 13;
pub const Ft_AttackKind_ATKKIND_FAIR: Ft_AttackKind = 14;
pub const Ft_AttackKind_ATKKIND_BAIR: Ft_AttackKind = 15;
pub const Ft_AttackKind_ATKKIND_UAIR: Ft_AttackKind = 16;
pub const Ft_AttackKind_ATKKIND_DAIR: Ft_AttackKind = 17;
pub const Ft_AttackKind_ATKKIND_SPECIALN: Ft_AttackKind = 18;
pub const Ft_AttackKind_ATKKIND_SPECIALS: Ft_AttackKind = 19;
pub const Ft_AttackKind_ATKKIND_SPECIALHI: Ft_AttackKind = 20;
pub const Ft_AttackKind_ATKKIND_SPECIALLW: Ft_AttackKind = 21;
pub type Ft_AttackKind = ::std::os::raw::c_uint;
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Playerblock {
    pub state: ::std::os::raw::c_int,
    pub ft_kind: ::std::os::raw::c_int,
    pub type_: ::std::os::raw::c_int,
    pub isTransformed: [u8_; 2usize],
    pub tagPos: Vec3,
    pub spawnPos: Vec3,
    pub respawnPos: Vec3,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3C: ::std::os::raw::c_int,
    pub initialFacing: f32,
    pub costume: u8_,
    pub x45: u8_,
    pub tint: u8_,
    pub team: u8_,
    pub controller: u8_,
    pub cpuLv: u8_,
    pub cpuKind: u8_,
    pub handicap: u8_,
    pub x50: f32,
    pub attack: f32,
    pub defense: f32,
    pub scale: f32,
    pub damage: u16_,
    pub initialDamage: u16_,
    pub stamina: u16_,
    pub falls: [::std::os::raw::c_int; 2usize],
    pub ko: [::std::os::raw::c_int; 6usize],
    pub x88: ::std::os::raw::c_int,
    pub selfDestructs: u16_,
    pub stocks: u8_,
    pub coins_curr: ::std::os::raw::c_int,
    pub coins_total: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub stickSmashes: [::std::os::raw::c_int; 2usize],
    pub tag: ::std::os::raw::c_int,
    pub flags2: u8_,
    pub flags3: u8_,
    pub fighterData: *mut GOBJ,
    pub fighterDataSub: *mut GOBJ,
}
#[test]
fn bindgen_test_layout_Playerblock() {
    assert_eq!(
        ::std::mem::size_of::<Playerblock>(),
        192usize,
        concat!("Size of: ", stringify!(Playerblock))
    );
    assert_eq!(
        ::std::mem::align_of::<Playerblock>(),
        8usize,
        concat!("Alignment of ", stringify!(Playerblock))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).state as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).ft_kind as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(ft_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).type_ as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).isTransformed as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(isTransformed)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).tagPos as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(tagPos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).spawnPos as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(spawnPos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).respawnPos as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(respawnPos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).x34 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).x38 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).x3C as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(x3C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).initialFacing as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(initialFacing)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).costume as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(costume)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).x45 as *const _ as usize },
        69usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(x45)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).tint as *const _ as usize },
        70usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(tint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).team as *const _ as usize },
        71usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(team)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).controller as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(controller)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).cpuLv as *const _ as usize },
        73usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(cpuLv)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).cpuKind as *const _ as usize },
        74usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(cpuKind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).handicap as *const _ as usize },
        75usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(handicap)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).x50 as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).attack as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(attack)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).defense as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(defense)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).scale as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).damage as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(damage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).initialDamage as *const _ as usize },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(initialDamage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).stamina as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(stamina)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).falls as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(falls)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).ko as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(ko)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).x88 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).selfDestructs as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(selfDestructs)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).stocks as *const _ as usize },
        138usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(stocks)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).coins_curr as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(coins_curr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).coins_total as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(coins_total)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).x98 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).x9c as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).stickSmashes as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(stickSmashes)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).tag as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(tag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).flags2 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(flags2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).flags3 as *const _ as usize },
        169usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(flags3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).fighterData as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(fighterData)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Playerblock>())).fighterDataSub as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(Playerblock),
            "::",
            stringify!(fighterDataSub)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PlayerData {
    pub kind: u8_,
    pub status: u8_,
    pub stocks: u8_,
    pub costume: u8_,
    pub portNumberOverride: u8_,
    pub spawnPointOverride: u8_,
    pub facingDirection: u8_,
    pub subcolor: u8_,
    pub handicap: u8_,
    pub team: u8_,
    pub nametag: u8_,
    pub xb: u8_,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 2usize], u8>,
    pub cpuKind: u8_,
    pub cpuLevel: u8_,
    pub damageStart: u16_,
    pub damageSpawn: u16_,
    pub staminaStart: u16_,
    pub attack: f32,
    pub defense: f32,
    pub scale: f32,
}
#[test]
fn bindgen_test_layout_PlayerData() {
    assert_eq!(
        ::std::mem::size_of::<PlayerData>(),
        36usize,
        concat!("Size of: ", stringify!(PlayerData))
    );
    assert_eq!(
        ::std::mem::align_of::<PlayerData>(),
        4usize,
        concat!("Alignment of ", stringify!(PlayerData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).kind as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).status as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(status)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).stocks as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(stocks)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).costume as *const _ as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(costume)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).portNumberOverride as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(portNumberOverride)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).spawnPointOverride as *const _ as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(spawnPointOverride)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).facingDirection as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(facingDirection)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).subcolor as *const _ as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(subcolor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).handicap as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(handicap)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).team as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(team)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).nametag as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(nametag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).xb as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(xb)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).cpuKind as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(cpuKind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).cpuLevel as *const _ as usize },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(cpuLevel)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).damageStart as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(damageStart)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).damageSpawn as *const _ as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(damageSpawn)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).staminaStart as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(staminaStart)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).attack as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(attack)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).defense as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(defense)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PlayerData>())).scale as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(PlayerData),
            "::",
            stringify!(scale)
        )
    );
}
impl PlayerData {
    #[inline]
    pub fn isRumble(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isRumble(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isEntry(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isEntry(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 6u8) as u8) }
    }
    #[inline]
    pub fn set_unk2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 6u8, val as u64)
        }
    }
    #[inline]
    pub fn unk3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(8usize, 8u8) as u8) }
    }
    #[inline]
    pub fn set_unk3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(8usize, 8u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        isRumble: ::std::os::raw::c_uchar,
        isEntry: ::std::os::raw::c_uchar,
        unk2: ::std::os::raw::c_uchar,
        unk3: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 2usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 2usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let isRumble: u8 = unsafe { ::std::mem::transmute(isRumble) };
            isRumble as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let isEntry: u8 = unsafe { ::std::mem::transmute(isEntry) };
            isEntry as u64
        });
        __bindgen_bitfield_unit.set(2usize, 6u8, {
            let unk2: u8 = unsafe { ::std::mem::transmute(unk2) };
            unk2 as u64
        });
        __bindgen_bitfield_unit.set(8usize, 8u8, {
            let unk3: u8 = unsafe { ::std::mem::transmute(unk3) };
            unk3 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterBone {
    pub joint: *mut JOBJ,
    pub joint2: *mut JOBJ,
    pub flags: ::std::os::raw::c_int,
    pub flags2: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterBone() {
    assert_eq!(
        ::std::mem::size_of::<FighterBone>(),
        24usize,
        concat!("Size of: ", stringify!(FighterBone))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterBone>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterBone))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterBone>())).joint as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterBone),
            "::",
            stringify!(joint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterBone>())).joint2 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterBone),
            "::",
            stringify!(joint2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterBone>())).flags as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterBone),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterBone>())).flags2 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterBone),
            "::",
            stringify!(flags2)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DynamicsDesc {
    pub root_bone: ::std::os::raw::c_int,
    pub params: *mut ::std::os::raw::c_void,
    pub num: ::std::os::raw::c_int,
    pub xc: f32,
    pub x10: f32,
    pub x14: f32,
}
#[test]
fn bindgen_test_layout_DynamicsDesc() {
    assert_eq!(
        ::std::mem::size_of::<DynamicsDesc>(),
        32usize,
        concat!("Size of: ", stringify!(DynamicsDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<DynamicsDesc>(),
        8usize,
        concat!("Alignment of ", stringify!(DynamicsDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DynamicsDesc>())).root_bone as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(DynamicsDesc),
            "::",
            stringify!(root_bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DynamicsDesc>())).params as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(DynamicsDesc),
            "::",
            stringify!(params)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DynamicsDesc>())).num as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(DynamicsDesc),
            "::",
            stringify!(num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DynamicsDesc>())).xc as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(DynamicsDesc),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DynamicsDesc>())).x10 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(DynamicsDesc),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DynamicsDesc>())).x14 as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(DynamicsDesc),
            "::",
            stringify!(x14)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DynamicsHitDesc {
    pub bone: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub x8: Vec3,
}
#[test]
fn bindgen_test_layout_DynamicsHitDesc() {
    assert_eq!(
        ::std::mem::size_of::<DynamicsHitDesc>(),
        20usize,
        concat!("Size of: ", stringify!(DynamicsHitDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<DynamicsHitDesc>(),
        4usize,
        concat!("Alignment of ", stringify!(DynamicsHitDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DynamicsHitDesc>())).bone as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(DynamicsHitDesc),
            "::",
            stringify!(bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DynamicsHitDesc>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(DynamicsHitDesc),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DynamicsHitDesc>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(DynamicsHitDesc),
            "::",
            stringify!(x8)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DynamicsBehave {
    pub num: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_DynamicsBehave() {
    assert_eq!(
        ::std::mem::size_of::<DynamicsBehave>(),
        4usize,
        concat!("Size of: ", stringify!(DynamicsBehave))
    );
    assert_eq!(
        ::std::mem::align_of::<DynamicsBehave>(),
        4usize,
        concat!("Alignment of ", stringify!(DynamicsBehave))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DynamicsBehave>())).num as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(DynamicsBehave),
            "::",
            stringify!(num)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ftDynamics {
    pub dynamics_num: ::std::os::raw::c_int,
    pub dynamics_desc: *mut DynamicsDesc,
    pub dynamics_hit_num: ::std::os::raw::c_int,
    pub dynamics_hit_desc: *mut DynamicsHitDesc,
    pub dynamics_behave: *mut *mut DynamicsBehave,
}
#[test]
fn bindgen_test_layout_ftDynamics() {
    assert_eq!(
        ::std::mem::size_of::<ftDynamics>(),
        40usize,
        concat!("Size of: ", stringify!(ftDynamics))
    );
    assert_eq!(
        ::std::mem::align_of::<ftDynamics>(),
        8usize,
        concat!("Alignment of ", stringify!(ftDynamics))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftDynamics>())).dynamics_num as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ftDynamics),
            "::",
            stringify!(dynamics_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftDynamics>())).dynamics_desc as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ftDynamics),
            "::",
            stringify!(dynamics_desc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftDynamics>())).dynamics_hit_num as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ftDynamics),
            "::",
            stringify!(dynamics_hit_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftDynamics>())).dynamics_hit_desc as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ftDynamics),
            "::",
            stringify!(dynamics_hit_desc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftDynamics>())).dynamics_behave as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ftDynamics),
            "::",
            stringify!(dynamics_behave)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ftData {
    pub footBoneL: ::std::os::raw::c_char,
    pub footBoneR: ::std::os::raw::c_char,
    pub charAttributes: *mut ::std::os::raw::c_int,
    pub modelLookup: *mut u8_,
    pub animFlags: ::std::os::raw::c_int,
    pub animDynamics: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1C: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_int,
    pub x28: ::std::os::raw::c_int,
    pub dynamics: *mut ftDynamics,
    pub hurtbox: ::std::os::raw::c_int,
    pub center_bubble: *mut ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3C: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub coll: ::std::os::raw::c_int,
    pub items: *mut ::std::os::raw::c_void,
    pub x4C: *mut ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub boneLookup: *mut ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_ftData() {
    assert_eq!(
        ::std::mem::size_of::<ftData>(),
        128usize,
        concat!("Size of: ", stringify!(ftData))
    );
    assert_eq!(
        ::std::mem::align_of::<ftData>(),
        8usize,
        concat!("Alignment of ", stringify!(ftData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).footBoneL as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(footBoneL)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).footBoneR as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(footBoneR)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).charAttributes as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(charAttributes)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).modelLookup as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(modelLookup)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).animFlags as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(animFlags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).animDynamics as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(animDynamics)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x14 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x18 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x1C as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x1C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x20 as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x24 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x28 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).dynamics as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(dynamics)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).hurtbox as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(hurtbox)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).center_bubble as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(center_bubble)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x38 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x3C as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x3C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x40 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).coll as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(coll)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).items as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(items)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x4C as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x4C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x50 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).x54 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftData>())).boneLookup as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(ftData),
            "::",
            stringify!(boneLookup)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ftChkDevice {
    pub x0: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub x8: ::std::os::raw::c_int,
    pub xc: ::std::os::raw::c_int,
    pub x10: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub gobj: *mut GOBJ,
    pub hazard_kind: ::std::os::raw::c_int,
    pub check: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_ftChkDevice() {
    assert_eq!(
        ::std::mem::size_of::<ftChkDevice>(),
        64usize,
        concat!("Size of: ", stringify!(ftChkDevice))
    );
    assert_eq!(
        ::std::mem::align_of::<ftChkDevice>(),
        8usize,
        concat!("Alignment of ", stringify!(ftChkDevice))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).x10 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).x14 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).x18 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).x1c as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).x20 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).gobj as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(gobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).hazard_kind as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(hazard_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftChkDevice>())).check as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(ftChkDevice),
            "::",
            stringify!(check)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SubactionHeader {
    pub symbol: *mut ::std::os::raw::c_char,
    pub animOffset: ::std::os::raw::c_int,
    pub animSize: ::std::os::raw::c_int,
    pub subactionData: *mut ::std::os::raw::c_int,
    pub flags: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_SubactionHeader() {
    assert_eq!(
        ::std::mem::size_of::<SubactionHeader>(),
        32usize,
        concat!("Size of: ", stringify!(SubactionHeader))
    );
    assert_eq!(
        ::std::mem::align_of::<SubactionHeader>(),
        8usize,
        concat!("Alignment of ", stringify!(SubactionHeader))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SubactionHeader>())).symbol as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(SubactionHeader),
            "::",
            stringify!(symbol)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SubactionHeader>())).animOffset as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(SubactionHeader),
            "::",
            stringify!(animOffset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SubactionHeader>())).animSize as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(SubactionHeader),
            "::",
            stringify!(animSize)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SubactionHeader>())).subactionData as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(SubactionHeader),
            "::",
            stringify!(subactionData)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SubactionHeader>())).flags as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(SubactionHeader),
            "::",
            stringify!(flags)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MoveLogic {
    pub animation_id: ::std::os::raw::c_int,
    pub flags: ::std::os::raw::c_int,
    pub move_id: ::std::os::raw::c_char,
    pub bitflags1: ::std::os::raw::c_char,
    pub animation_callback: *mut ::std::os::raw::c_void,
    pub iasa_callback: *mut ::std::os::raw::c_void,
    pub physics_callback: *mut ::std::os::raw::c_void,
    pub collision_callback: *mut ::std::os::raw::c_void,
    pub camera_callback: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_MoveLogic() {
    assert_eq!(
        ::std::mem::size_of::<MoveLogic>(),
        56usize,
        concat!("Size of: ", stringify!(MoveLogic))
    );
    assert_eq!(
        ::std::mem::align_of::<MoveLogic>(),
        8usize,
        concat!("Alignment of ", stringify!(MoveLogic))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MoveLogic>())).animation_id as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MoveLogic),
            "::",
            stringify!(animation_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MoveLogic>())).flags as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(MoveLogic),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MoveLogic>())).move_id as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MoveLogic),
            "::",
            stringify!(move_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MoveLogic>())).bitflags1 as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(MoveLogic),
            "::",
            stringify!(bitflags1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MoveLogic>())).animation_callback as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MoveLogic),
            "::",
            stringify!(animation_callback)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MoveLogic>())).iasa_callback as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MoveLogic),
            "::",
            stringify!(iasa_callback)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MoveLogic>())).physics_callback as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MoveLogic),
            "::",
            stringify!(physics_callback)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MoveLogic>())).collision_callback as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MoveLogic),
            "::",
            stringify!(collision_callback)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MoveLogic>())).camera_callback as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(MoveLogic),
            "::",
            stringify!(camera_callback)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ReflectDesc {
    pub bone: ::std::os::raw::c_int,
    pub max_damage: ::std::os::raw::c_int,
    pub pos: Vec3,
    pub radius: f32,
    pub damage_mult: f32,
    pub velocity_mult: f32,
    pub flags: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_ReflectDesc() {
    assert_eq!(
        ::std::mem::size_of::<ReflectDesc>(),
        36usize,
        concat!("Size of: ", stringify!(ReflectDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<ReflectDesc>(),
        4usize,
        concat!("Alignment of ", stringify!(ReflectDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ReflectDesc>())).bone as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ReflectDesc),
            "::",
            stringify!(bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ReflectDesc>())).max_damage as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(ReflectDesc),
            "::",
            stringify!(max_damage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ReflectDesc>())).pos as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ReflectDesc),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ReflectDesc>())).radius as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(ReflectDesc),
            "::",
            stringify!(radius)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ReflectDesc>())).damage_mult as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ReflectDesc),
            "::",
            stringify!(damage_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ReflectDesc>())).velocity_mult as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(ReflectDesc),
            "::",
            stringify!(velocity_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ReflectDesc>())).flags as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ReflectDesc),
            "::",
            stringify!(flags)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ShieldDesc {
    pub bone: ::std::os::raw::c_int,
    pub max_damage: ::std::os::raw::c_int,
    pub pos: Vec3,
    pub radius: f32,
    pub damage_mult: f32,
    pub velocity_mult: f32,
    pub flags: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_ShieldDesc() {
    assert_eq!(
        ::std::mem::size_of::<ShieldDesc>(),
        36usize,
        concat!("Size of: ", stringify!(ShieldDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<ShieldDesc>(),
        4usize,
        concat!("Alignment of ", stringify!(ShieldDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ShieldDesc>())).bone as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ShieldDesc),
            "::",
            stringify!(bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ShieldDesc>())).max_damage as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(ShieldDesc),
            "::",
            stringify!(max_damage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ShieldDesc>())).pos as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ShieldDesc),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ShieldDesc>())).radius as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(ShieldDesc),
            "::",
            stringify!(radius)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ShieldDesc>())).damage_mult as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ShieldDesc),
            "::",
            stringify!(damage_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ShieldDesc>())).velocity_mult as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(ShieldDesc),
            "::",
            stringify!(velocity_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ShieldDesc>())).flags as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ShieldDesc),
            "::",
            stringify!(flags)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct AbsorbDesc {
    pub bone: ::std::os::raw::c_int,
    pub max_damage: ::std::os::raw::c_int,
    pub pos: Vec3,
    pub radius: f32,
    pub damage_mult: f32,
    pub velocity_mult: f32,
    pub flags: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_AbsorbDesc() {
    assert_eq!(
        ::std::mem::size_of::<AbsorbDesc>(),
        36usize,
        concat!("Size of: ", stringify!(AbsorbDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<AbsorbDesc>(),
        4usize,
        concat!("Alignment of ", stringify!(AbsorbDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AbsorbDesc>())).bone as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(AbsorbDesc),
            "::",
            stringify!(bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AbsorbDesc>())).max_damage as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(AbsorbDesc),
            "::",
            stringify!(max_damage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AbsorbDesc>())).pos as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(AbsorbDesc),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AbsorbDesc>())).radius as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(AbsorbDesc),
            "::",
            stringify!(radius)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AbsorbDesc>())).damage_mult as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(AbsorbDesc),
            "::",
            stringify!(damage_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AbsorbDesc>())).velocity_mult as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(AbsorbDesc),
            "::",
            stringify!(velocity_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<AbsorbDesc>())).flags as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(AbsorbDesc),
            "::",
            stringify!(flags)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HitVictim {
    pub victim_data: *mut ::std::os::raw::c_void,
    pub unk: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_HitVictim() {
    assert_eq!(
        ::std::mem::size_of::<HitVictim>(),
        16usize,
        concat!("Size of: ", stringify!(HitVictim))
    );
    assert_eq!(
        ::std::mem::align_of::<HitVictim>(),
        8usize,
        concat!("Alignment of ", stringify!(HitVictim))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HitVictim>())).victim_data as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(HitVictim),
            "::",
            stringify!(victim_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HitVictim>())).unk as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(HitVictim),
            "::",
            stringify!(unk)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ftHit {
    pub active: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub dmg: ::std::os::raw::c_int,
    pub dmg_f: f32,
    pub offset: Vec3,
    pub size: f32,
    pub angle: ::std::os::raw::c_int,
    pub kb_growth: ::std::os::raw::c_int,
    pub wdsk: ::std::os::raw::c_int,
    pub kb: ::std::os::raw::c_int,
    pub attribute: ::std::os::raw::c_int,
    pub shield_dmg: ::std::os::raw::c_int,
    pub hitsound_severity: ::std::os::raw::c_int,
    pub hitsound_kind: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_char,
    pub x41: ::std::os::raw::c_char,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 2usize], u8>,
    pub x44: ::std::os::raw::c_int,
    pub bone: *mut JOBJ,
    pub pos: Vec3,
    pub pos_prev: Vec3,
    pub pos_coll: Vec3,
    pub coll_distance: f32,
    pub victims: [HitVictim; 24usize],
    pub x134: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_ftHit() {
    assert_eq!(
        ::std::mem::size_of::<ftHit>(),
        512usize,
        concat!("Size of: ", stringify!(ftHit))
    );
    assert_eq!(
        ::std::mem::align_of::<ftHit>(),
        8usize,
        concat!("Alignment of ", stringify!(ftHit))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).active as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(active)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).x4 as *const _ as usize },
        4usize,
        concat!("Offset of field: ", stringify!(ftHit), "::", stringify!(x4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).dmg as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(dmg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).dmg_f as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(dmg_f)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).offset as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).size as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).angle as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(angle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).kb_growth as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(kb_growth)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).wdsk as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(wdsk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).kb as *const _ as usize },
        44usize,
        concat!("Offset of field: ", stringify!(ftHit), "::", stringify!(kb))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).attribute as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(attribute)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).shield_dmg as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(shield_dmg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).hitsound_severity as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(hitsound_severity)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).hitsound_kind as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(hitsound_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).x40 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).x41 as *const _ as usize },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(x41)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).x44 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).bone as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).pos as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).pos_prev as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(pos_prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).pos_coll as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(pos_coll)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).coll_distance as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(coll_distance)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).victims as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(victims)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftHit>())).x134 as *const _ as usize },
        504usize,
        concat!(
            "Offset of field: ",
            stringify!(ftHit),
            "::",
            stringify!(x134)
        )
    );
}
impl ftHit {
    #[inline]
    pub fn x421(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x421(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x422(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x422(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x423(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x423(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x424(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x424(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn no_hurt(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_no_hurt(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn no_reflect(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_no_reflect(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x427(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x427(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x428(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x428(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x431(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(8usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x431(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(8usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x432(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(9usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x432(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(9usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hit_all(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(10usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hit_all(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(10usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x434(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(11usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x434(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(11usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x435(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(12usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x435(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(12usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x436(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(13usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x436(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(13usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x437(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(14usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x437(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(14usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x438(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(15usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x438(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(15usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        x421: ::std::os::raw::c_uchar,
        x422: ::std::os::raw::c_uchar,
        x423: ::std::os::raw::c_uchar,
        x424: ::std::os::raw::c_uchar,
        no_hurt: ::std::os::raw::c_uchar,
        no_reflect: ::std::os::raw::c_uchar,
        x427: ::std::os::raw::c_uchar,
        x428: ::std::os::raw::c_uchar,
        x431: ::std::os::raw::c_uchar,
        x432: ::std::os::raw::c_uchar,
        hit_all: ::std::os::raw::c_uchar,
        x434: ::std::os::raw::c_uchar,
        x435: ::std::os::raw::c_uchar,
        x436: ::std::os::raw::c_uchar,
        x437: ::std::os::raw::c_uchar,
        x438: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 2usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 2usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x421: u8 = unsafe { ::std::mem::transmute(x421) };
            x421 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x422: u8 = unsafe { ::std::mem::transmute(x422) };
            x422 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let x423: u8 = unsafe { ::std::mem::transmute(x423) };
            x423 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let x424: u8 = unsafe { ::std::mem::transmute(x424) };
            x424 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let no_hurt: u8 = unsafe { ::std::mem::transmute(no_hurt) };
            no_hurt as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let no_reflect: u8 = unsafe { ::std::mem::transmute(no_reflect) };
            no_reflect as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let x427: u8 = unsafe { ::std::mem::transmute(x427) };
            x427 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let x428: u8 = unsafe { ::std::mem::transmute(x428) };
            x428 as u64
        });
        __bindgen_bitfield_unit.set(8usize, 1u8, {
            let x431: u8 = unsafe { ::std::mem::transmute(x431) };
            x431 as u64
        });
        __bindgen_bitfield_unit.set(9usize, 1u8, {
            let x432: u8 = unsafe { ::std::mem::transmute(x432) };
            x432 as u64
        });
        __bindgen_bitfield_unit.set(10usize, 1u8, {
            let hit_all: u8 = unsafe { ::std::mem::transmute(hit_all) };
            hit_all as u64
        });
        __bindgen_bitfield_unit.set(11usize, 1u8, {
            let x434: u8 = unsafe { ::std::mem::transmute(x434) };
            x434 as u64
        });
        __bindgen_bitfield_unit.set(12usize, 1u8, {
            let x435: u8 = unsafe { ::std::mem::transmute(x435) };
            x435 as u64
        });
        __bindgen_bitfield_unit.set(13usize, 1u8, {
            let x436: u8 = unsafe { ::std::mem::transmute(x436) };
            x436 as u64
        });
        __bindgen_bitfield_unit.set(14usize, 1u8, {
            let x437: u8 = unsafe { ::std::mem::transmute(x437) };
            x437 as u64
        });
        __bindgen_bitfield_unit.set(15usize, 1u8, {
            let x438: u8 = unsafe { ::std::mem::transmute(x438) };
            x438 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtHurt {
    pub x0: ::std::os::raw::c_int,
    pub hurt1_offset: Vec3,
    pub hurt2_offset: Vec3,
    pub scale: f32,
    pub jobj: *mut JOBJ,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub hurt1_pos: Vec3,
    pub hurt2_pos: Vec3,
    pub bone_index: ::std::os::raw::c_int,
    pub hurt_kind: ::std::os::raw::c_int,
    pub is_grabbable: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FtHurt() {
    assert_eq!(
        ::std::mem::size_of::<FtHurt>(),
        80usize,
        concat!("Size of: ", stringify!(FtHurt))
    );
    assert_eq!(
        ::std::mem::align_of::<FtHurt>(),
        8usize,
        concat!("Alignment of ", stringify!(FtHurt))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtHurt>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtHurt),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtHurt>())).hurt1_offset as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FtHurt),
            "::",
            stringify!(hurt1_offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtHurt>())).hurt2_offset as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FtHurt),
            "::",
            stringify!(hurt2_offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtHurt>())).scale as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FtHurt),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtHurt>())).jobj as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FtHurt),
            "::",
            stringify!(jobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtHurt>())).hurt1_pos as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(FtHurt),
            "::",
            stringify!(hurt1_pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtHurt>())).hurt2_pos as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FtHurt),
            "::",
            stringify!(hurt2_pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtHurt>())).bone_index as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(FtHurt),
            "::",
            stringify!(bone_index)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtHurt>())).hurt_kind as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(FtHurt),
            "::",
            stringify!(hurt_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtHurt>())).is_grabbable as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(FtHurt),
            "::",
            stringify!(is_grabbable)
        )
    );
}
impl FtHurt {
    #[inline]
    pub fn is_updated(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_updated(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x24_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x24_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x24_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x24_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x24_4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x24_4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x24_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x24_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x24_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x24_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x24_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x24_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x24_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x24_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        is_updated: ::std::os::raw::c_uchar,
        x24_2: ::std::os::raw::c_uchar,
        x24_3: ::std::os::raw::c_uchar,
        x24_4: ::std::os::raw::c_uchar,
        x24_5: ::std::os::raw::c_uchar,
        x24_6: ::std::os::raw::c_uchar,
        x24_7: ::std::os::raw::c_uchar,
        x24_8: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let is_updated: u8 = unsafe { ::std::mem::transmute(is_updated) };
            is_updated as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x24_2: u8 = unsafe { ::std::mem::transmute(x24_2) };
            x24_2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let x24_3: u8 = unsafe { ::std::mem::transmute(x24_3) };
            x24_3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let x24_4: u8 = unsafe { ::std::mem::transmute(x24_4) };
            x24_4 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let x24_5: u8 = unsafe { ::std::mem::transmute(x24_5) };
            x24_5 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let x24_6: u8 = unsafe { ::std::mem::transmute(x24_6) };
            x24_6 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let x24_7: u8 = unsafe { ::std::mem::transmute(x24_7) };
            x24_7 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let x24_8: u8 = unsafe { ::std::mem::transmute(x24_8) };
            x24_8 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtDynamicBoneset {
    pub apply_phys_num: ::std::os::raw::c_int,
    pub unk_ptr: *mut ::std::os::raw::c_void,
    pub bone_num: ::std::os::raw::c_int,
    pub xc: f32,
    pub x10: f32,
    pub x14: f32,
}
#[test]
fn bindgen_test_layout_FtDynamicBoneset() {
    assert_eq!(
        ::std::mem::size_of::<FtDynamicBoneset>(),
        32usize,
        concat!("Size of: ", stringify!(FtDynamicBoneset))
    );
    assert_eq!(
        ::std::mem::align_of::<FtDynamicBoneset>(),
        8usize,
        concat!("Alignment of ", stringify!(FtDynamicBoneset))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicBoneset>())).apply_phys_num as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicBoneset),
            "::",
            stringify!(apply_phys_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicBoneset>())).unk_ptr as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicBoneset),
            "::",
            stringify!(unk_ptr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicBoneset>())).bone_num as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicBoneset),
            "::",
            stringify!(bone_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicBoneset>())).xc as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicBoneset),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicBoneset>())).x10 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicBoneset),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicBoneset>())).x14 as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicBoneset),
            "::",
            stringify!(x14)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtDynamicRoot {
    pub jobj: *mut JOBJ,
    pub rot: Vec4,
    pub trans: Vec3,
    pub scale: Vec3,
    pub rot_global: Vec3,
    pub x38: f32,
    pub x3c: f32,
    pub x40: f32,
    pub x44: f32,
    pub x48: f32,
    pub x4c: f32,
    pub x50: f32,
    pub x54: f32,
    pub x58: f32,
    pub x5c: f32,
    pub x60: f32,
    pub x64: f32,
    pub x68: f32,
    pub x6c: f32,
    pub x70: f32,
    pub x74: f32,
    pub x78: f32,
    pub x7c: f32,
    pub x80: f32,
    pub x84: f32,
    pub x88: f32,
    pub x8c: f32,
    pub next: *mut FtDynamicRoot,
    pub x94: f32,
}
#[test]
fn bindgen_test_layout_FtDynamicRoot() {
    assert_eq!(
        ::std::mem::size_of::<FtDynamicRoot>(),
        168usize,
        concat!("Size of: ", stringify!(FtDynamicRoot))
    );
    assert_eq!(
        ::std::mem::align_of::<FtDynamicRoot>(),
        8usize,
        concat!("Alignment of ", stringify!(FtDynamicRoot))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).jobj as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(jobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).rot as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(rot)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).trans as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(trans)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).scale as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).rot_global as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(rot_global)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x38 as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x3c as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x40 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x44 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x48 as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x4c as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x50 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x54 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x58 as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x5c as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x60 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x64 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x68 as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x6c as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x70 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x74 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x78 as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x7c as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x80 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x84 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x88 as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x8c as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).next as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicRoot>())).x94 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicRoot),
            "::",
            stringify!(x94)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtDynamicHit {
    pub x0: ::std::os::raw::c_int,
    pub x4: Vec3,
    pub bone: *mut JOBJ,
    pub x14: ::std::os::raw::c_int,
    pub pos: Vec3,
    pub bone_index: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FtDynamicHit() {
    assert_eq!(
        ::std::mem::size_of::<FtDynamicHit>(),
        48usize,
        concat!("Size of: ", stringify!(FtDynamicHit))
    );
    assert_eq!(
        ::std::mem::align_of::<FtDynamicHit>(),
        8usize,
        concat!("Alignment of ", stringify!(FtDynamicHit))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicHit>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicHit),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicHit>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicHit),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicHit>())).bone as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicHit),
            "::",
            stringify!(bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicHit>())).x14 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicHit),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicHit>())).pos as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicHit),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDynamicHit>())).bone_index as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDynamicHit),
            "::",
            stringify!(bone_index)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtAfterImageKey {
    pub pos: Vec3,
    pub rot: Vec3,
}
#[test]
fn bindgen_test_layout_FtAfterImageKey() {
    assert_eq!(
        ::std::mem::size_of::<FtAfterImageKey>(),
        24usize,
        concat!("Size of: ", stringify!(FtAfterImageKey))
    );
    assert_eq!(
        ::std::mem::align_of::<FtAfterImageKey>(),
        4usize,
        concat!("Alignment of ", stringify!(FtAfterImageKey))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtAfterImageKey>())).pos as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtAfterImageKey),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtAfterImageKey>())).rot as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FtAfterImageKey),
            "::",
            stringify!(rot)
        )
    );
}
extern "C" {
    pub static mut FtAfterImageKey: FtAfterImageKey;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CPU {
    pub held: ::std::os::raw::c_int,
    pub lstickX: s8,
    pub lstickY: s8,
    pub cstickX: s8,
    pub cstickY: s8,
    pub x8: ::std::os::raw::c_int,
    pub ai: ::std::os::raw::c_int,
    pub level: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_int,
    pub x28: ::std::os::raw::c_int,
    pub x2c: ::std::os::raw::c_int,
    pub x30: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3c: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4c: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8c: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa4: ::std::os::raw::c_int,
    pub xa8: ::std::os::raw::c_int,
    pub xac: ::std::os::raw::c_int,
    pub xb0: ::std::os::raw::c_int,
    pub xb4: ::std::os::raw::c_int,
    pub xb8: ::std::os::raw::c_int,
    pub xbc: ::std::os::raw::c_int,
    pub xc0: ::std::os::raw::c_int,
    pub xc4: ::std::os::raw::c_int,
    pub xc8: ::std::os::raw::c_int,
    pub xcc: ::std::os::raw::c_int,
    pub xd0: ::std::os::raw::c_int,
    pub xd4: ::std::os::raw::c_int,
    pub xd8: ::std::os::raw::c_int,
    pub xdc: ::std::os::raw::c_int,
    pub xe0: ::std::os::raw::c_int,
    pub xe4: ::std::os::raw::c_int,
    pub xe8: ::std::os::raw::c_int,
    pub xec: ::std::os::raw::c_int,
    pub xf0: ::std::os::raw::c_int,
    pub xf4: ::std::os::raw::c_int,
    pub xf8: ::std::os::raw::c_int,
    pub xfc: ::std::os::raw::c_int,
    pub x100: ::std::os::raw::c_int,
    pub x104: ::std::os::raw::c_int,
    pub x108: ::std::os::raw::c_int,
    pub x10c: ::std::os::raw::c_int,
    pub x110: ::std::os::raw::c_int,
    pub x114: ::std::os::raw::c_int,
    pub x118: ::std::os::raw::c_int,
    pub x11c: ::std::os::raw::c_int,
    pub x120: ::std::os::raw::c_int,
    pub x124: ::std::os::raw::c_int,
    pub x128: ::std::os::raw::c_int,
    pub x12c: ::std::os::raw::c_int,
    pub x130: ::std::os::raw::c_int,
    pub x134: ::std::os::raw::c_int,
    pub x138: ::std::os::raw::c_int,
    pub x13c: ::std::os::raw::c_int,
    pub x140: ::std::os::raw::c_int,
    pub x144: ::std::os::raw::c_int,
    pub x148: ::std::os::raw::c_int,
    pub x14c: ::std::os::raw::c_int,
    pub x150: ::std::os::raw::c_int,
    pub x154: ::std::os::raw::c_int,
    pub x158: ::std::os::raw::c_int,
    pub x15c: ::std::os::raw::c_int,
    pub x160: ::std::os::raw::c_int,
    pub x164: ::std::os::raw::c_int,
    pub x168: ::std::os::raw::c_int,
    pub x16c: ::std::os::raw::c_int,
    pub x170: ::std::os::raw::c_int,
    pub x174: ::std::os::raw::c_int,
    pub x178: ::std::os::raw::c_int,
    pub x17c: ::std::os::raw::c_int,
    pub x180: ::std::os::raw::c_int,
    pub x184: ::std::os::raw::c_int,
    pub x188: ::std::os::raw::c_int,
    pub x18c: ::std::os::raw::c_int,
    pub x190: ::std::os::raw::c_int,
    pub x194: ::std::os::raw::c_int,
    pub x198: ::std::os::raw::c_int,
    pub x19c: ::std::os::raw::c_int,
    pub x1a0: ::std::os::raw::c_int,
    pub x1a4: ::std::os::raw::c_int,
    pub x1a8: ::std::os::raw::c_int,
    pub x1ac: ::std::os::raw::c_int,
    pub x1b0: ::std::os::raw::c_int,
    pub x1b4: ::std::os::raw::c_int,
    pub x1b8: ::std::os::raw::c_int,
    pub x1bc: ::std::os::raw::c_int,
    pub x1c0: ::std::os::raw::c_int,
    pub x1c4: ::std::os::raw::c_int,
    pub x1c8: ::std::os::raw::c_int,
    pub x1cc: ::std::os::raw::c_int,
    pub x1d0: ::std::os::raw::c_int,
    pub x1d4: ::std::os::raw::c_int,
    pub x1d8: ::std::os::raw::c_int,
    pub x1dc: ::std::os::raw::c_int,
    pub x1e0: ::std::os::raw::c_int,
    pub x1e4: ::std::os::raw::c_int,
    pub x1e8: ::std::os::raw::c_int,
    pub x1ec: ::std::os::raw::c_int,
    pub x1f0: ::std::os::raw::c_int,
    pub x1f4: ::std::os::raw::c_int,
    pub x1f8: ::std::os::raw::c_int,
    pub x1fc: ::std::os::raw::c_int,
    pub x200: ::std::os::raw::c_int,
    pub x204: ::std::os::raw::c_int,
    pub x208: ::std::os::raw::c_int,
    pub x20c: ::std::os::raw::c_int,
    pub x210: ::std::os::raw::c_int,
    pub x214: ::std::os::raw::c_int,
    pub x218: ::std::os::raw::c_int,
    pub x21c: ::std::os::raw::c_int,
    pub x220: ::std::os::raw::c_int,
    pub x224: ::std::os::raw::c_int,
    pub x228: ::std::os::raw::c_int,
    pub x22c: ::std::os::raw::c_int,
    pub x230: ::std::os::raw::c_int,
    pub x234: ::std::os::raw::c_int,
    pub x238: ::std::os::raw::c_int,
    pub x23c: ::std::os::raw::c_int,
    pub x240: ::std::os::raw::c_int,
    pub x244: ::std::os::raw::c_int,
    pub x248: ::std::os::raw::c_int,
    pub x24c: ::std::os::raw::c_int,
    pub x250: ::std::os::raw::c_int,
    pub x254: ::std::os::raw::c_int,
    pub x258: ::std::os::raw::c_int,
    pub x25c: ::std::os::raw::c_int,
    pub x260: ::std::os::raw::c_int,
    pub x264: ::std::os::raw::c_int,
    pub x268: ::std::os::raw::c_int,
    pub x26c: ::std::os::raw::c_int,
    pub x270: ::std::os::raw::c_int,
    pub x274: ::std::os::raw::c_int,
    pub x278: ::std::os::raw::c_int,
    pub x27c: ::std::os::raw::c_int,
    pub x280: ::std::os::raw::c_int,
    pub x284: ::std::os::raw::c_int,
    pub x288: ::std::os::raw::c_int,
    pub x28c: ::std::os::raw::c_int,
    pub x290: ::std::os::raw::c_int,
    pub x294: ::std::os::raw::c_int,
    pub x298: ::std::os::raw::c_int,
    pub x29c: ::std::os::raw::c_int,
    pub x2a0: ::std::os::raw::c_int,
    pub x2a4: ::std::os::raw::c_int,
    pub x2a8: ::std::os::raw::c_int,
    pub x2ac: ::std::os::raw::c_int,
    pub x2b0: ::std::os::raw::c_int,
    pub x2b4: ::std::os::raw::c_int,
    pub x2b8: ::std::os::raw::c_int,
    pub x2bc: ::std::os::raw::c_int,
    pub x2c0: ::std::os::raw::c_int,
    pub x2c4: ::std::os::raw::c_int,
    pub x2c8: ::std::os::raw::c_int,
    pub x2cc: ::std::os::raw::c_int,
    pub x2d0: ::std::os::raw::c_int,
    pub x2d4: ::std::os::raw::c_int,
    pub x2d8: ::std::os::raw::c_int,
    pub x2dc: ::std::os::raw::c_int,
    pub x2e0: ::std::os::raw::c_int,
    pub x2e4: ::std::os::raw::c_int,
    pub x2e8: ::std::os::raw::c_int,
    pub x2ec: ::std::os::raw::c_int,
    pub x2f0: ::std::os::raw::c_int,
    pub x2f4: ::std::os::raw::c_int,
    pub x2f8: ::std::os::raw::c_int,
    pub x2fc: ::std::os::raw::c_int,
    pub x300: ::std::os::raw::c_int,
    pub x304: ::std::os::raw::c_int,
    pub x308: ::std::os::raw::c_int,
    pub x30c: ::std::os::raw::c_int,
    pub x310: ::std::os::raw::c_int,
    pub x314: ::std::os::raw::c_int,
    pub x318: ::std::os::raw::c_int,
    pub x31c: ::std::os::raw::c_int,
    pub x320: ::std::os::raw::c_int,
    pub x324: ::std::os::raw::c_int,
    pub x328: ::std::os::raw::c_int,
    pub x32c: ::std::os::raw::c_int,
    pub x330: ::std::os::raw::c_int,
    pub x334: ::std::os::raw::c_int,
    pub x338: ::std::os::raw::c_int,
    pub x33c: ::std::os::raw::c_int,
    pub x340: ::std::os::raw::c_int,
    pub x344: ::std::os::raw::c_int,
    pub x348: ::std::os::raw::c_int,
    pub x34c: ::std::os::raw::c_int,
    pub x350: ::std::os::raw::c_int,
    pub x354: ::std::os::raw::c_int,
    pub x358: ::std::os::raw::c_int,
    pub x35c: ::std::os::raw::c_int,
    pub x360: ::std::os::raw::c_int,
    pub x364: ::std::os::raw::c_int,
    pub x368: ::std::os::raw::c_int,
    pub x36c: ::std::os::raw::c_int,
    pub x370: ::std::os::raw::c_int,
    pub x374: ::std::os::raw::c_int,
    pub x378: ::std::os::raw::c_int,
    pub x37c: ::std::os::raw::c_int,
    pub x380: ::std::os::raw::c_int,
    pub x384: ::std::os::raw::c_int,
    pub x388: ::std::os::raw::c_int,
    pub x38c: ::std::os::raw::c_int,
    pub x390: ::std::os::raw::c_int,
    pub x394: ::std::os::raw::c_int,
    pub x398: ::std::os::raw::c_int,
    pub x39c: ::std::os::raw::c_int,
    pub x3a0: ::std::os::raw::c_int,
    pub x3a4: ::std::os::raw::c_int,
    pub x3a8: ::std::os::raw::c_int,
    pub x3ac: ::std::os::raw::c_int,
    pub x3b0: ::std::os::raw::c_int,
    pub x3b4: ::std::os::raw::c_int,
    pub x3b8: ::std::os::raw::c_int,
    pub x3bc: ::std::os::raw::c_int,
    pub x3c0: ::std::os::raw::c_int,
    pub x3c4: ::std::os::raw::c_int,
    pub x3c8: ::std::os::raw::c_int,
    pub x3cc: ::std::os::raw::c_int,
    pub x3d0: ::std::os::raw::c_int,
    pub x3d4: ::std::os::raw::c_int,
    pub x3d8: ::std::os::raw::c_int,
    pub x3dc: ::std::os::raw::c_int,
    pub x3e0: ::std::os::raw::c_int,
    pub x3e4: ::std::os::raw::c_int,
    pub x3e8: ::std::os::raw::c_int,
    pub x3ec: ::std::os::raw::c_int,
    pub x3f0: ::std::os::raw::c_int,
    pub x3f4: ::std::os::raw::c_int,
    pub x3f8: ::std::os::raw::c_int,
    pub x3fc: ::std::os::raw::c_int,
    pub x400: ::std::os::raw::c_int,
    pub x404: ::std::os::raw::c_int,
    pub x408: ::std::os::raw::c_int,
    pub x40c: ::std::os::raw::c_int,
    pub x410: ::std::os::raw::c_int,
    pub x414: ::std::os::raw::c_int,
    pub x418: ::std::os::raw::c_int,
    pub x41c: ::std::os::raw::c_int,
    pub x420: ::std::os::raw::c_int,
    pub x424: ::std::os::raw::c_int,
    pub x428: ::std::os::raw::c_int,
    pub x42c: ::std::os::raw::c_int,
    pub x430: ::std::os::raw::c_int,
    pub x434: ::std::os::raw::c_int,
    pub x438: ::std::os::raw::c_int,
    pub x43c: ::std::os::raw::c_int,
    pub x440: ::std::os::raw::c_int,
    pub curr_unk: *mut ::std::os::raw::c_int,
    pub curr_unk2: *mut ::std::os::raw::c_int,
    pub x44c: ::std::os::raw::c_int,
    pub x450: ::std::os::raw::c_int,
    pub x454: ::std::os::raw::c_int,
    pub x458: ::std::os::raw::c_int,
    pub x45c: ::std::os::raw::c_int,
    pub x460: ::std::os::raw::c_int,
    pub x464: ::std::os::raw::c_int,
    pub x468: ::std::os::raw::c_int,
    pub x46c: ::std::os::raw::c_int,
    pub x470: ::std::os::raw::c_int,
    pub x474: ::std::os::raw::c_int,
    pub x478: ::std::os::raw::c_int,
    pub x47c: ::std::os::raw::c_int,
    pub x480: ::std::os::raw::c_int,
    pub x484: ::std::os::raw::c_int,
    pub x488: ::std::os::raw::c_int,
    pub x48c: ::std::os::raw::c_int,
    pub x490: ::std::os::raw::c_int,
    pub x494: ::std::os::raw::c_int,
    pub x498: ::std::os::raw::c_int,
    pub x49c: ::std::os::raw::c_int,
    pub x4a0: ::std::os::raw::c_int,
    pub x4a4: ::std::os::raw::c_int,
    pub x4a8: ::std::os::raw::c_int,
    pub x4ac: ::std::os::raw::c_int,
    pub x4b0: ::std::os::raw::c_int,
    pub x4b4: ::std::os::raw::c_int,
    pub x4b8: ::std::os::raw::c_int,
    pub x4bc: ::std::os::raw::c_int,
    pub x4c0: ::std::os::raw::c_int,
    pub x4c4: ::std::os::raw::c_int,
    pub x4c8: ::std::os::raw::c_int,
    pub x4cc: ::std::os::raw::c_int,
    pub x4d0: ::std::os::raw::c_int,
    pub x4d4: ::std::os::raw::c_int,
    pub x4d8: ::std::os::raw::c_int,
    pub x4dc: ::std::os::raw::c_int,
    pub x4e0: ::std::os::raw::c_int,
    pub x4e4: ::std::os::raw::c_int,
    pub x4e8: ::std::os::raw::c_int,
    pub x4ec: ::std::os::raw::c_int,
    pub x4f0: ::std::os::raw::c_int,
    pub x4f4: ::std::os::raw::c_int,
    pub x4f8: ::std::os::raw::c_int,
    pub x4fc: ::std::os::raw::c_int,
    pub x500: ::std::os::raw::c_int,
    pub x504: ::std::os::raw::c_int,
    pub x508: ::std::os::raw::c_int,
    pub x50c: ::std::os::raw::c_int,
    pub x510: ::std::os::raw::c_int,
    pub x514: ::std::os::raw::c_int,
    pub x518: ::std::os::raw::c_int,
    pub x51c: ::std::os::raw::c_int,
    pub x520: ::std::os::raw::c_int,
    pub x524: ::std::os::raw::c_int,
    pub x528: ::std::os::raw::c_int,
    pub x52c: ::std::os::raw::c_int,
    pub x530: ::std::os::raw::c_int,
    pub x534: ::std::os::raw::c_int,
    pub x538: ::std::os::raw::c_int,
    pub x53c: ::std::os::raw::c_int,
    pub x540: ::std::os::raw::c_int,
    pub x544: ::std::os::raw::c_int,
    pub x548: ::std::os::raw::c_int,
    pub x54c: ::std::os::raw::c_int,
    pub x550: ::std::os::raw::c_int,
    pub x554: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_CPU() {
    assert_eq!(
        ::std::mem::size_of::<CPU>(),
        1384usize,
        concat!("Size of: ", stringify!(CPU))
    );
    assert_eq!(
        ::std::mem::align_of::<CPU>(),
        8usize,
        concat!("Alignment of ", stringify!(CPU))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).held as *const _ as usize },
        0usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(held))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).lstickX as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CPU),
            "::",
            stringify!(lstickX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).lstickY as *const _ as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(CPU),
            "::",
            stringify!(lstickY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).cstickX as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(CPU),
            "::",
            stringify!(cstickX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).cstickY as *const _ as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CPU),
            "::",
            stringify!(cstickY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x8 as *const _ as usize },
        8usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).ai as *const _ as usize },
        12usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(ai))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).level as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CPU),
            "::",
            stringify!(level)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x14 as *const _ as usize },
        20usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x14))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x18 as *const _ as usize },
        24usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x18))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1c as *const _ as usize },
        28usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x20 as *const _ as usize },
        32usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x20))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x24 as *const _ as usize },
        36usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x24))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x28 as *const _ as usize },
        40usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x28))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2c as *const _ as usize },
        44usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x30 as *const _ as usize },
        48usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x30))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x34 as *const _ as usize },
        52usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x34))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x38 as *const _ as usize },
        56usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x38))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3c as *const _ as usize },
        60usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x40 as *const _ as usize },
        64usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x40))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x44 as *const _ as usize },
        68usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x44))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x48 as *const _ as usize },
        72usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x48))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4c as *const _ as usize },
        76usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x50 as *const _ as usize },
        80usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x50))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x54 as *const _ as usize },
        84usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x54))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x58 as *const _ as usize },
        88usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x58))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x5c as *const _ as usize },
        92usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x5c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x60 as *const _ as usize },
        96usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x60))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x64 as *const _ as usize },
        100usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x64))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x68 as *const _ as usize },
        104usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x68))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x6c as *const _ as usize },
        108usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x6c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x70 as *const _ as usize },
        112usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x70))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x74 as *const _ as usize },
        116usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x74))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x78 as *const _ as usize },
        120usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x78))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x7c as *const _ as usize },
        124usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x7c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x80 as *const _ as usize },
        128usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x80))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x84 as *const _ as usize },
        132usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x84))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x88 as *const _ as usize },
        136usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x88))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x8c as *const _ as usize },
        140usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x8c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x90 as *const _ as usize },
        144usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x90))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x94 as *const _ as usize },
        148usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x94))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x98 as *const _ as usize },
        152usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x98))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x9c as *const _ as usize },
        156usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x9c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xa0 as *const _ as usize },
        160usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xa0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xa4 as *const _ as usize },
        164usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xa4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xa8 as *const _ as usize },
        168usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xa8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xac as *const _ as usize },
        172usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xac))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xb0 as *const _ as usize },
        176usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xb0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xb4 as *const _ as usize },
        180usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xb4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xb8 as *const _ as usize },
        184usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xb8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xbc as *const _ as usize },
        188usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xbc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xc0 as *const _ as usize },
        192usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xc0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xc4 as *const _ as usize },
        196usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xc4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xc8 as *const _ as usize },
        200usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xc8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xcc as *const _ as usize },
        204usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xcc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xd0 as *const _ as usize },
        208usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xd0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xd4 as *const _ as usize },
        212usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xd4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xd8 as *const _ as usize },
        216usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xd8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xdc as *const _ as usize },
        220usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xdc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xe0 as *const _ as usize },
        224usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xe0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xe4 as *const _ as usize },
        228usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xe4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xe8 as *const _ as usize },
        232usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xe8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xec as *const _ as usize },
        236usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xec))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xf0 as *const _ as usize },
        240usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xf0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xf4 as *const _ as usize },
        244usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xf4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xf8 as *const _ as usize },
        248usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xf8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).xfc as *const _ as usize },
        252usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(xfc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x100 as *const _ as usize },
        256usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x100))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x104 as *const _ as usize },
        260usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x104))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x108 as *const _ as usize },
        264usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x108))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x10c as *const _ as usize },
        268usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x10c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x110 as *const _ as usize },
        272usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x110))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x114 as *const _ as usize },
        276usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x114))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x118 as *const _ as usize },
        280usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x118))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x11c as *const _ as usize },
        284usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x11c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x120 as *const _ as usize },
        288usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x120))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x124 as *const _ as usize },
        292usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x124))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x128 as *const _ as usize },
        296usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x128))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x12c as *const _ as usize },
        300usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x12c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x130 as *const _ as usize },
        304usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x130))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x134 as *const _ as usize },
        308usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x134))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x138 as *const _ as usize },
        312usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x138))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x13c as *const _ as usize },
        316usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x13c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x140 as *const _ as usize },
        320usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x140))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x144 as *const _ as usize },
        324usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x144))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x148 as *const _ as usize },
        328usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x148))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x14c as *const _ as usize },
        332usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x14c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x150 as *const _ as usize },
        336usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x150))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x154 as *const _ as usize },
        340usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x154))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x158 as *const _ as usize },
        344usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x158))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x15c as *const _ as usize },
        348usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x15c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x160 as *const _ as usize },
        352usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x160))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x164 as *const _ as usize },
        356usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x164))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x168 as *const _ as usize },
        360usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x168))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x16c as *const _ as usize },
        364usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x16c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x170 as *const _ as usize },
        368usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x170))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x174 as *const _ as usize },
        372usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x174))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x178 as *const _ as usize },
        376usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x178))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x17c as *const _ as usize },
        380usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x17c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x180 as *const _ as usize },
        384usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x180))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x184 as *const _ as usize },
        388usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x184))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x188 as *const _ as usize },
        392usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x188))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x18c as *const _ as usize },
        396usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x18c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x190 as *const _ as usize },
        400usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x190))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x194 as *const _ as usize },
        404usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x194))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x198 as *const _ as usize },
        408usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x198))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x19c as *const _ as usize },
        412usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x19c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1a0 as *const _ as usize },
        416usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1a0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1a4 as *const _ as usize },
        420usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1a4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1a8 as *const _ as usize },
        424usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1a8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1ac as *const _ as usize },
        428usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1ac))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1b0 as *const _ as usize },
        432usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1b0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1b4 as *const _ as usize },
        436usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1b4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1b8 as *const _ as usize },
        440usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1b8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1bc as *const _ as usize },
        444usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1bc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1c0 as *const _ as usize },
        448usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1c0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1c4 as *const _ as usize },
        452usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1c4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1c8 as *const _ as usize },
        456usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1c8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1cc as *const _ as usize },
        460usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1cc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1d0 as *const _ as usize },
        464usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1d0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1d4 as *const _ as usize },
        468usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1d4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1d8 as *const _ as usize },
        472usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1d8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1dc as *const _ as usize },
        476usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1dc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1e0 as *const _ as usize },
        480usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1e0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1e4 as *const _ as usize },
        484usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1e4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1e8 as *const _ as usize },
        488usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1e8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1ec as *const _ as usize },
        492usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1ec))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1f0 as *const _ as usize },
        496usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1f0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1f4 as *const _ as usize },
        500usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1f4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1f8 as *const _ as usize },
        504usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1f8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x1fc as *const _ as usize },
        508usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x1fc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x200 as *const _ as usize },
        512usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x200))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x204 as *const _ as usize },
        516usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x204))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x208 as *const _ as usize },
        520usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x208))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x20c as *const _ as usize },
        524usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x20c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x210 as *const _ as usize },
        528usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x210))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x214 as *const _ as usize },
        532usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x214))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x218 as *const _ as usize },
        536usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x218))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x21c as *const _ as usize },
        540usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x21c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x220 as *const _ as usize },
        544usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x220))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x224 as *const _ as usize },
        548usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x224))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x228 as *const _ as usize },
        552usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x228))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x22c as *const _ as usize },
        556usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x22c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x230 as *const _ as usize },
        560usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x230))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x234 as *const _ as usize },
        564usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x234))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x238 as *const _ as usize },
        568usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x238))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x23c as *const _ as usize },
        572usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x23c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x240 as *const _ as usize },
        576usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x240))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x244 as *const _ as usize },
        580usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x244))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x248 as *const _ as usize },
        584usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x248))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x24c as *const _ as usize },
        588usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x24c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x250 as *const _ as usize },
        592usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x250))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x254 as *const _ as usize },
        596usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x254))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x258 as *const _ as usize },
        600usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x258))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x25c as *const _ as usize },
        604usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x25c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x260 as *const _ as usize },
        608usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x260))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x264 as *const _ as usize },
        612usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x264))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x268 as *const _ as usize },
        616usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x268))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x26c as *const _ as usize },
        620usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x26c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x270 as *const _ as usize },
        624usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x270))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x274 as *const _ as usize },
        628usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x274))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x278 as *const _ as usize },
        632usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x278))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x27c as *const _ as usize },
        636usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x27c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x280 as *const _ as usize },
        640usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x280))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x284 as *const _ as usize },
        644usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x284))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x288 as *const _ as usize },
        648usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x288))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x28c as *const _ as usize },
        652usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x28c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x290 as *const _ as usize },
        656usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x290))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x294 as *const _ as usize },
        660usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x294))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x298 as *const _ as usize },
        664usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x298))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x29c as *const _ as usize },
        668usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x29c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2a0 as *const _ as usize },
        672usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2a0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2a4 as *const _ as usize },
        676usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2a4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2a8 as *const _ as usize },
        680usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2a8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2ac as *const _ as usize },
        684usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2ac))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2b0 as *const _ as usize },
        688usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2b0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2b4 as *const _ as usize },
        692usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2b4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2b8 as *const _ as usize },
        696usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2b8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2bc as *const _ as usize },
        700usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2bc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2c0 as *const _ as usize },
        704usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2c0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2c4 as *const _ as usize },
        708usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2c4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2c8 as *const _ as usize },
        712usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2c8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2cc as *const _ as usize },
        716usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2cc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2d0 as *const _ as usize },
        720usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2d0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2d4 as *const _ as usize },
        724usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2d4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2d8 as *const _ as usize },
        728usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2d8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2dc as *const _ as usize },
        732usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2dc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2e0 as *const _ as usize },
        736usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2e0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2e4 as *const _ as usize },
        740usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2e4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2e8 as *const _ as usize },
        744usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2e8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2ec as *const _ as usize },
        748usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2ec))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2f0 as *const _ as usize },
        752usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2f0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2f4 as *const _ as usize },
        756usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2f4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2f8 as *const _ as usize },
        760usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2f8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x2fc as *const _ as usize },
        764usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x2fc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x300 as *const _ as usize },
        768usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x300))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x304 as *const _ as usize },
        772usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x304))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x308 as *const _ as usize },
        776usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x308))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x30c as *const _ as usize },
        780usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x30c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x310 as *const _ as usize },
        784usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x310))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x314 as *const _ as usize },
        788usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x314))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x318 as *const _ as usize },
        792usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x318))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x31c as *const _ as usize },
        796usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x31c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x320 as *const _ as usize },
        800usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x320))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x324 as *const _ as usize },
        804usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x324))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x328 as *const _ as usize },
        808usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x328))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x32c as *const _ as usize },
        812usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x32c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x330 as *const _ as usize },
        816usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x330))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x334 as *const _ as usize },
        820usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x334))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x338 as *const _ as usize },
        824usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x338))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x33c as *const _ as usize },
        828usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x33c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x340 as *const _ as usize },
        832usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x340))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x344 as *const _ as usize },
        836usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x344))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x348 as *const _ as usize },
        840usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x348))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x34c as *const _ as usize },
        844usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x34c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x350 as *const _ as usize },
        848usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x350))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x354 as *const _ as usize },
        852usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x354))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x358 as *const _ as usize },
        856usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x358))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x35c as *const _ as usize },
        860usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x35c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x360 as *const _ as usize },
        864usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x360))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x364 as *const _ as usize },
        868usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x364))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x368 as *const _ as usize },
        872usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x368))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x36c as *const _ as usize },
        876usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x36c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x370 as *const _ as usize },
        880usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x370))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x374 as *const _ as usize },
        884usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x374))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x378 as *const _ as usize },
        888usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x378))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x37c as *const _ as usize },
        892usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x37c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x380 as *const _ as usize },
        896usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x380))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x384 as *const _ as usize },
        900usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x384))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x388 as *const _ as usize },
        904usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x388))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x38c as *const _ as usize },
        908usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x38c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x390 as *const _ as usize },
        912usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x390))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x394 as *const _ as usize },
        916usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x394))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x398 as *const _ as usize },
        920usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x398))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x39c as *const _ as usize },
        924usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x39c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3a0 as *const _ as usize },
        928usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3a0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3a4 as *const _ as usize },
        932usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3a4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3a8 as *const _ as usize },
        936usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3a8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3ac as *const _ as usize },
        940usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3ac))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3b0 as *const _ as usize },
        944usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3b0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3b4 as *const _ as usize },
        948usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3b4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3b8 as *const _ as usize },
        952usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3b8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3bc as *const _ as usize },
        956usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3bc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3c0 as *const _ as usize },
        960usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3c0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3c4 as *const _ as usize },
        964usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3c4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3c8 as *const _ as usize },
        968usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3c8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3cc as *const _ as usize },
        972usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3cc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3d0 as *const _ as usize },
        976usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3d0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3d4 as *const _ as usize },
        980usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3d4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3d8 as *const _ as usize },
        984usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3d8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3dc as *const _ as usize },
        988usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3dc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3e0 as *const _ as usize },
        992usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3e0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3e4 as *const _ as usize },
        996usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3e4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3e8 as *const _ as usize },
        1000usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3e8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3ec as *const _ as usize },
        1004usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3ec))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3f0 as *const _ as usize },
        1008usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3f0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3f4 as *const _ as usize },
        1012usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3f4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3f8 as *const _ as usize },
        1016usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3f8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x3fc as *const _ as usize },
        1020usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x3fc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x400 as *const _ as usize },
        1024usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x400))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x404 as *const _ as usize },
        1028usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x404))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x408 as *const _ as usize },
        1032usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x408))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x40c as *const _ as usize },
        1036usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x40c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x410 as *const _ as usize },
        1040usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x410))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x414 as *const _ as usize },
        1044usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x414))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x418 as *const _ as usize },
        1048usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x418))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x41c as *const _ as usize },
        1052usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x41c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x420 as *const _ as usize },
        1056usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x420))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x424 as *const _ as usize },
        1060usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x424))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x428 as *const _ as usize },
        1064usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x428))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x42c as *const _ as usize },
        1068usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x42c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x430 as *const _ as usize },
        1072usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x430))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x434 as *const _ as usize },
        1076usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x434))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x438 as *const _ as usize },
        1080usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x438))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x43c as *const _ as usize },
        1084usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x43c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x440 as *const _ as usize },
        1088usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x440))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).curr_unk as *const _ as usize },
        1096usize,
        concat!(
            "Offset of field: ",
            stringify!(CPU),
            "::",
            stringify!(curr_unk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).curr_unk2 as *const _ as usize },
        1104usize,
        concat!(
            "Offset of field: ",
            stringify!(CPU),
            "::",
            stringify!(curr_unk2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x44c as *const _ as usize },
        1112usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x44c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x450 as *const _ as usize },
        1116usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x450))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x454 as *const _ as usize },
        1120usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x454))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x458 as *const _ as usize },
        1124usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x458))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x45c as *const _ as usize },
        1128usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x45c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x460 as *const _ as usize },
        1132usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x460))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x464 as *const _ as usize },
        1136usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x464))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x468 as *const _ as usize },
        1140usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x468))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x46c as *const _ as usize },
        1144usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x46c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x470 as *const _ as usize },
        1148usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x470))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x474 as *const _ as usize },
        1152usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x474))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x478 as *const _ as usize },
        1156usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x478))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x47c as *const _ as usize },
        1160usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x47c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x480 as *const _ as usize },
        1164usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x480))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x484 as *const _ as usize },
        1168usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x484))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x488 as *const _ as usize },
        1172usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x488))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x48c as *const _ as usize },
        1176usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x48c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x490 as *const _ as usize },
        1180usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x490))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x494 as *const _ as usize },
        1184usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x494))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x498 as *const _ as usize },
        1188usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x498))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x49c as *const _ as usize },
        1192usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x49c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4a0 as *const _ as usize },
        1196usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4a0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4a4 as *const _ as usize },
        1200usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4a4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4a8 as *const _ as usize },
        1204usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4a8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4ac as *const _ as usize },
        1208usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4ac))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4b0 as *const _ as usize },
        1212usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4b0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4b4 as *const _ as usize },
        1216usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4b4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4b8 as *const _ as usize },
        1220usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4b8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4bc as *const _ as usize },
        1224usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4bc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4c0 as *const _ as usize },
        1228usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4c0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4c4 as *const _ as usize },
        1232usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4c4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4c8 as *const _ as usize },
        1236usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4c8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4cc as *const _ as usize },
        1240usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4cc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4d0 as *const _ as usize },
        1244usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4d0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4d4 as *const _ as usize },
        1248usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4d4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4d8 as *const _ as usize },
        1252usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4d8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4dc as *const _ as usize },
        1256usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4dc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4e0 as *const _ as usize },
        1260usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4e0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4e4 as *const _ as usize },
        1264usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4e4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4e8 as *const _ as usize },
        1268usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4e8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4ec as *const _ as usize },
        1272usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4ec))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4f0 as *const _ as usize },
        1276usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4f0))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4f4 as *const _ as usize },
        1280usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4f4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4f8 as *const _ as usize },
        1284usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4f8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x4fc as *const _ as usize },
        1288usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x4fc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x500 as *const _ as usize },
        1292usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x500))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x504 as *const _ as usize },
        1296usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x504))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x508 as *const _ as usize },
        1300usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x508))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x50c as *const _ as usize },
        1304usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x50c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x510 as *const _ as usize },
        1308usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x510))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x514 as *const _ as usize },
        1312usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x514))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x518 as *const _ as usize },
        1316usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x518))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x51c as *const _ as usize },
        1320usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x51c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x520 as *const _ as usize },
        1324usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x520))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x524 as *const _ as usize },
        1328usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x524))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x528 as *const _ as usize },
        1332usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x528))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x52c as *const _ as usize },
        1336usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x52c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x530 as *const _ as usize },
        1340usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x530))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x534 as *const _ as usize },
        1344usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x534))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x538 as *const _ as usize },
        1348usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x538))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x53c as *const _ as usize },
        1352usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x53c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x540 as *const _ as usize },
        1356usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x540))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x544 as *const _ as usize },
        1360usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x544))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x548 as *const _ as usize },
        1364usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x548))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x54c as *const _ as usize },
        1368usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x54c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x550 as *const _ as usize },
        1372usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x550))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CPU>())).x554 as *const _ as usize },
        1376usize,
        concat!("Offset of field: ", stringify!(CPU), "::", stringify!(x554))
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ftCommonData {
    pub x0: f32,
    pub x4: f32,
    pub x8: f32,
    pub xc: f32,
    pub x10: f32,
    pub x14: f32,
    pub x18: f32,
    pub x1c: f32,
    pub lstick_tilt: f32,
    pub x24: f32,
    pub x28: f32,
    pub x2c: f32,
    pub x30: f32,
    pub x34: f32,
    pub x38: f32,
    pub x3c: f32,
    pub x40: f32,
    pub x44: f32,
    pub x48: f32,
    pub x4c: f32,
    pub x50: f32,
    pub x54: f32,
    pub x58: f32,
    pub x5c: f32,
    pub x60: f32,
    pub x64: f32,
    pub x68: f32,
    pub friction_mult: f32,
    pub jumpaerial_lsticky: f32,
    pub jumpaerial_lsticktimer: f32,
    pub x78: f32,
    pub x7c: f32,
    pub x80: f32,
    pub x84: f32,
    pub x88: f32,
    pub x8c: f32,
    pub lstick_rebirthfall: f32,
    pub x94: f32,
    pub x98: f32,
    pub x9c: f32,
    pub xa0: f32,
    pub xa4: f32,
    pub xa8: f32,
    pub xac: f32,
    pub xb0: f32,
    pub xb4: f32,
    pub xb8: f32,
    pub xbc: f32,
    pub xc0: f32,
    pub xc4: f32,
    pub xc8: f32,
    pub xcc: f32,
    pub xd0: f32,
    pub xd4: f32,
    pub xd8: f32,
    pub xdc: f32,
    pub xe0: f32,
    pub xe4: f32,
    pub xe8: f32,
    pub xec: f32,
    pub xf0: f32,
    pub xf4: f32,
    pub xf8: f32,
    pub xfc: f32,
    pub kb_mult: f32,
    pub x104: f32,
    pub x108: f32,
    pub x10c: f32,
    pub x110: f32,
    pub x114: f32,
    pub x118: f32,
    pub x11c: f32,
    pub x120: f32,
    pub x124: f32,
    pub x128: f32,
    pub x12c: f32,
    pub x130: f32,
    pub x134: f32,
    pub x138: f32,
    pub x13c: f32,
    pub x140: f32,
    pub x144: f32,
    pub x148: f32,
    pub x14c: f32,
    pub x150: f32,
    pub x154: f32,
    pub x158: f32,
    pub x15c: f32,
    pub x160: f32,
    pub x164: f32,
    pub x168: f32,
    pub kb_maxVelX: f32,
    pub x170: f32,
    pub x174: f32,
    pub x178: f32,
    pub x17c: f32,
    pub x180: f32,
    pub x184: f32,
    pub x188: f32,
    pub x18c: f32,
    pub x190: f32,
    pub x194: f32,
    pub x198: f32,
    pub x19c: f32,
    pub x1a0: f32,
    pub x1a4: f32,
    pub tdi_maxAngle: f32,
    pub x1ac: f32,
    pub x1b0: f32,
    pub x1b4: f32,
    pub x1b8: f32,
    pub kb_bounceDecay: f32,
    pub x1c0: f32,
    pub x1c4: f32,
    pub x1c8: f32,
    pub x1cc: f32,
    pub x1d0: f32,
    pub x1d4: f32,
    pub x1d8: f32,
    pub x1dc: f32,
    pub x1e0: f32,
    pub x1e4: f32,
    pub x1e8: f32,
    pub x1ec: f32,
    pub x1f0: f32,
    pub x1f4: f32,
    pub x1f8: f32,
    pub x1fc: f32,
    pub x200: f32,
    pub kb_frameDecay: f32,
    pub x208: f32,
    pub x20c: f32,
    pub x210: f32,
    pub x214: f32,
    pub x218: f32,
    pub x21c: f32,
    pub x220: f32,
    pub x224: f32,
    pub x228: f32,
    pub x22c: f32,
    pub x230: f32,
    pub x234: f32,
    pub x238: f32,
    pub x23c: f32,
    pub x240: f32,
    pub x244: f32,
    pub x248: f32,
    pub x24c: f32,
    pub x250: f32,
    pub x254: f32,
    pub x258: f32,
    pub x25c: f32,
    pub x260: f32,
    pub x264: f32,
    pub x268: f32,
    pub x26c: f32,
    pub x270: f32,
    pub x274: f32,
    pub x278: f32,
    pub x27c: f32,
    pub x280: f32,
    pub x284: f32,
    pub x288: f32,
    pub x28c: f32,
    pub x290: f32,
    pub x294: f32,
    pub x298: f32,
    pub x29c: f32,
    pub x2a0: f32,
    pub x2a4: f32,
    pub x2a8: f32,
    pub x2ac: f32,
    pub x2b0: f32,
    pub x2b4: f32,
    pub x2b8: f32,
    pub x2bc: f32,
    pub x2c0: f32,
    pub x2c4: f32,
    pub x2c8: f32,
    pub x2cc: f32,
    pub x2d0: f32,
    pub x2d4: f32,
    pub x2d8: f32,
    pub x2dc: f32,
    pub x2e0: f32,
    pub x2e4: f32,
    pub x2e8: f32,
    pub x2ec: f32,
    pub x2f0: f32,
    pub x2f4: f32,
    pub x2f8: f32,
    pub x2fc: f32,
    pub x300: f32,
    pub x304: f32,
    pub x308: f32,
    pub x30c: f32,
    pub x310: f32,
    pub x314: f32,
    pub x318: f32,
    pub x31c: f32,
    pub x320: f32,
    pub x324: f32,
    pub x328: f32,
    pub x32c: f32,
    pub x330: f32,
    pub x334: f32,
    pub escapeair_vel: f32,
    pub escapeair_veldecaymult: f32,
    pub x340: f32,
    pub x344: f32,
    pub x348: f32,
    pub x34c: f32,
    pub x350: f32,
    pub x354: f32,
    pub x358: f32,
    pub x35c: f32,
    pub x360: f32,
    pub x364: f32,
    pub x368: f32,
    pub x36c: f32,
    pub x370: f32,
    pub x374: f32,
    pub x378: f32,
    pub x37c: f32,
    pub x380: f32,
    pub x384: f32,
    pub x388: f32,
    pub x38c: f32,
    pub x390: f32,
    pub x394: f32,
    pub x398: f32,
    pub x39c: f32,
    pub x3a0: f32,
    pub x3a4: f32,
    pub x3a8: f32,
    pub x3ac: f32,
    pub x3b0: f32,
    pub x3b4: f32,
    pub x3b8: f32,
    pub x3bc: f32,
    pub x3c0: f32,
    pub x3c4: f32,
    pub x3c8: f32,
    pub x3cc: f32,
    pub x3d0: f32,
    pub x3d4: f32,
    pub x3d8: f32,
    pub x3dc: f32,
    pub x3e0: f32,
    pub x3e4: f32,
    pub x3e8: f32,
    pub x3ec: f32,
    pub x3f0: f32,
    pub x3f4: f32,
    pub x3f8: f32,
    pub x3fc: f32,
    pub x400: f32,
    pub x404: f32,
    pub x408: f32,
    pub x40c: f32,
    pub x410: f32,
    pub x414: f32,
    pub x418: f32,
    pub x41c: f32,
    pub x420: f32,
    pub x424: f32,
    pub x428: f32,
    pub x42c: f32,
    pub x430: f32,
    pub x434: f32,
    pub x438: f32,
    pub x43c: f32,
    pub x440: f32,
    pub x444: f32,
    pub x448: f32,
    pub x44c: f32,
    pub x450: f32,
    pub zjostle_frame: f32,
    pub zjostle_max: f32,
    pub ms_zjostle_frame: f32,
    pub ms_zjostle_max: f32,
    pub x464: f32,
    pub x468: f32,
    pub x46c: f32,
    pub x470: f32,
    pub x474: f32,
    pub x478: f32,
    pub x47c: f32,
    pub x480: f32,
    pub x484: f32,
    pub x488: f32,
    pub x48c: f32,
    pub x490: f32,
    pub x494: f32,
    pub x498: f32,
    pub cliff_invuln_time: ::std::os::raw::c_int,
    pub x4a0: f32,
    pub x4a4: f32,
    pub x4a8: f32,
    pub x4ac: f32,
    pub asdi_mag: f32,
    pub x4b4: f32,
    pub x4b8: f32,
    pub asdi_units: f32,
    pub x4c0: f32,
    pub x4c4: f32,
    pub x4c8: f32,
    pub x4cc: f32,
    pub x4d0: f32,
    pub x4d4: f32,
    pub x4d8: f32,
    pub x4dc: f32,
    pub x4e0: f32,
    pub x4e4: f32,
    pub x4e8: f32,
    pub x4ec: f32,
    pub x4f0: f32,
    pub x4f4: f32,
    pub x4f8: f32,
    pub x4fc: f32,
    pub x500: f32,
    pub x504: f32,
    pub x508: f32,
    pub x50c: f32,
    pub x510: f32,
    pub x514: f32,
    pub x518: f32,
    pub x51c: f32,
    pub x520: f32,
    pub x524: f32,
    pub x528: f32,
    pub x52c: f32,
    pub x530: f32,
    pub x534: f32,
    pub x538: f32,
    pub x53c: f32,
    pub x540: f32,
    pub x544: f32,
    pub x548: f32,
    pub x54c: f32,
    pub x550: f32,
    pub x554: f32,
    pub x558: f32,
    pub x55c: f32,
    pub x560: f32,
    pub x564: f32,
    pub x568: f32,
    pub x56c: f32,
    pub x570: f32,
    pub x574: f32,
    pub x578: f32,
    pub x57c: f32,
    pub x580: f32,
    pub x584: f32,
    pub x588: f32,
    pub x58c: f32,
    pub x590: f32,
    pub x594: f32,
    pub x598: f32,
    pub x59c: f32,
    pub x5a0: f32,
    pub x5a4: f32,
    pub x5a8: f32,
    pub x5ac: f32,
    pub x5b0: f32,
    pub x5b4: f32,
    pub x5b8: f32,
    pub x5bc: f32,
    pub x5c0: f32,
    pub x5c4: f32,
    pub x5c8: f32,
    pub x5cc: f32,
    pub x5d0: f32,
    pub x5d4: f32,
    pub x5d8: f32,
    pub x5dc: f32,
    pub x5e0: f32,
    pub x5e4: f32,
    pub x5e8: f32,
    pub x5ec: f32,
    pub x5f0: f32,
    pub x5f4: f32,
    pub x5f8: f32,
    pub x5fc: f32,
    pub x600: f32,
    pub x604: f32,
    pub x608: f32,
    pub x60c: f32,
    pub x610: f32,
    pub x614: f32,
    pub x618: f32,
    pub x61c: f32,
    pub x620: f32,
    pub x624: f32,
    pub x628: f32,
    pub x62c: f32,
    pub x630: f32,
    pub x634: f32,
    pub x638: f32,
    pub x63c: f32,
    pub x640: f32,
    pub x644: f32,
    pub x648: f32,
    pub x64c: f32,
    pub x650: f32,
    pub x654: f32,
    pub x658: f32,
    pub x65c: f32,
    pub x660: f32,
    pub x664: f32,
    pub x668: f32,
    pub x66c: f32,
    pub x670: f32,
    pub x674: f32,
    pub x678: f32,
    pub x67c: f32,
    pub x680: f32,
    pub x684: f32,
    pub x688: f32,
    pub x68c: f32,
    pub x690: f32,
    pub x694: f32,
    pub x698: f32,
    pub x69c: f32,
    pub x6a0: f32,
    pub x6a4: f32,
    pub x6a8: f32,
    pub x6ac: f32,
    pub x6b0: f32,
    pub x6b4: f32,
    pub x6b8: f32,
    pub x6bc: f32,
    pub x6c0: f32,
    pub x6c4: f32,
    pub x6c8: f32,
    pub x6cc: f32,
    pub x6d0: f32,
    pub x6d4: f32,
    pub x6d8: f32,
    pub x6dc: f32,
    pub x6e0: f32,
    pub x6e4: f32,
    pub x6e8: f32,
    pub x6ec: f32,
    pub x6f0: f32,
    pub x6f4: f32,
    pub x6f8: f32,
    pub x6fc: f32,
    pub x700: f32,
    pub x704: f32,
    pub x708: f32,
    pub x70c: f32,
    pub x710: f32,
    pub x714: f32,
    pub x718: f32,
    pub x71c: f32,
    pub x720: f32,
    pub x724: f32,
    pub x728: f32,
    pub x72c: f32,
    pub x730: f32,
    pub x734: f32,
    pub x738: f32,
    pub x73c: f32,
    pub x740: f32,
    pub x744: f32,
    pub x748: f32,
    pub x74c: f32,
    pub x750: f32,
    pub x754: f32,
    pub x758: f32,
    pub x75c: f32,
    pub x760: f32,
    pub x764: f32,
    pub x768: f32,
    pub x76c: f32,
    pub x770: f32,
    pub x774: f32,
    pub x778: f32,
    pub x77c: f32,
    pub x780: f32,
    pub x784: f32,
    pub x788: f32,
    pub x78c: f32,
    pub x790: f32,
    pub x794: f32,
    pub x798: f32,
    pub x79c: f32,
    pub x7a0: f32,
    pub x7a4: f32,
    pub x7a8: f32,
    pub x7ac: f32,
    pub x7b0: f32,
    pub x7b4: f32,
    pub x7b8: f32,
    pub x7bc: f32,
    pub x7c0: f32,
    pub x7c4: f32,
    pub x7c8: f32,
    pub x7cc: f32,
    pub x7d0: f32,
    pub x7d4: f32,
    pub x7d8: f32,
    pub x7dc: f32,
    pub x7e0: f32,
    pub x7e4: f32,
    pub x7e8: f32,
    pub x7ec: f32,
    pub x7f0: f32,
    pub x7f4: f32,
    pub x7f8: f32,
    pub x7fc: f32,
    pub x800: f32,
    pub x804: f32,
    pub x808: f32,
    pub x80c: f32,
    pub x810: f32,
}
#[test]
fn bindgen_test_layout_ftCommonData() {
    assert_eq!(
        ::std::mem::size_of::<ftCommonData>(),
        2068usize,
        concat!("Size of: ", stringify!(ftCommonData))
    );
    assert_eq!(
        ::std::mem::align_of::<ftCommonData>(),
        4usize,
        concat!("Alignment of ", stringify!(ftCommonData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x10 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x14 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x18 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1c as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).lstick_tilt as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(lstick_tilt)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x24 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x28 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2c as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x30 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x34 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x38 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x40 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x44 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x48 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4c as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x50 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x54 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x58 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5c as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x60 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x64 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x68 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).friction_mult as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(friction_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).jumpaerial_lsticky as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(jumpaerial_lsticky)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<ftCommonData>())).jumpaerial_lsticktimer as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(jumpaerial_lsticktimer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x78 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7c as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x80 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x84 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x88 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x8c as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).lstick_rebirthfall as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(lstick_rebirthfall)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x94 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x98 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x9c as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xa0 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xa4 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xa8 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xac as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xb0 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xb4 as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xb8 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xbc as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xc0 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xc4 as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xc8 as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xcc as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xd0 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xd4 as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xd8 as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xdc as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xe0 as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xe4 as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xe8 as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xec as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xf0 as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xf4 as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xf8 as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).xfc as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(xfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).kb_mult as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(kb_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x104 as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x108 as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x10c as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x10c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x110 as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x114 as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x118 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x11c as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x11c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x120 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x124 as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x128 as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x12c as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x12c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x130 as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x134 as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x138 as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x13c as *const _ as usize },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x13c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x140 as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x144 as *const _ as usize },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x148 as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x14c as *const _ as usize },
        332usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x14c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x150 as *const _ as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x154 as *const _ as usize },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x158 as *const _ as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x15c as *const _ as usize },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x15c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x160 as *const _ as usize },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x164 as *const _ as usize },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x168 as *const _ as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).kb_maxVelX as *const _ as usize },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(kb_maxVelX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x170 as *const _ as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x174 as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x178 as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x17c as *const _ as usize },
        380usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x17c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x180 as *const _ as usize },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x184 as *const _ as usize },
        388usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x188 as *const _ as usize },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x18c as *const _ as usize },
        396usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x18c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x190 as *const _ as usize },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x190)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x194 as *const _ as usize },
        404usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x194)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x198 as *const _ as usize },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x198)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x19c as *const _ as usize },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x19c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1a0 as *const _ as usize },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1a4 as *const _ as usize },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).tdi_maxAngle as *const _ as usize },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(tdi_maxAngle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1ac as *const _ as usize },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1b0 as *const _ as usize },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1b4 as *const _ as usize },
        436usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1b8 as *const _ as usize },
        440usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).kb_bounceDecay as *const _ as usize },
        444usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(kb_bounceDecay)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1c0 as *const _ as usize },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1c4 as *const _ as usize },
        452usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1c8 as *const _ as usize },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1cc as *const _ as usize },
        460usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1d0 as *const _ as usize },
        464usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1d4 as *const _ as usize },
        468usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1d8 as *const _ as usize },
        472usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1dc as *const _ as usize },
        476usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1e0 as *const _ as usize },
        480usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1e4 as *const _ as usize },
        484usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1e8 as *const _ as usize },
        488usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1ec as *const _ as usize },
        492usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1f0 as *const _ as usize },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1f4 as *const _ as usize },
        500usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1f8 as *const _ as usize },
        504usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x1fc as *const _ as usize },
        508usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x1fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x200 as *const _ as usize },
        512usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x200)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).kb_frameDecay as *const _ as usize },
        516usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(kb_frameDecay)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x208 as *const _ as usize },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x208)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x20c as *const _ as usize },
        524usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x20c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x210 as *const _ as usize },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x210)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x214 as *const _ as usize },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x214)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x218 as *const _ as usize },
        536usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x218)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x21c as *const _ as usize },
        540usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x21c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x220 as *const _ as usize },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x220)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x224 as *const _ as usize },
        548usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x224)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x228 as *const _ as usize },
        552usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x228)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x22c as *const _ as usize },
        556usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x22c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x230 as *const _ as usize },
        560usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x230)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x234 as *const _ as usize },
        564usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x234)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x238 as *const _ as usize },
        568usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x238)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x23c as *const _ as usize },
        572usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x23c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x240 as *const _ as usize },
        576usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x240)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x244 as *const _ as usize },
        580usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x244)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x248 as *const _ as usize },
        584usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x248)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x24c as *const _ as usize },
        588usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x24c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x250 as *const _ as usize },
        592usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x250)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x254 as *const _ as usize },
        596usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x254)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x258 as *const _ as usize },
        600usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x258)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x25c as *const _ as usize },
        604usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x25c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x260 as *const _ as usize },
        608usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x260)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x264 as *const _ as usize },
        612usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x264)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x268 as *const _ as usize },
        616usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x268)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x26c as *const _ as usize },
        620usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x26c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x270 as *const _ as usize },
        624usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x270)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x274 as *const _ as usize },
        628usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x274)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x278 as *const _ as usize },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x278)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x27c as *const _ as usize },
        636usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x27c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x280 as *const _ as usize },
        640usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x280)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x284 as *const _ as usize },
        644usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x284)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x288 as *const _ as usize },
        648usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x288)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x28c as *const _ as usize },
        652usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x28c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x290 as *const _ as usize },
        656usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x290)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x294 as *const _ as usize },
        660usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x294)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x298 as *const _ as usize },
        664usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x298)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x29c as *const _ as usize },
        668usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x29c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2a0 as *const _ as usize },
        672usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2a4 as *const _ as usize },
        676usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2a8 as *const _ as usize },
        680usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2ac as *const _ as usize },
        684usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2b0 as *const _ as usize },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2b4 as *const _ as usize },
        692usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2b8 as *const _ as usize },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2bc as *const _ as usize },
        700usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2c0 as *const _ as usize },
        704usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2c4 as *const _ as usize },
        708usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2c8 as *const _ as usize },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2cc as *const _ as usize },
        716usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2d0 as *const _ as usize },
        720usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2d4 as *const _ as usize },
        724usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2d8 as *const _ as usize },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2dc as *const _ as usize },
        732usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2e0 as *const _ as usize },
        736usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2e4 as *const _ as usize },
        740usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2e8 as *const _ as usize },
        744usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2ec as *const _ as usize },
        748usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2f0 as *const _ as usize },
        752usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2f4 as *const _ as usize },
        756usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2f8 as *const _ as usize },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x2fc as *const _ as usize },
        764usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x2fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x300 as *const _ as usize },
        768usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x300)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x304 as *const _ as usize },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x304)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x308 as *const _ as usize },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x308)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x30c as *const _ as usize },
        780usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x30c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x310 as *const _ as usize },
        784usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x310)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x314 as *const _ as usize },
        788usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x314)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x318 as *const _ as usize },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x318)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x31c as *const _ as usize },
        796usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x31c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x320 as *const _ as usize },
        800usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x320)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x324 as *const _ as usize },
        804usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x324)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x328 as *const _ as usize },
        808usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x328)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x32c as *const _ as usize },
        812usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x32c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x330 as *const _ as usize },
        816usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x330)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x334 as *const _ as usize },
        820usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x334)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).escapeair_vel as *const _ as usize },
        824usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(escapeair_vel)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<ftCommonData>())).escapeair_veldecaymult as *const _ as usize
        },
        828usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(escapeair_veldecaymult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x340 as *const _ as usize },
        832usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x340)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x344 as *const _ as usize },
        836usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x344)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x348 as *const _ as usize },
        840usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x348)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x34c as *const _ as usize },
        844usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x34c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x350 as *const _ as usize },
        848usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x350)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x354 as *const _ as usize },
        852usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x354)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x358 as *const _ as usize },
        856usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x358)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x35c as *const _ as usize },
        860usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x35c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x360 as *const _ as usize },
        864usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x360)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x364 as *const _ as usize },
        868usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x364)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x368 as *const _ as usize },
        872usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x368)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x36c as *const _ as usize },
        876usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x36c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x370 as *const _ as usize },
        880usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x370)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x374 as *const _ as usize },
        884usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x374)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x378 as *const _ as usize },
        888usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x378)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x37c as *const _ as usize },
        892usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x37c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x380 as *const _ as usize },
        896usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x380)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x384 as *const _ as usize },
        900usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x384)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x388 as *const _ as usize },
        904usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x388)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x38c as *const _ as usize },
        908usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x38c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x390 as *const _ as usize },
        912usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x390)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x394 as *const _ as usize },
        916usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x394)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x398 as *const _ as usize },
        920usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x398)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x39c as *const _ as usize },
        924usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x39c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3a0 as *const _ as usize },
        928usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3a4 as *const _ as usize },
        932usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3a8 as *const _ as usize },
        936usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3ac as *const _ as usize },
        940usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3b0 as *const _ as usize },
        944usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3b4 as *const _ as usize },
        948usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3b8 as *const _ as usize },
        952usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3bc as *const _ as usize },
        956usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3c0 as *const _ as usize },
        960usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3c4 as *const _ as usize },
        964usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3c8 as *const _ as usize },
        968usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3cc as *const _ as usize },
        972usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3d0 as *const _ as usize },
        976usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3d4 as *const _ as usize },
        980usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3d8 as *const _ as usize },
        984usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3dc as *const _ as usize },
        988usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3e0 as *const _ as usize },
        992usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3e4 as *const _ as usize },
        996usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3e8 as *const _ as usize },
        1000usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3ec as *const _ as usize },
        1004usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3f0 as *const _ as usize },
        1008usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3f4 as *const _ as usize },
        1012usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3f8 as *const _ as usize },
        1016usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x3fc as *const _ as usize },
        1020usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x3fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x400 as *const _ as usize },
        1024usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x400)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x404 as *const _ as usize },
        1028usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x404)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x408 as *const _ as usize },
        1032usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x408)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x40c as *const _ as usize },
        1036usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x40c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x410 as *const _ as usize },
        1040usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x410)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x414 as *const _ as usize },
        1044usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x414)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x418 as *const _ as usize },
        1048usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x418)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x41c as *const _ as usize },
        1052usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x41c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x420 as *const _ as usize },
        1056usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x420)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x424 as *const _ as usize },
        1060usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x424)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x428 as *const _ as usize },
        1064usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x428)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x42c as *const _ as usize },
        1068usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x42c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x430 as *const _ as usize },
        1072usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x430)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x434 as *const _ as usize },
        1076usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x434)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x438 as *const _ as usize },
        1080usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x438)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x43c as *const _ as usize },
        1084usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x43c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x440 as *const _ as usize },
        1088usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x440)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x444 as *const _ as usize },
        1092usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x444)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x448 as *const _ as usize },
        1096usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x448)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x44c as *const _ as usize },
        1100usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x44c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x450 as *const _ as usize },
        1104usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x450)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).zjostle_frame as *const _ as usize },
        1108usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(zjostle_frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).zjostle_max as *const _ as usize },
        1112usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(zjostle_max)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).ms_zjostle_frame as *const _ as usize },
        1116usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(ms_zjostle_frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).ms_zjostle_max as *const _ as usize },
        1120usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(ms_zjostle_max)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x464 as *const _ as usize },
        1124usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x464)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x468 as *const _ as usize },
        1128usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x468)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x46c as *const _ as usize },
        1132usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x46c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x470 as *const _ as usize },
        1136usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x470)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x474 as *const _ as usize },
        1140usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x474)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x478 as *const _ as usize },
        1144usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x478)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x47c as *const _ as usize },
        1148usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x47c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x480 as *const _ as usize },
        1152usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x480)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x484 as *const _ as usize },
        1156usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x484)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x488 as *const _ as usize },
        1160usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x488)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x48c as *const _ as usize },
        1164usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x48c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x490 as *const _ as usize },
        1168usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x490)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x494 as *const _ as usize },
        1172usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x494)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x498 as *const _ as usize },
        1176usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x498)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).cliff_invuln_time as *const _ as usize },
        1180usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(cliff_invuln_time)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4a0 as *const _ as usize },
        1184usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4a4 as *const _ as usize },
        1188usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4a8 as *const _ as usize },
        1192usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4ac as *const _ as usize },
        1196usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).asdi_mag as *const _ as usize },
        1200usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(asdi_mag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4b4 as *const _ as usize },
        1204usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4b8 as *const _ as usize },
        1208usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).asdi_units as *const _ as usize },
        1212usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(asdi_units)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4c0 as *const _ as usize },
        1216usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4c4 as *const _ as usize },
        1220usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4c8 as *const _ as usize },
        1224usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4cc as *const _ as usize },
        1228usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4d0 as *const _ as usize },
        1232usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4d4 as *const _ as usize },
        1236usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4d8 as *const _ as usize },
        1240usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4dc as *const _ as usize },
        1244usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4e0 as *const _ as usize },
        1248usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4e4 as *const _ as usize },
        1252usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4e8 as *const _ as usize },
        1256usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4ec as *const _ as usize },
        1260usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4f0 as *const _ as usize },
        1264usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4f4 as *const _ as usize },
        1268usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4f8 as *const _ as usize },
        1272usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x4fc as *const _ as usize },
        1276usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x4fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x500 as *const _ as usize },
        1280usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x500)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x504 as *const _ as usize },
        1284usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x504)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x508 as *const _ as usize },
        1288usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x508)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x50c as *const _ as usize },
        1292usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x50c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x510 as *const _ as usize },
        1296usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x510)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x514 as *const _ as usize },
        1300usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x514)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x518 as *const _ as usize },
        1304usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x518)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x51c as *const _ as usize },
        1308usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x51c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x520 as *const _ as usize },
        1312usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x520)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x524 as *const _ as usize },
        1316usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x524)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x528 as *const _ as usize },
        1320usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x528)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x52c as *const _ as usize },
        1324usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x52c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x530 as *const _ as usize },
        1328usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x530)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x534 as *const _ as usize },
        1332usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x534)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x538 as *const _ as usize },
        1336usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x538)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x53c as *const _ as usize },
        1340usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x53c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x540 as *const _ as usize },
        1344usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x540)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x544 as *const _ as usize },
        1348usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x544)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x548 as *const _ as usize },
        1352usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x548)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x54c as *const _ as usize },
        1356usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x54c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x550 as *const _ as usize },
        1360usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x550)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x554 as *const _ as usize },
        1364usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x554)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x558 as *const _ as usize },
        1368usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x558)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x55c as *const _ as usize },
        1372usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x55c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x560 as *const _ as usize },
        1376usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x560)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x564 as *const _ as usize },
        1380usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x564)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x568 as *const _ as usize },
        1384usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x568)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x56c as *const _ as usize },
        1388usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x56c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x570 as *const _ as usize },
        1392usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x570)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x574 as *const _ as usize },
        1396usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x574)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x578 as *const _ as usize },
        1400usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x578)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x57c as *const _ as usize },
        1404usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x57c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x580 as *const _ as usize },
        1408usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x580)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x584 as *const _ as usize },
        1412usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x584)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x588 as *const _ as usize },
        1416usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x588)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x58c as *const _ as usize },
        1420usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x58c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x590 as *const _ as usize },
        1424usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x590)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x594 as *const _ as usize },
        1428usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x594)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x598 as *const _ as usize },
        1432usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x598)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x59c as *const _ as usize },
        1436usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x59c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5a0 as *const _ as usize },
        1440usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5a4 as *const _ as usize },
        1444usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5a8 as *const _ as usize },
        1448usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5ac as *const _ as usize },
        1452usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5b0 as *const _ as usize },
        1456usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5b4 as *const _ as usize },
        1460usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5b8 as *const _ as usize },
        1464usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5bc as *const _ as usize },
        1468usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5c0 as *const _ as usize },
        1472usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5c4 as *const _ as usize },
        1476usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5c8 as *const _ as usize },
        1480usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5cc as *const _ as usize },
        1484usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5d0 as *const _ as usize },
        1488usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5d4 as *const _ as usize },
        1492usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5d8 as *const _ as usize },
        1496usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5dc as *const _ as usize },
        1500usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5e0 as *const _ as usize },
        1504usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5e4 as *const _ as usize },
        1508usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5e8 as *const _ as usize },
        1512usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5ec as *const _ as usize },
        1516usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5f0 as *const _ as usize },
        1520usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5f4 as *const _ as usize },
        1524usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5f8 as *const _ as usize },
        1528usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x5fc as *const _ as usize },
        1532usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x5fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x600 as *const _ as usize },
        1536usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x600)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x604 as *const _ as usize },
        1540usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x604)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x608 as *const _ as usize },
        1544usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x608)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x60c as *const _ as usize },
        1548usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x60c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x610 as *const _ as usize },
        1552usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x610)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x614 as *const _ as usize },
        1556usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x614)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x618 as *const _ as usize },
        1560usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x618)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x61c as *const _ as usize },
        1564usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x61c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x620 as *const _ as usize },
        1568usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x620)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x624 as *const _ as usize },
        1572usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x624)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x628 as *const _ as usize },
        1576usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x628)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x62c as *const _ as usize },
        1580usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x62c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x630 as *const _ as usize },
        1584usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x630)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x634 as *const _ as usize },
        1588usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x634)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x638 as *const _ as usize },
        1592usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x638)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x63c as *const _ as usize },
        1596usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x63c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x640 as *const _ as usize },
        1600usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x640)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x644 as *const _ as usize },
        1604usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x644)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x648 as *const _ as usize },
        1608usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x648)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x64c as *const _ as usize },
        1612usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x64c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x650 as *const _ as usize },
        1616usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x650)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x654 as *const _ as usize },
        1620usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x654)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x658 as *const _ as usize },
        1624usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x658)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x65c as *const _ as usize },
        1628usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x65c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x660 as *const _ as usize },
        1632usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x660)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x664 as *const _ as usize },
        1636usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x664)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x668 as *const _ as usize },
        1640usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x668)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x66c as *const _ as usize },
        1644usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x66c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x670 as *const _ as usize },
        1648usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x670)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x674 as *const _ as usize },
        1652usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x674)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x678 as *const _ as usize },
        1656usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x678)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x67c as *const _ as usize },
        1660usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x67c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x680 as *const _ as usize },
        1664usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x680)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x684 as *const _ as usize },
        1668usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x684)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x688 as *const _ as usize },
        1672usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x688)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x68c as *const _ as usize },
        1676usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x68c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x690 as *const _ as usize },
        1680usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x690)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x694 as *const _ as usize },
        1684usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x694)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x698 as *const _ as usize },
        1688usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x698)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x69c as *const _ as usize },
        1692usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x69c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6a0 as *const _ as usize },
        1696usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6a4 as *const _ as usize },
        1700usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6a8 as *const _ as usize },
        1704usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6ac as *const _ as usize },
        1708usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6b0 as *const _ as usize },
        1712usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6b4 as *const _ as usize },
        1716usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6b8 as *const _ as usize },
        1720usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6bc as *const _ as usize },
        1724usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6c0 as *const _ as usize },
        1728usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6c4 as *const _ as usize },
        1732usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6c8 as *const _ as usize },
        1736usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6cc as *const _ as usize },
        1740usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6d0 as *const _ as usize },
        1744usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6d4 as *const _ as usize },
        1748usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6d8 as *const _ as usize },
        1752usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6dc as *const _ as usize },
        1756usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6e0 as *const _ as usize },
        1760usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6e4 as *const _ as usize },
        1764usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6e8 as *const _ as usize },
        1768usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6ec as *const _ as usize },
        1772usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6f0 as *const _ as usize },
        1776usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6f4 as *const _ as usize },
        1780usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6f8 as *const _ as usize },
        1784usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x6fc as *const _ as usize },
        1788usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x6fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x700 as *const _ as usize },
        1792usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x700)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x704 as *const _ as usize },
        1796usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x704)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x708 as *const _ as usize },
        1800usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x708)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x70c as *const _ as usize },
        1804usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x70c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x710 as *const _ as usize },
        1808usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x710)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x714 as *const _ as usize },
        1812usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x714)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x718 as *const _ as usize },
        1816usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x718)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x71c as *const _ as usize },
        1820usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x71c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x720 as *const _ as usize },
        1824usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x720)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x724 as *const _ as usize },
        1828usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x724)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x728 as *const _ as usize },
        1832usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x728)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x72c as *const _ as usize },
        1836usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x72c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x730 as *const _ as usize },
        1840usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x730)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x734 as *const _ as usize },
        1844usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x734)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x738 as *const _ as usize },
        1848usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x738)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x73c as *const _ as usize },
        1852usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x73c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x740 as *const _ as usize },
        1856usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x740)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x744 as *const _ as usize },
        1860usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x744)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x748 as *const _ as usize },
        1864usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x748)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x74c as *const _ as usize },
        1868usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x74c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x750 as *const _ as usize },
        1872usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x750)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x754 as *const _ as usize },
        1876usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x754)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x758 as *const _ as usize },
        1880usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x758)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x75c as *const _ as usize },
        1884usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x75c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x760 as *const _ as usize },
        1888usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x760)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x764 as *const _ as usize },
        1892usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x764)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x768 as *const _ as usize },
        1896usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x768)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x76c as *const _ as usize },
        1900usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x76c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x770 as *const _ as usize },
        1904usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x770)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x774 as *const _ as usize },
        1908usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x774)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x778 as *const _ as usize },
        1912usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x778)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x77c as *const _ as usize },
        1916usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x77c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x780 as *const _ as usize },
        1920usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x780)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x784 as *const _ as usize },
        1924usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x784)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x788 as *const _ as usize },
        1928usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x788)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x78c as *const _ as usize },
        1932usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x78c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x790 as *const _ as usize },
        1936usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x790)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x794 as *const _ as usize },
        1940usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x794)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x798 as *const _ as usize },
        1944usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x798)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x79c as *const _ as usize },
        1948usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x79c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7a0 as *const _ as usize },
        1952usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7a4 as *const _ as usize },
        1956usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7a8 as *const _ as usize },
        1960usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7ac as *const _ as usize },
        1964usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7b0 as *const _ as usize },
        1968usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7b4 as *const _ as usize },
        1972usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7b8 as *const _ as usize },
        1976usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7bc as *const _ as usize },
        1980usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7c0 as *const _ as usize },
        1984usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7c4 as *const _ as usize },
        1988usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7c8 as *const _ as usize },
        1992usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7cc as *const _ as usize },
        1996usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7d0 as *const _ as usize },
        2000usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7d4 as *const _ as usize },
        2004usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7d8 as *const _ as usize },
        2008usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7dc as *const _ as usize },
        2012usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7e0 as *const _ as usize },
        2016usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7e4 as *const _ as usize },
        2020usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7e8 as *const _ as usize },
        2024usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7ec as *const _ as usize },
        2028usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7f0 as *const _ as usize },
        2032usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7f4 as *const _ as usize },
        2036usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7f8 as *const _ as usize },
        2040usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x7fc as *const _ as usize },
        2044usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x7fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x800 as *const _ as usize },
        2048usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x800)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x804 as *const _ as usize },
        2052usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x804)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x808 as *const _ as usize },
        2056usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x808)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x80c as *const _ as usize },
        2060usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x80c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ftCommonData>())).x810 as *const _ as usize },
        2064usize,
        concat!(
            "Offset of field: ",
            stringify!(ftCommonData),
            "::",
            stringify!(x810)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData {
    pub fighter: *mut GOBJ,
    pub kind: ::std::os::raw::c_int,
    pub spawn_num: ::std::os::raw::c_int,
    pub ply: ::std::os::raw::c_char,
    pub unknown: ::std::os::raw::c_char,
    pub unknownE: ::std::os::raw::c_char,
    pub unknownF: ::std::os::raw::c_char,
    pub state: ::std::os::raw::c_int,
    pub anim_id: ::std::os::raw::c_int,
    pub state_num: ::std::os::raw::c_int,
    pub common_states: *mut MoveLogic,
    pub special_states: *mut MoveLogic,
    pub anim_flags: *mut ::std::os::raw::c_int,
    pub dynamics_data: *mut u16_,
    pub facing_direction: f32,
    pub facing_direction_repeated: f32,
    pub scale1: f32,
    pub scale2: f32,
    pub scale3: f32,
    pub pointer_to_next_linked_list: ::std::os::raw::c_int,
    pub pointer_to_0x40__pointer_to_prev_linked_list: ::std::os::raw::c_int,
    pub length_of_linked_list: ::std::os::raw::c_int,
    pub unknown4C: ::std::os::raw::c_int,
    pub unknown50: ::std::os::raw::c_int,
    pub unknown54: ::std::os::raw::c_int,
    pub unknown58: ::std::os::raw::c_int,
    pub unknown5C: ::std::os::raw::c_int,
    pub unknown60: ::std::os::raw::c_int,
    pub unknown64: ::std::os::raw::c_int,
    pub unknown68: ::std::os::raw::c_int,
    pub unknown6C: ::std::os::raw::c_int,
    pub unknown70: ::std::os::raw::c_int,
    pub phys: FighterData_phys,
    pub costume_JObjDesc: *mut ::std::os::raw::c_int,
    pub costume_archive: *mut ::std::os::raw::c_int,
    pub ftData: *mut ftData,
    pub attr: FighterData_attr,
    pub unknown294: ::std::os::raw::c_int,
    pub unknown298: ::std::os::raw::c_int,
    pub unknown29C: ::std::os::raw::c_int,
    pub unknown2A0: ::std::os::raw::c_int,
    pub unknown2A4: ::std::os::raw::c_int,
    pub unknown2A8: ::std::os::raw::c_int,
    pub unknown2AC: ::std::os::raw::c_int,
    pub unknown2B0: ::std::os::raw::c_int,
    pub unknown2B4: ::std::os::raw::c_int,
    pub unknown2B8: ::std::os::raw::c_int,
    pub unknown2BC: ::std::os::raw::c_int,
    pub unknown2C0: ::std::os::raw::c_int,
    pub unknown2C4: ::std::os::raw::c_int,
    pub unknown2C8: ::std::os::raw::c_int,
    pub unknown2CC: ::std::os::raw::c_int,
    pub unknown2D0: ::std::os::raw::c_int,
    pub special_attributes: *mut ::std::os::raw::c_int,
    pub special_attributes2: *mut ::std::os::raw::c_int,
    pub unknown2DC: ::std::os::raw::c_int,
    pub unknown2E0: ::std::os::raw::c_int,
    pub unknown2E4: ::std::os::raw::c_int,
    pub unknown2E8: ::std::os::raw::c_int,
    pub unknown2EC: ::std::os::raw::c_int,
    pub dynamics_boneset: [FtDynamicBoneset; 10usize],
    pub dynamics_num: ::std::os::raw::c_int,
    pub script: FighterData_script,
    pub unk: ::std::os::raw::c_int,
    pub unk3FC: ::std::os::raw::c_int,
    pub pointer_to_0x460: ::std::os::raw::c_int,
    pub pointer_to_0x3c0: ::std::os::raw::c_int,
    pub color: [ColorOverlay; 3usize],
    pub LObj: *mut ::std::os::raw::c_int,
    pub anim_num: ::std::os::raw::c_int,
    pub anim_curr_flags_ptr: *mut ::std::os::raw::c_int,
    pub anim_curr_flags: ::std::os::raw::c_int,
    pub anim_requested: *mut ::std::os::raw::c_int,
    pub anim_cache_curr: *mut ::std::os::raw::c_int,
    pub anim_cache_persist: *mut ::std::os::raw::c_int,
    pub anim_curr_ARAM: *mut ::std::os::raw::c_int,
    pub anim_persist_ARAM: *mut ::std::os::raw::c_int,
    pub dobj_toggle_num: ::std::os::raw::c_int,
    pub unknown5B0: ::std::os::raw::c_int,
    pub unknown5B4: ::std::os::raw::c_int,
    pub unknown5B8: ::std::os::raw::c_int,
    pub unknown5BC: ::std::os::raw::c_int,
    pub unknown5C0: ::std::os::raw::c_int,
    pub unknown5C4: ::std::os::raw::c_int,
    pub unknown5C8: ::std::os::raw::c_int,
    pub unknown5CC: ::std::os::raw::c_int,
    pub unknown5D0: ::std::os::raw::c_int,
    pub unknown5D4: ::std::os::raw::c_int,
    pub unknown5D8: ::std::os::raw::c_int,
    pub unknown5DC: ::std::os::raw::c_int,
    pub unknown5E0: ::std::os::raw::c_int,
    pub unknown5E4: ::std::os::raw::c_int,
    pub bones: *mut FighterBone,
    pub bone_num: ::std::os::raw::c_int,
    pub bone_arr: ::std::os::raw::c_int,
    pub dobj_toggle: [u16_; 12usize],
    pub gfx: *mut Effect,
    pub unknown610: ::std::os::raw::c_int,
    pub unknown614: ::std::os::raw::c_int,
    pub player_controller_number: ::std::os::raw::c_char,
    pub costume_id: ::std::os::raw::c_char,
    pub color_overlay_id: ::std::os::raw::c_char,
    pub team: u8_,
    pub unknown61E: ::std::os::raw::c_char,
    pub unknown61F: ::std::os::raw::c_char,
    pub input: FighterData_input,
    pub transN_pos: Vec3,
    pub transN_pos_prev: Vec3,
    pub transN_offset: Vec3,
    pub transN_offset_prev: Vec3,
    pub input_stickangle: f32,
    pub unknown6C0: ::std::os::raw::c_int,
    pub unknown6C4: ::std::os::raw::c_int,
    pub unknown6C8: ::std::os::raw::c_int,
    pub unknown6CC: ::std::os::raw::c_int,
    pub unknown6D0: ::std::os::raw::c_int,
    pub unknown6D4: ::std::os::raw::c_int,
    pub unknown6D8: ::std::os::raw::c_int,
    pub unknown6DC: ::std::os::raw::c_int,
    pub unknown6E0: ::std::os::raw::c_int,
    pub unknown6E4: ::std::os::raw::c_int,
    pub unknown6E8: ::std::os::raw::c_int,
    pub unknown6EC: ::std::os::raw::c_int,
    pub coll_data: CollData,
    pub cameraBox: *mut CameraBox,
    pub stateFrame: f32,
    pub unknown898: ::std::os::raw::c_int,
    pub stateSpeed: f32,
    pub x8a0: ::std::os::raw::c_int,
    pub stateBlend: f32,
    pub x8a8: ::std::os::raw::c_int,
    pub animSkeleton: *mut JOBJ,
    pub x8b0: ::std::os::raw::c_int,
    pub x8b4: ::std::os::raw::c_int,
    pub x8b8: ::std::os::raw::c_int,
    pub x8bc: ::std::os::raw::c_int,
    pub x8c0: ::std::os::raw::c_int,
    pub x8c4: ::std::os::raw::c_int,
    pub x8c8: ::std::os::raw::c_int,
    pub x8cc: ::std::os::raw::c_int,
    pub x8d0: ::std::os::raw::c_int,
    pub x8d4: ::std::os::raw::c_int,
    pub x8d8: ::std::os::raw::c_int,
    pub x8dc: ::std::os::raw::c_int,
    pub x8e0: ::std::os::raw::c_int,
    pub x8e4: ::std::os::raw::c_int,
    pub x8e8: ::std::os::raw::c_int,
    pub x8ec: ::std::os::raw::c_int,
    pub x8f0: ::std::os::raw::c_int,
    pub x8f4: ::std::os::raw::c_int,
    pub x8f8: ::std::os::raw::c_int,
    pub x8fc: ::std::os::raw::c_int,
    pub x900: ::std::os::raw::c_int,
    pub x904: ::std::os::raw::c_int,
    pub x908: ::std::os::raw::c_int,
    pub x90c: ::std::os::raw::c_int,
    pub x910: ::std::os::raw::c_int,
    pub hitbox: [ftHit; 4usize],
    pub throw_hitbox: [ftHit; 2usize],
    pub unk_hitbox: ftHit,
    pub teamID: u8_,
    pub grabbersID: u8_,
    pub hurtboxNum: u8_,
    pub hurtbox: [FtHurt; 15usize],
    pub x1614: ::std::os::raw::c_int,
    pub x1618: ::std::os::raw::c_int,
    pub x161c: ::std::os::raw::c_int,
    pub x1620: ::std::os::raw::c_int,
    pub x1624: ::std::os::raw::c_int,
    pub x1628: ::std::os::raw::c_int,
    pub x162c: ::std::os::raw::c_int,
    pub x1630: ::std::os::raw::c_int,
    pub x1634: ::std::os::raw::c_int,
    pub x1638: ::std::os::raw::c_int,
    pub x163c: ::std::os::raw::c_int,
    pub x1640: ::std::os::raw::c_int,
    pub x1644: ::std::os::raw::c_int,
    pub x1648: ::std::os::raw::c_int,
    pub x164c: ::std::os::raw::c_int,
    pub x1650: ::std::os::raw::c_int,
    pub x1654: ::std::os::raw::c_int,
    pub x1658: ::std::os::raw::c_int,
    pub x165c: ::std::os::raw::c_int,
    pub x1660: ::std::os::raw::c_int,
    pub x1664: ::std::os::raw::c_int,
    pub x1668: ::std::os::raw::c_int,
    pub dynamics_hit_num: ::std::os::raw::c_int,
    pub dynamics_hit: [FtDynamicHit; 11usize],
    pub x1828: ::std::os::raw::c_int,
    pub dmg: FighterData_dmg,
    pub x1960: ::std::os::raw::c_int,
    pub x1964: f32,
    pub jump: FighterData_jump,
    pub x196c: ::std::os::raw::c_int,
    pub x1970: ::std::os::raw::c_int,
    pub heldItem: *mut GOBJ,
    pub x1978: *mut GOBJ,
    pub x197c: ::std::os::raw::c_int,
    pub headItem: *mut GOBJ,
    pub heldItemSpecial: *mut GOBJ,
    pub hurtstatus: FighterData_hurtstatus,
    pub shield: FighterData_shield,
    pub shield_bubble: FighterData_shield_update,
    pub reflect_bubble: FighterData_reflect_update,
    pub absorb_bubble: FighterData_absorb_update,
    pub reflect_hit: FighterData_reflect_hit,
    pub absorb_hit: FighterData_absorb_hit,
    pub grab: FighterData_grab,
    pub cpu: CPU,
    pub x1fe0: ::std::os::raw::c_int,
    pub x1fe4: ::std::os::raw::c_int,
    pub x1fe8: ::std::os::raw::c_int,
    pub x1fec: ::std::os::raw::c_int,
    pub x1ff0: ::std::os::raw::c_int,
    pub x1ff4: ::std::os::raw::c_int,
    pub x1ff8: ::std::os::raw::c_int,
    pub x1ffc: ::std::os::raw::c_int,
    pub x2000: ::std::os::raw::c_int,
    pub x2004: ::std::os::raw::c_int,
    pub x2008: ::std::os::raw::c_int,
    pub x200c: ::std::os::raw::c_int,
    pub x2010: ::std::os::raw::c_int,
    pub x2014: ::std::os::raw::c_int,
    pub x2018: ::std::os::raw::c_int,
    pub x201c: ::std::os::raw::c_int,
    pub x2020: ::std::os::raw::c_int,
    pub x2024: ::std::os::raw::c_int,
    pub x2028: ::std::os::raw::c_int,
    pub x202c: ::std::os::raw::c_int,
    pub x2030: ::std::os::raw::c_int,
    pub x2034: ::std::os::raw::c_int,
    pub x2038: ::std::os::raw::c_int,
    pub x203c: ::std::os::raw::c_int,
    pub x2040: ::std::os::raw::c_int,
    pub x2044: ::std::os::raw::c_int,
    pub x2048: ::std::os::raw::c_int,
    pub x204c: ::std::os::raw::c_int,
    pub x2050: ::std::os::raw::c_int,
    pub x2054: ::std::os::raw::c_int,
    pub x2058: ::std::os::raw::c_int,
    pub x205c: ::std::os::raw::c_int,
    pub x2060: ::std::os::raw::c_int,
    pub ledge_cooldown: ::std::os::raw::c_int,
    pub attack_kind: ::std::os::raw::c_int,
    pub x206c: ::std::os::raw::c_int,
    pub x2070: u8_,
    pub x2071: u8_,
    pub x2072: u8_,
    pub x2073: u8_,
    pub x2074: ::std::os::raw::c_int,
    pub x2078: ::std::os::raw::c_int,
    pub x207c: ::std::os::raw::c_int,
    pub x2080: ::std::os::raw::c_int,
    pub x2084: ::std::os::raw::c_int,
    pub moveID: u16_,
    pub x208c: ::std::os::raw::c_int,
    pub x2090: ::std::os::raw::c_int,
    pub x2094: ::std::os::raw::c_int,
    pub x2098: ::std::os::raw::c_int,
    pub x209c: ::std::os::raw::c_int,
    pub accessory: *mut JOBJ,
    pub x20a4: ::std::os::raw::c_int,
    pub shadow: *mut ::std::os::raw::c_void,
    pub x20ac: ::std::os::raw::c_int,
    pub afterimage: FighterData_afterimage,
    pub x2104: ::std::os::raw::c_int,
    pub x2108: ::std::os::raw::c_int,
    pub x210c: ::std::os::raw::c_int,
    pub x2110: ::std::os::raw::c_int,
    pub smash: FighterData_smash,
    pub x213c: ::std::os::raw::c_int,
    pub x2140: ::std::os::raw::c_int,
    pub x2144: ::std::os::raw::c_int,
    pub x2148: ::std::os::raw::c_int,
    pub x214c: ::std::os::raw::c_int,
    pub x2150: ::std::os::raw::c_int,
    pub x2154: ::std::os::raw::c_int,
    pub x2158: ::std::os::raw::c_int,
    pub x215c: ::std::os::raw::c_int,
    pub x2160: ::std::os::raw::c_int,
    pub x2164: ::std::os::raw::c_int,
    pub x2168: ::std::os::raw::c_int,
    pub x216c: ::std::os::raw::c_int,
    pub x2170: ::std::os::raw::c_int,
    pub x2174: ::std::os::raw::c_int,
    pub x2178: ::std::os::raw::c_int,
    pub x217c: ::std::os::raw::c_int,
    pub x2180: ::std::os::raw::c_int,
    pub x2184: ::std::os::raw::c_int,
    pub x2188: ::std::os::raw::c_int,
    pub x218c: ::std::os::raw::c_int,
    pub cb: FighterData_cb,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub ftcmd_var: FighterData_ftcmd_var,
    pub flags: FighterData_flags,
    pub fighter_var: FighterData_fighter_var,
    pub x22fc: ::std::os::raw::c_int,
    pub x2300: ::std::os::raw::c_int,
    pub x2304: ::std::os::raw::c_int,
    pub x2308: ::std::os::raw::c_int,
    pub x230c: ::std::os::raw::c_int,
    pub x2310: ::std::os::raw::c_int,
    pub x2314: ::std::os::raw::c_int,
    pub x2318: ::std::os::raw::c_int,
    pub x231c: ::std::os::raw::c_int,
    pub x2320: ::std::os::raw::c_int,
    pub stage_internal: ::std::os::raw::c_int,
    pub x2328: ::std::os::raw::c_int,
    pub x232c: ::std::os::raw::c_int,
    pub x2330: ::std::os::raw::c_int,
    pub x2334: ::std::os::raw::c_int,
    pub x2338: ::std::os::raw::c_int,
    pub x233c: ::std::os::raw::c_int,
    pub state_var: FighterData_state_var,
    pub x2388: ::std::os::raw::c_int,
    pub x238c: ::std::os::raw::c_int,
    pub x2390: ::std::os::raw::c_int,
    pub x2394: ::std::os::raw::c_int,
    pub x2398: ::std::os::raw::c_int,
    pub x239c: ::std::os::raw::c_int,
    pub x23a0: ::std::os::raw::c_int,
    pub x23a4: ::std::os::raw::c_int,
    pub x23a8: ::std::os::raw::c_int,
    pub x23ac: ::std::os::raw::c_int,
    pub x23b0: ::std::os::raw::c_int,
    pub x23b4: ::std::os::raw::c_int,
    pub x23b8: ::std::os::raw::c_int,
    pub x23bc: ::std::os::raw::c_int,
    pub x23c0: ::std::os::raw::c_int,
    pub x23c4: ::std::os::raw::c_int,
    pub x23c8: ::std::os::raw::c_int,
    pub x23cc: ::std::os::raw::c_int,
    pub x23d0: ::std::os::raw::c_int,
    pub x23d4: ::std::os::raw::c_int,
    pub x23d8: ::std::os::raw::c_int,
    pub x23dc: ::std::os::raw::c_int,
    pub x23e0: ::std::os::raw::c_int,
    pub x23e4: ::std::os::raw::c_int,
    pub x23e8: ::std::os::raw::c_int,
    pub MEX: FighterData_MEX,
    pub TM: FighterData_TM,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_phys {
    pub anim_vel: Vec3,
    pub self_vel: Vec3,
    pub kb_vel: Vec3,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa4: ::std::os::raw::c_int,
    pub xa8: ::std::os::raw::c_int,
    pub xac: ::std::os::raw::c_int,
    pub pos: Vec3,
    pub pos_prev: Vec3,
    pub pos_delta: Vec3,
    pub unknownD4: Vec3,
    pub air_state: ::std::os::raw::c_int,
    pub horzitonal_velocity_queue_will_be_added_to_0xec: f32,
    pub vertical_velocity_queue_will_be_added_to_0xec: f32,
    pub selfVelGround: Vec3,
    pub unknownF8: ::std::os::raw::c_int,
    pub unknownFC: ::std::os::raw::c_int,
    pub unknown100: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_phys() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_phys>(),
        144usize,
        concat!("Size of: ", stringify!(FighterData_phys))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_phys>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_phys))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).anim_vel as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(anim_vel)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).self_vel as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(self_vel)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).kb_vel as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(kb_vel)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).x98 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).x9c as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).xa0 as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).xa4 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(xa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).xa8 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(xa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).xac as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(xac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).pos as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).pos_prev as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(pos_prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).pos_delta as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(pos_delta)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).unknownD4 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(unknownD4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).air_state as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(air_state)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_phys>()))
                .horzitonal_velocity_queue_will_be_added_to_0xec as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(horzitonal_velocity_queue_will_be_added_to_0xec)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_phys>()))
                .vertical_velocity_queue_will_be_added_to_0xec as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(vertical_velocity_queue_will_be_added_to_0xec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).selfVelGround as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(selfVelGround)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).unknownF8 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(unknownF8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).unknownFC as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(unknownFC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_phys>())).unknown100 as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_phys),
            "::",
            stringify!(unknown100)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_attr {
    pub walk_initial_velocity: f32,
    pub walk_acceleration: f32,
    pub walk_maximum_velocity: f32,
    pub slow_walk_max: f32,
    pub mid_walk_point: f32,
    pub fast_walk_min: f32,
    pub ground_friction: f32,
    pub dash_initial_velocity: f32,
    pub dashrun_acceleration_a: f32,
    pub dashrun_acceleration_b: f32,
    pub dashrun_terminal_velocity: f32,
    pub run_animation_scaling: f32,
    pub max_runbrake_frames: f32,
    pub grounded_max_horizontal_velocity: f32,
    pub jump_startup_time: f32,
    pub jump_h_initial_velocity: f32,
    pub jump_v_initial_velocity: f32,
    pub ground_to_air_jump_momentum_multiplier: f32,
    pub jump_h_max_velocity: f32,
    pub hop_v_initial_velocity: f32,
    pub air_jump_v_multiplier: f32,
    pub air_jump_h_multiplier: f32,
    pub max_jumps: ::std::os::raw::c_int,
    pub gravity: f32,
    pub terminal_velocity: f32,
    pub aerialDriftStickMult: f32,
    pub aerialDriftBase: f32,
    pub aerialDriftMax: f32,
    pub aerialFriction: f32,
    pub fastfall_velocity: f32,
    pub horizontal_air_mobility_constant: f32,
    pub jab_2_input_window: ::std::os::raw::c_int,
    pub jab_3_input_window: ::std::os::raw::c_int,
    pub frames_to_change_direction_on_standing_turn: ::std::os::raw::c_int,
    pub weight: f32,
    pub model_scaling: f32,
    pub initial_shield_size: f32,
    pub shield_break_initial_velocity: f32,
    pub rapid_jab_window: ::std::os::raw::c_int,
    pub unknown1AC: ::std::os::raw::c_int,
    pub unknown1B0: ::std::os::raw::c_int,
    pub unknown1B4: ::std::os::raw::c_int,
    pub ledge_jump_horizontal_velocity: f32,
    pub ledge_jump_vertical_velocity: f32,
    pub item_throw_velocity_multiplier: f32,
    pub unknown1C4: ::std::os::raw::c_int,
    pub unknown1C8: ::std::os::raw::c_int,
    pub unknown1CC: ::std::os::raw::c_int,
    pub unknown1D0: ::std::os::raw::c_int,
    pub unknown1D4: ::std::os::raw::c_int,
    pub unknown1D8: ::std::os::raw::c_int,
    pub unknown1DC: ::std::os::raw::c_int,
    pub unknown1E0: ::std::os::raw::c_int,
    pub unknown1E4: ::std::os::raw::c_int,
    pub unknown1E8: ::std::os::raw::c_int,
    pub unknown1EC: ::std::os::raw::c_int,
    pub kirby_b_star_damage: f32,
    pub normal_landing_lag: f32,
    pub n_air_landing_lag: f32,
    pub f_air_landing_lag: f32,
    pub b_air_landing_lag: f32,
    pub u_air_landing_lag: f32,
    pub d_air_landing_lag: f32,
    pub nametag_height: f32,
    pub unknown210: ::std::os::raw::c_int,
    pub wall_jump_horizontal_velocity: f32,
    pub wall_jump_vertical_velocity: f32,
    pub unknown21C: ::std::os::raw::c_int,
    pub trophy_scale: f32,
    pub unknown224: ::std::os::raw::c_int,
    pub unknown228: ::std::os::raw::c_int,
    pub unknown22C: ::std::os::raw::c_int,
    pub unknown230: ::std::os::raw::c_int,
    pub unknown234: ::std::os::raw::c_int,
    pub unknown238: ::std::os::raw::c_int,
    pub unknown23C: ::std::os::raw::c_int,
    pub unknown240: ::std::os::raw::c_int,
    pub unknown244: ::std::os::raw::c_int,
    pub unknown248: ::std::os::raw::c_int,
    pub unknown24C: ::std::os::raw::c_int,
    pub unknown250: ::std::os::raw::c_int,
    pub unknown254: ::std::os::raw::c_int,
    pub unknown258: ::std::os::raw::c_int,
    pub bubble_ratio: f32,
    pub unknown260: ::std::os::raw::c_int,
    pub unknown264: ::std::os::raw::c_int,
    pub unknown268: ::std::os::raw::c_int,
    pub unknown26C: ::std::os::raw::c_int,
    pub respawn_platform_scale: f32,
    pub unknown274: ::std::os::raw::c_int,
    pub unknown278: ::std::os::raw::c_int,
    pub camera_zoom_target_bone: ::std::os::raw::c_int,
    pub unknown280: ::std::os::raw::c_int,
    pub unknown284: ::std::os::raw::c_int,
    pub unknown288: ::std::os::raw::c_int,
    pub special_jump_action___1: ::std::os::raw::c_int,
    pub weight_dependent_throw_speed_flags: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_attr() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_attr>(),
        388usize,
        concat!("Size of: ", stringify!(FighterData_attr))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_attr>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_attr))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).walk_initial_velocity as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(walk_initial_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).walk_acceleration as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(walk_acceleration)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).walk_maximum_velocity as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(walk_maximum_velocity)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).slow_walk_max as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(slow_walk_max)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).mid_walk_point as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(mid_walk_point)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).fast_walk_min as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(fast_walk_min)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).ground_friction as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(ground_friction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).dash_initial_velocity as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(dash_initial_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).dashrun_acceleration_a as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(dashrun_acceleration_a)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).dashrun_acceleration_b as *const _ as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(dashrun_acceleration_b)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).dashrun_terminal_velocity as *const _
                as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(dashrun_terminal_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).run_animation_scaling as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(run_animation_scaling)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).max_runbrake_frames as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(max_runbrake_frames)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).grounded_max_horizontal_velocity
                as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(grounded_max_horizontal_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).jump_startup_time as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(jump_startup_time)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).jump_h_initial_velocity as *const _
                as usize
        },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(jump_h_initial_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).jump_v_initial_velocity as *const _
                as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(jump_v_initial_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).ground_to_air_jump_momentum_multiplier
                as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(ground_to_air_jump_momentum_multiplier)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).jump_h_max_velocity as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(jump_h_max_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).hop_v_initial_velocity as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(hop_v_initial_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).air_jump_v_multiplier as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(air_jump_v_multiplier)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).air_jump_h_multiplier as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(air_jump_h_multiplier)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).max_jumps as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(max_jumps)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).gravity as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(gravity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).terminal_velocity as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(terminal_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).aerialDriftStickMult as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(aerialDriftStickMult)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).aerialDriftBase as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(aerialDriftBase)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).aerialDriftMax as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(aerialDriftMax)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).aerialFriction as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(aerialFriction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).fastfall_velocity as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(fastfall_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).horizontal_air_mobility_constant
                as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(horizontal_air_mobility_constant)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).jab_2_input_window as *const _ as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(jab_2_input_window)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).jab_3_input_window as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(jab_3_input_window)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).frames_to_change_direction_on_standing_turn
                as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(frames_to_change_direction_on_standing_turn)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).weight as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(weight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).model_scaling as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(model_scaling)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).initial_shield_size as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(initial_shield_size)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).shield_break_initial_velocity as *const _
                as usize
        },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(shield_break_initial_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).rapid_jab_window as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(rapid_jab_window)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1AC as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1AC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1B0 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1B0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1B4 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1B4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).ledge_jump_horizontal_velocity as *const _
                as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(ledge_jump_horizontal_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).ledge_jump_vertical_velocity as *const _
                as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(ledge_jump_vertical_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).item_throw_velocity_multiplier as *const _
                as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(item_throw_velocity_multiplier)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1C4 as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1C4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1C8 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1C8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1CC as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1CC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1D0 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1D0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1D4 as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1D4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1D8 as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1D8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1DC as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1DC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1E0 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1E0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1E4 as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1E4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1E8 as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1E8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown1EC as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown1EC)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).kirby_b_star_damage as *const _ as usize
        },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(kirby_b_star_damage)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).normal_landing_lag as *const _ as usize
        },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(normal_landing_lag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).n_air_landing_lag as *const _ as usize
        },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(n_air_landing_lag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).f_air_landing_lag as *const _ as usize
        },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(f_air_landing_lag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).b_air_landing_lag as *const _ as usize
        },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(b_air_landing_lag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).u_air_landing_lag as *const _ as usize
        },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(u_air_landing_lag)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).d_air_landing_lag as *const _ as usize
        },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(d_air_landing_lag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).nametag_height as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(nametag_height)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown210 as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown210)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).wall_jump_horizontal_velocity as *const _
                as usize
        },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(wall_jump_horizontal_velocity)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).wall_jump_vertical_velocity as *const _
                as usize
        },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(wall_jump_vertical_velocity)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown21C as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown21C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).trophy_scale as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(trophy_scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown224 as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown224)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown228 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown228)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown22C as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown22C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown230 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown230)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown234 as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown234)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown238 as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown238)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown23C as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown23C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown240 as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown240)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown244 as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown244)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown248 as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown248)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown24C as *const _ as usize },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown24C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown250 as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown250)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown254 as *const _ as usize },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown254)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown258 as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown258)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).bubble_ratio as *const _ as usize },
        332usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(bubble_ratio)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown260 as *const _ as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown260)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown264 as *const _ as usize },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown264)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown268 as *const _ as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown268)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown26C as *const _ as usize },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown26C)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).respawn_platform_scale as *const _ as usize
        },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(respawn_platform_scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown274 as *const _ as usize },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown274)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown278 as *const _ as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown278)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).camera_zoom_target_bone as *const _
                as usize
        },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(camera_zoom_target_bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown280 as *const _ as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown280)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown284 as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown284)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_attr>())).unknown288 as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(unknown288)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).special_jump_action___1 as *const _
                as usize
        },
        380usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(special_jump_action___1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_attr>())).weight_dependent_throw_speed_flags
                as *const _ as usize
        },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_attr),
            "::",
            stringify!(weight_dependent_throw_speed_flags)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_script {
    pub script_event_timer: f32,
    pub script_frame_timer: f32,
    pub script_current: *mut ::std::os::raw::c_int,
    pub script_loop_num: ::std::os::raw::c_int,
    pub script_return: *mut ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_script() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_script>(),
        32usize,
        concat!("Size of: ", stringify!(FighterData_script))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_script>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData_script))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_script>())).script_event_timer as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_script),
            "::",
            stringify!(script_event_timer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_script>())).script_frame_timer as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_script),
            "::",
            stringify!(script_frame_timer)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_script>())).script_current as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_script),
            "::",
            stringify!(script_current)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_script>())).script_loop_num as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_script),
            "::",
            stringify!(script_loop_num)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_script>())).script_return as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_script),
            "::",
            stringify!(script_return)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_input {
    pub lstick_x: f32,
    pub lstick_y: f32,
    pub lstick_prev_x: f32,
    pub lstick_prev_y: f32,
    pub unknown630: ::std::os::raw::c_int,
    pub unknown634: ::std::os::raw::c_int,
    pub cstick_x: f32,
    pub cstick_y: f32,
    pub x640: ::std::os::raw::c_int,
    pub unknown644: ::std::os::raw::c_int,
    pub unknown648: ::std::os::raw::c_int,
    pub unknown64C: ::std::os::raw::c_int,
    pub trigger: f32,
    pub unknown654: ::std::os::raw::c_int,
    pub unknown658: ::std::os::raw::c_int,
    pub held: ::std::os::raw::c_int,
    pub held_prev: ::std::os::raw::c_int,
    pub unknown664: ::std::os::raw::c_int,
    pub down: ::std::os::raw::c_int,
    pub unknown66C: ::std::os::raw::c_int,
    pub timer_lstick_tilt_x: ::std::os::raw::c_char,
    pub timer_lstick_tilt_y: ::std::os::raw::c_char,
    pub timer_trigger_analog: ::std::os::raw::c_char,
    pub timer_lstick_smash_x: ::std::os::raw::c_char,
    pub timer_lstick_smash_y: ::std::os::raw::c_char,
    pub timer_trigger_digital: ::std::os::raw::c_char,
    pub timer_lstick_any_x: ::std::os::raw::c_char,
    pub timer_lstick_any_y: ::std::os::raw::c_char,
    pub timer_trigger_any: ::std::os::raw::c_char,
    pub x679: ::std::os::raw::c_char,
    pub x67A: ::std::os::raw::c_char,
    pub x67B: ::std::os::raw::c_char,
    pub timer_a: ::std::os::raw::c_char,
    pub timer_b: ::std::os::raw::c_char,
    pub timer_xy: ::std::os::raw::c_char,
    pub timer_trigger_any_ignore_hitlag: ::std::os::raw::c_char,
    pub timer_LR: ::std::os::raw::c_char,
    pub timer_padup: ::std::os::raw::c_char,
    pub timer_paddown: ::std::os::raw::c_char,
    pub timer_item_release: ::std::os::raw::c_char,
    pub sinceRapidLR: ::std::os::raw::c_char,
    pub timer_unk2: ::std::os::raw::c_char,
    pub timer_unk3: ::std::os::raw::c_char,
    pub timer_unk4: ::std::os::raw::c_char,
    pub timer_sideb: ::std::os::raw::c_char,
    pub timer_neutralb: ::std::os::raw::c_char,
    pub timer_unk5: ::std::os::raw::c_char,
    pub timer_unk6: ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_FighterData_input() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_input>(),
        108usize,
        concat!("Size of: ", stringify!(FighterData_input))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_input>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_input))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).lstick_x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(lstick_x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).lstick_y as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(lstick_y)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).lstick_prev_x as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(lstick_prev_x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).lstick_prev_y as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(lstick_prev_y)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).unknown630 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(unknown630)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).unknown634 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(unknown634)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).cstick_x as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(cstick_x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).cstick_y as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(cstick_y)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).x640 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(x640)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).unknown644 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(unknown644)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).unknown648 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(unknown648)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).unknown64C as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(unknown64C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).trigger as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(trigger)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).unknown654 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(unknown654)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).unknown658 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(unknown658)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).held as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(held)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).held_prev as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(held_prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).unknown664 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(unknown664)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).down as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(down)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).unknown66C as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(unknown66C)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_lstick_tilt_x as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_lstick_tilt_x)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_lstick_tilt_y as *const _ as usize
        },
        81usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_lstick_tilt_y)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_trigger_analog as *const _ as usize
        },
        82usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_trigger_analog)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_lstick_smash_x as *const _ as usize
        },
        83usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_lstick_smash_x)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_lstick_smash_y as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_lstick_smash_y)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_trigger_digital as *const _ as usize
        },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_trigger_digital)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_lstick_any_x as *const _ as usize
        },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_lstick_any_x)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_lstick_any_y as *const _ as usize
        },
        87usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_lstick_any_y)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_trigger_any as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_trigger_any)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).x679 as *const _ as usize },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(x679)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).x67A as *const _ as usize },
        90usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(x67A)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).x67B as *const _ as usize },
        91usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(x67B)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_a as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_a)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_b as *const _ as usize },
        93usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_b)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_xy as *const _ as usize },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_xy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_trigger_any_ignore_hitlag
                as *const _ as usize
        },
        95usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_trigger_any_ignore_hitlag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_LR as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_LR)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_padup as *const _ as usize },
        97usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_padup)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_paddown as *const _ as usize },
        98usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_paddown)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_item_release as *const _ as usize
        },
        99usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_item_release)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).sinceRapidLR as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(sinceRapidLR)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_unk2 as *const _ as usize },
        101usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_unk2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_unk3 as *const _ as usize },
        102usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_unk3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_unk4 as *const _ as usize },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_unk4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_sideb as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_sideb)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_input>())).timer_neutralb as *const _ as usize
        },
        105usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_neutralb)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_unk5 as *const _ as usize },
        106usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_unk5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_input>())).timer_unk6 as *const _ as usize },
        107usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_input),
            "::",
            stringify!(timer_unk6)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_dmg {
    pub behavior: ::std::os::raw::c_int,
    pub percent: f32,
    pub x1834: ::std::os::raw::c_int,
    pub percent_temp: f32,
    pub applied: f32,
    pub x1840: ::std::os::raw::c_int,
    pub direction: f32,
    pub kb_angle: ::std::os::raw::c_int,
    pub damaged_hurtbox: ::std::os::raw::c_int,
    pub force_applied: f32,
    pub collpos: Vec3,
    pub dealt: ::std::os::raw::c_int,
    pub x1864: ::std::os::raw::c_int,
    pub source: *mut GOBJ,
    pub x186c: ::std::os::raw::c_int,
    pub x1870: ::std::os::raw::c_int,
    pub x1874: ::std::os::raw::c_int,
    pub x1878: ::std::os::raw::c_int,
    pub x187c: ::std::os::raw::c_int,
    pub x1880: ::std::os::raw::c_int,
    pub x1884: ::std::os::raw::c_int,
    pub x1888: ::std::os::raw::c_int,
    pub x188c: ::std::os::raw::c_int,
    pub x1890: ::std::os::raw::c_int,
    pub x1894: ::std::os::raw::c_int,
    pub x1898: ::std::os::raw::c_int,
    pub x189c: ::std::os::raw::c_int,
    pub x18a0: ::std::os::raw::c_int,
    pub kb_mag: f32,
    pub x18a8: ::std::os::raw::c_int,
    pub time_since_hit: ::std::os::raw::c_int,
    pub x18b0: ::std::os::raw::c_int,
    pub armor: f32,
    pub x18b8: ::std::os::raw::c_int,
    pub x18bc: ::std::os::raw::c_int,
    pub x18c0: ::std::os::raw::c_int,
    pub source_ply: ::std::os::raw::c_int,
    pub x18c8: ::std::os::raw::c_int,
    pub x18cc: ::std::os::raw::c_int,
    pub x18d0: ::std::os::raw::c_int,
    pub x18d4: ::std::os::raw::c_int,
    pub x18d8: ::std::os::raw::c_int,
    pub x18dc: ::std::os::raw::c_int,
    pub x18e0: ::std::os::raw::c_int,
    pub x18e4: ::std::os::raw::c_int,
    pub x18e8: ::std::os::raw::c_int,
    pub instancehitby: u16_,
    pub x18f0: ::std::os::raw::c_int,
    pub x18f4: ::std::os::raw::c_int,
    pub x18f8: u8_,
    pub x18f9: u8_,
    pub model_shift_frames: u16_,
    pub x18fc: u8_,
    pub x18fd: u8_,
    pub x1900: ::std::os::raw::c_int,
    pub x1904: ::std::os::raw::c_int,
    pub x1908: ::std::os::raw::c_int,
    pub x190c: ::std::os::raw::c_int,
    pub x1910: ::std::os::raw::c_int,
    pub x1914: ::std::os::raw::c_int,
    pub x1918: ::std::os::raw::c_int,
    pub x191c: ::std::os::raw::c_int,
    pub x1920: ::std::os::raw::c_int,
    pub x1924: ::std::os::raw::c_int,
    pub x1928: ::std::os::raw::c_int,
    pub x192c: ::std::os::raw::c_int,
    pub x1930: ::std::os::raw::c_int,
    pub x1934: ::std::os::raw::c_int,
    pub x1938: ::std::os::raw::c_int,
    pub x193c: ::std::os::raw::c_int,
    pub x1940: ::std::os::raw::c_int,
    pub x1944: ::std::os::raw::c_int,
    pub x1948: ::std::os::raw::c_int,
    pub x194c: ::std::os::raw::c_int,
    pub x1950: ::std::os::raw::c_int,
    pub x1954: ::std::os::raw::c_int,
    pub x1958: ::std::os::raw::c_int,
    pub hitlag_frames: f32,
}
#[test]
fn bindgen_test_layout_FighterData_dmg() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_dmg>(),
        320usize,
        concat!("Size of: ", stringify!(FighterData_dmg))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_dmg>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData_dmg))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).behavior as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(behavior)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).percent as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(percent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1834 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1834)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).percent_temp as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(percent_temp)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).applied as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(applied)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1840 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1840)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).direction as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(direction)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).kb_angle as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(kb_angle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).damaged_hurtbox as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(damaged_hurtbox)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).force_applied as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(force_applied)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).collpos as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(collpos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).dealt as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(dealt)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1864 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1864)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).source as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(source)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x186c as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x186c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1870 as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1870)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1874 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1874)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1878 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1878)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x187c as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x187c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1880 as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1880)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1884 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1884)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1888 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1888)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x188c as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x188c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1890 as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1890)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1894 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1894)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1898 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1898)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x189c as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x189c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18a0 as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).kb_mag as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(kb_mag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18a8 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).time_since_hit as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(time_since_hit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18b0 as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).armor as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(armor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18b8 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18bc as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18c0 as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).source_ply as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(source_ply)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18c8 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18cc as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18d0 as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18d4 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18d8 as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18dc as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18e0 as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18e4 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18e8 as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).instancehitby as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(instancehitby)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18f0 as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18f4 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18f8 as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18f9 as *const _ as usize },
        213usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18f9)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_dmg>())).model_shift_frames as *const _ as usize
        },
        214usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(model_shift_frames)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18fc as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x18fd as *const _ as usize },
        217usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x18fd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1900 as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1900)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1904 as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1904)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1908 as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1908)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x190c as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x190c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1910 as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1910)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1914 as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1914)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1918 as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1918)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x191c as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x191c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1920 as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1920)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1924 as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1924)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1928 as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1928)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x192c as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x192c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1930 as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1930)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1934 as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1934)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1938 as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1938)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x193c as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x193c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1940 as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1940)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1944 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1944)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1948 as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1948)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x194c as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x194c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1950 as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1950)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1954 as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1954)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).x1958 as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(x1958)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_dmg>())).hitlag_frames as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_dmg),
            "::",
            stringify!(hitlag_frames)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_jump {
    pub jumps_used: ::std::os::raw::c_char,
    pub walljumps_used: ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_FighterData_jump() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_jump>(),
        2usize,
        concat!("Size of: ", stringify!(FighterData_jump))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_jump>(),
        1usize,
        concat!("Alignment of ", stringify!(FighterData_jump))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_jump>())).jumps_used as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_jump),
            "::",
            stringify!(jumps_used)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_jump>())).walljumps_used as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_jump),
            "::",
            stringify!(walljumps_used)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_hurtstatus {
    pub script: ::std::os::raw::c_int,
    pub game: ::std::os::raw::c_int,
    pub ledge_intang_left: ::std::os::raw::c_int,
    pub respawn_intang_left: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_hurtstatus() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_hurtstatus>(),
        16usize,
        concat!("Size of: ", stringify!(FighterData_hurtstatus))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_hurtstatus>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_hurtstatus))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_hurtstatus>())).script as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_hurtstatus),
            "::",
            stringify!(script)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_hurtstatus>())).game as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_hurtstatus),
            "::",
            stringify!(game)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_hurtstatus>())).ledge_intang_left as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_hurtstatus),
            "::",
            stringify!(ledge_intang_left)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_hurtstatus>())).respawn_intang_left as *const _
                as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_hurtstatus),
            "::",
            stringify!(respawn_intang_left)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_shield {
    pub health: f32,
    pub lightshield_amt: f32,
    pub dmg_taken: ::std::os::raw::c_int,
    pub dmg_taken2: ::std::os::raw::c_int,
    pub dmg_source: *mut GOBJ,
    pub hit_direction: f32,
    pub hit_attr: ::std::os::raw::c_int,
    pub x19b4: f32,
    pub x19b8: f32,
    pub dmg_taken3: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_shield() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_shield>(),
        48usize,
        concat!("Size of: ", stringify!(FighterData_shield))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_shield>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData_shield))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_shield>())).health as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield),
            "::",
            stringify!(health)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_shield>())).lightshield_amt as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield),
            "::",
            stringify!(lightshield_amt)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_shield>())).dmg_taken as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield),
            "::",
            stringify!(dmg_taken)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_shield>())).dmg_taken2 as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield),
            "::",
            stringify!(dmg_taken2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_shield>())).dmg_source as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield),
            "::",
            stringify!(dmg_source)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_shield>())).hit_direction as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield),
            "::",
            stringify!(hit_direction)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_shield>())).hit_attr as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield),
            "::",
            stringify!(hit_attr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_shield>())).x19b4 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield),
            "::",
            stringify!(x19b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_shield>())).x19b8 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield),
            "::",
            stringify!(x19b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_shield>())).dmg_taken3 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield),
            "::",
            stringify!(dmg_taken3)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_shield_update {
    pub bone: *mut JOBJ,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub pos: Vec3,
    pub offset: Vec3,
    pub size_mult: f32,
}
#[test]
fn bindgen_test_layout_FighterData_shield_update() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_shield_update>(),
        40usize,
        concat!("Size of: ", stringify!(FighterData_shield_update))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_shield_update>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData_shield_update))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_shield_update>())).bone as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield_update),
            "::",
            stringify!(bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_shield_update>())).pos as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield_update),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_shield_update>())).offset as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield_update),
            "::",
            stringify!(offset)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_shield_update>())).size_mult as *const _ as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_shield_update),
            "::",
            stringify!(size_mult)
        )
    );
}
impl FighterData_shield_update {
    #[inline]
    pub fn is_checked(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_checked(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        is_checked: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let is_checked: u8 = unsafe { ::std::mem::transmute(is_checked) };
            is_checked as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_reflect_update {
    pub bone: *mut JOBJ,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub pos: Vec3,
    pub offset: Vec3,
    pub size_mult: f32,
}
#[test]
fn bindgen_test_layout_FighterData_reflect_update() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_reflect_update>(),
        40usize,
        concat!("Size of: ", stringify!(FighterData_reflect_update))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_reflect_update>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData_reflect_update))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_reflect_update>())).bone as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_reflect_update),
            "::",
            stringify!(bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_reflect_update>())).pos as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_reflect_update),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_reflect_update>())).offset as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_reflect_update),
            "::",
            stringify!(offset)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_reflect_update>())).size_mult as *const _ as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_reflect_update),
            "::",
            stringify!(size_mult)
        )
    );
}
impl FighterData_reflect_update {
    #[inline]
    pub fn is_checked(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_checked(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        is_checked: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let is_checked: u8 = unsafe { ::std::mem::transmute(is_checked) };
            is_checked as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_absorb_update {
    pub bone: *mut JOBJ,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub pos: Vec3,
    pub offset: Vec3,
    pub size_mult: f32,
}
#[test]
fn bindgen_test_layout_FighterData_absorb_update() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_absorb_update>(),
        40usize,
        concat!("Size of: ", stringify!(FighterData_absorb_update))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_absorb_update>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData_absorb_update))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_absorb_update>())).bone as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_absorb_update),
            "::",
            stringify!(bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_absorb_update>())).pos as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_absorb_update),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_absorb_update>())).offset as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_absorb_update),
            "::",
            stringify!(offset)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_absorb_update>())).size_mult as *const _ as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_absorb_update),
            "::",
            stringify!(size_mult)
        )
    );
}
impl FighterData_absorb_update {
    #[inline]
    pub fn is_checked(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_checked(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        is_checked: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let is_checked: u8 = unsafe { ::std::mem::transmute(is_checked) };
            is_checked as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_reflect_hit {
    pub hit_direction: f32,
    pub max_dmg: ::std::os::raw::c_int,
    pub dmg_mult: f32,
    pub is_break: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_reflect_hit() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_reflect_hit>(),
        16usize,
        concat!("Size of: ", stringify!(FighterData_reflect_hit))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_reflect_hit>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_reflect_hit))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_reflect_hit>())).hit_direction as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_reflect_hit),
            "::",
            stringify!(hit_direction)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_reflect_hit>())).max_dmg as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_reflect_hit),
            "::",
            stringify!(max_dmg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_reflect_hit>())).dmg_mult as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_reflect_hit),
            "::",
            stringify!(dmg_mult)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_reflect_hit>())).is_break as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_reflect_hit),
            "::",
            stringify!(is_break)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_absorb_hit {
    pub x1a3c: ::std::os::raw::c_int,
    pub hit_direction: f32,
    pub dmg_taken: ::std::os::raw::c_int,
    pub hits_taken: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_absorb_hit() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_absorb_hit>(),
        16usize,
        concat!("Size of: ", stringify!(FighterData_absorb_hit))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_absorb_hit>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_absorb_hit))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_absorb_hit>())).x1a3c as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_absorb_hit),
            "::",
            stringify!(x1a3c)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_absorb_hit>())).hit_direction as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_absorb_hit),
            "::",
            stringify!(hit_direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_absorb_hit>())).dmg_taken as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_absorb_hit),
            "::",
            stringify!(dmg_taken)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_absorb_hit>())).hits_taken as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_absorb_hit),
            "::",
            stringify!(hits_taken)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_grab {
    pub grab_timer: f32,
    pub x1a50: ::std::os::raw::c_int,
    pub x1a54: ::std::os::raw::c_int,
    pub grab_attacker: *mut GOBJ,
    pub grab_victim: *mut GOBJ,
    pub x1a60: ::std::os::raw::c_int,
    pub x1a64: ::std::os::raw::c_int,
    pub x1a68: u16_,
    pub vuln: u16_,
    pub x1a6c: ::std::os::raw::c_int,
    pub x1a70: ::std::os::raw::c_int,
    pub x1a74: ::std::os::raw::c_int,
    pub x1a78: ::std::os::raw::c_int,
    pub x1a7c: ::std::os::raw::c_int,
    pub x1a80: ::std::os::raw::c_int,
    pub x1a84: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_grab() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_grab>(),
        72usize,
        concat!("Size of: ", stringify!(FighterData_grab))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_grab>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData_grab))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).grab_timer as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(grab_timer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a50 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a54 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).grab_attacker as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(grab_attacker)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).grab_victim as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(grab_victim)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a60 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a64 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a68 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).vuln as *const _ as usize },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(vuln)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a6c as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a70 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a74 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a78 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a7c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a80 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_grab>())).x1a84 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_grab),
            "::",
            stringify!(x1a84)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_afterimage {
    pub afterimage: [FtAfterImageKey; 3usize],
    pub afterimage_bottom: f32,
    pub afterimage_top: f32,
    pub afterimage_state: u8_,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub __bindgen_padding_0: u16,
}
#[test]
fn bindgen_test_layout_FighterData_afterimage() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_afterimage>(),
        84usize,
        concat!("Size of: ", stringify!(FighterData_afterimage))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_afterimage>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_afterimage))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_afterimage>())).afterimage as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_afterimage),
            "::",
            stringify!(afterimage)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_afterimage>())).afterimage_bottom as *const _
                as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_afterimage),
            "::",
            stringify!(afterimage_bottom)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_afterimage>())).afterimage_top as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_afterimage),
            "::",
            stringify!(afterimage_top)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_afterimage>())).afterimage_state as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_afterimage),
            "::",
            stringify!(afterimage_state)
        )
    );
}
impl FighterData_afterimage {
    #[inline]
    pub fn afterimage_num(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 7u8) as u8) }
    }
    #[inline]
    pub fn set_afterimage_num(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 7u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        afterimage_num: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 7u8, {
            let afterimage_num: u8 = unsafe { ::std::mem::transmute(afterimage_num) };
            afterimage_num as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_smash {
    pub state: ::std::os::raw::c_int,
    pub frame: ::std::os::raw::c_int,
    pub hold_frame: f32,
    pub dmg_mult: f32,
    pub speed_mult: f32,
    pub x2128: ::std::os::raw::c_int,
    pub x212c: ::std::os::raw::c_int,
    pub is_sfx_played: ::std::os::raw::c_int,
    pub vibrate_frame: u8_,
    pub x22135: u8_,
    pub since_hitbox: f32,
}
#[test]
fn bindgen_test_layout_FighterData_smash() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_smash>(),
        40usize,
        concat!("Size of: ", stringify!(FighterData_smash))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_smash>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_smash))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).state as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).frame as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).hold_frame as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(hold_frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).dmg_mult as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(dmg_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).speed_mult as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(speed_mult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).x2128 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(x2128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).x212c as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(x212c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).is_sfx_played as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(is_sfx_played)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).vibrate_frame as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(vibrate_frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).x22135 as *const _ as usize },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(x22135)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_smash>())).since_hitbox as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_smash),
            "::",
            stringify!(since_hitbox)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_cb {
    pub OnGrabFighter_Self: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub x2194: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnGrabFighter_Victim: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub IASA: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub Anim: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub Phys: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub Coll: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub Cam: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub Accessory1: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub Accessory2: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub Accessory3: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub Accessory4: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnGiveDamage: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnShieldHit: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnReflectHit: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub x21cc: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub EveryHitlag: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub EnterHitlag: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub ExitHitlag: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnTakeDamage: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnDeath: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnDeath2: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnDeath3: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnActionStateChange: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnTakeDamage2: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnHurtboxDetect: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
    pub OnSpin: ::std::option::Option<unsafe extern "C" fn(fighter: *mut GOBJ)>,
}
#[test]
fn bindgen_test_layout_FighterData_cb() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_cb>(),
        216usize,
        concat!("Size of: ", stringify!(FighterData_cb))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_cb>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData_cb))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_cb>())).OnGrabFighter_Self as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnGrabFighter_Self)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).x2194 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(x2194)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_cb>())).OnGrabFighter_Victim as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnGrabFighter_Victim)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).IASA as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(IASA)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).Anim as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(Anim)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).Phys as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(Phys)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).Coll as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(Coll)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).Cam as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(Cam)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).Accessory1 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(Accessory1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).Accessory2 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(Accessory2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).Accessory3 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(Accessory3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).Accessory4 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(Accessory4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).OnGiveDamage as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnGiveDamage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).OnShieldHit as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnShieldHit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).OnReflectHit as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnReflectHit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).x21cc as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(x21cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).EveryHitlag as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(EveryHitlag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).EnterHitlag as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(EnterHitlag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).ExitHitlag as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(ExitHitlag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).OnTakeDamage as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnTakeDamage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).OnDeath as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnDeath)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).OnDeath2 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnDeath2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).OnDeath3 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnDeath3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_cb>())).OnActionStateChange as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnActionStateChange)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).OnTakeDamage2 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnTakeDamage2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).OnHurtboxDetect as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnHurtboxDetect)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_cb>())).OnSpin as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_cb),
            "::",
            stringify!(OnSpin)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_ftcmd_var {
    pub subactionFlag0: ::std::os::raw::c_int,
    pub subactionFlag1: ::std::os::raw::c_int,
    pub subactionFlag2: ::std::os::raw::c_int,
    pub subactionFlag3: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_ftcmd_var() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_ftcmd_var>(),
        16usize,
        concat!("Size of: ", stringify!(FighterData_ftcmd_var))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_ftcmd_var>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_ftcmd_var))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_ftcmd_var>())).subactionFlag0 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_ftcmd_var),
            "::",
            stringify!(subactionFlag0)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_ftcmd_var>())).subactionFlag1 as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_ftcmd_var),
            "::",
            stringify!(subactionFlag1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_ftcmd_var>())).subactionFlag2 as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_ftcmd_var),
            "::",
            stringify!(subactionFlag2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_ftcmd_var>())).subactionFlag3 as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_ftcmd_var),
            "::",
            stringify!(subactionFlag3)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_flags {
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub throw_timerval: f32,
    pub _bitfield_2: __BindgenBitfieldUnit<[u8; 8usize], u8>,
    pub flags_2220: ::std::os::raw::c_char,
    pub flags_2221: ::std::os::raw::c_char,
    pub _bitfield_3: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub flags_2223: ::std::os::raw::c_char,
    pub _bitfield_4: __BindgenBitfieldUnit<[u8; 3usize], u8>,
    pub flags_2227: ::std::os::raw::c_char,
    pub _bitfield_5: __BindgenBitfieldUnit<[u8; 2usize], u8>,
    pub flags_222A: ::std::os::raw::c_char,
    pub flags_222B: ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_FighterData_flags() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_flags>(),
        28usize,
        concat!("Size of: ", stringify!(FighterData_flags))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_flags>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_flags))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_flags>())).throw_timerval as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_flags),
            "::",
            stringify!(throw_timerval)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_flags>())).flags_2220 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_flags),
            "::",
            stringify!(flags_2220)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_flags>())).flags_2221 as *const _ as usize },
        17usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_flags),
            "::",
            stringify!(flags_2221)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_flags>())).flags_2223 as *const _ as usize },
        19usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_flags),
            "::",
            stringify!(flags_2223)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_flags>())).flags_2227 as *const _ as usize },
        23usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_flags),
            "::",
            stringify!(flags_2227)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_flags>())).flags_222A as *const _ as usize },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_flags),
            "::",
            stringify!(flags_222A)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_flags>())).flags_222B as *const _ as usize },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_flags),
            "::",
            stringify!(flags_222B)
        )
    );
}
impl FighterData_flags {
    #[inline]
    pub fn throw_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_throw_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn throw_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_throw_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn throw_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_throw_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn throw_release(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_throw_release(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn throw_turn(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_throw_turn(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn throw_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_throw_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn throw_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_throw_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn throw_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_throw_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        throw_1: ::std::os::raw::c_uchar,
        throw_2: ::std::os::raw::c_uchar,
        throw_3: ::std::os::raw::c_uchar,
        throw_release: ::std::os::raw::c_uchar,
        throw_turn: ::std::os::raw::c_uchar,
        throw_6: ::std::os::raw::c_uchar,
        throw_7: ::std::os::raw::c_uchar,
        throw_8: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let throw_1: u8 = unsafe { ::std::mem::transmute(throw_1) };
            throw_1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let throw_2: u8 = unsafe { ::std::mem::transmute(throw_2) };
            throw_2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let throw_3: u8 = unsafe { ::std::mem::transmute(throw_3) };
            throw_3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let throw_release: u8 = unsafe { ::std::mem::transmute(throw_release) };
            throw_release as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let throw_turn: u8 = unsafe { ::std::mem::transmute(throw_turn) };
            throw_turn as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let throw_6: u8 = unsafe { ::std::mem::transmute(throw_6) };
            throw_6 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let throw_7: u8 = unsafe { ::std::mem::transmute(throw_7) };
            throw_7 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let throw_8: u8 = unsafe { ::std::mem::transmute(throw_8) };
            throw_8 as u64
        });
        __bindgen_bitfield_unit
    }
    #[inline]
    pub fn x2218_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2218_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2218_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2218_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2218_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2218_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn reflect_enable(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_reflect_enable(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn reflect_nochangeowner(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_reflect_nochangeowner(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2218_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2218_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn absorb_enable(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_absorb_enable(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn absorb_unk(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_absorb_unk(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn persistent_gfx(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(8usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_persistent_gfx(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(8usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn immune(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(9usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_immune(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(9usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2219_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(10usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2219_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(10usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hitbox_active(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(11usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hitbox_active(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(11usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2219_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(12usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2219_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(12usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn freeze(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(13usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_freeze(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(13usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hitlag_unk(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(14usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hitlag_unk(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(14usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hitlag_unk2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(15usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hitlag_unk2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(15usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221a_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(16usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221a_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(16usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221a_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(17usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221a_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(17usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hitlag(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(18usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hitlag(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(18usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221a_4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(19usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221a_4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(19usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_fastfall(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(20usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_fastfall(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(20usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn no_hurt_script(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(21usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_no_hurt_script(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(21usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221a_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(22usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221a_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(22usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn gfx_persist(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(23usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_gfx_persist(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(23usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn shield_enable(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(24usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_shield_enable(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(24usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn shield_x40(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(25usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_shield_x40(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(25usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn shield_x20(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(26usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_shield_x20(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(26usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn shield_x10(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(27usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_shield_x10(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(27usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn shield_x8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(28usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_shield_x8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(28usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221b_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(29usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221b_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(29usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221b_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(30usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221b_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(30usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221b_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(31usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221b_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(31usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221c_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(32usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221c_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(32usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221c_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(33usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221c_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(33usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221c_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(34usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221c_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(34usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221c_4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(35usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221c_4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(35usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221c_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(36usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221c_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(36usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221c_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(37usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221c_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(37usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hitstun(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(38usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hitstun(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(38usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221c_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(39usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221c_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(39usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221d_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(40usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221d_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(40usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221d_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(41usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221d_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(41usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221d_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(42usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221d_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(42usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn input_enable(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(43usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_input_enable(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(43usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221d_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(44usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221d_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(44usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn nudge_disable(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(45usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_nudge_disable(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(45usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn ground_ignore(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(46usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_ground_ignore(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(46usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221d_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(47usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221d_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(47usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn invisible(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(48usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_invisible(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(48usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221e_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(49usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221e_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(49usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221e_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(50usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221e_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(50usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isItemVisible(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(51usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isItemVisible(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(51usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221e_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(52usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221e_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(52usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221e_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(53usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221e_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(53usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221e_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(54usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221e_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(54usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221e_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(55usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221e_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(55usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_offscreen(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(56usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_offscreen(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(56usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn dead(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(57usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_dead(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(57usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221f_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(58usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221f_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(58usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn sleep(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(59usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_sleep(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(59usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn ms(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(60usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_ms(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(60usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221f_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(61usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221f_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(61usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221f_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(62usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221f_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(62usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x221f_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(63usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x221f_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(63usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_2(
        x2218_1: ::std::os::raw::c_uchar,
        x2218_2: ::std::os::raw::c_uchar,
        x2218_3: ::std::os::raw::c_uchar,
        reflect_enable: ::std::os::raw::c_uchar,
        reflect_nochangeowner: ::std::os::raw::c_uchar,
        x2218_6: ::std::os::raw::c_uchar,
        absorb_enable: ::std::os::raw::c_uchar,
        absorb_unk: ::std::os::raw::c_uchar,
        persistent_gfx: ::std::os::raw::c_uchar,
        immune: ::std::os::raw::c_uchar,
        x2219_3: ::std::os::raw::c_uchar,
        hitbox_active: ::std::os::raw::c_uchar,
        x2219_5: ::std::os::raw::c_uchar,
        freeze: ::std::os::raw::c_uchar,
        hitlag_unk: ::std::os::raw::c_uchar,
        hitlag_unk2: ::std::os::raw::c_uchar,
        x221a_1: ::std::os::raw::c_uchar,
        x221a_2: ::std::os::raw::c_uchar,
        hitlag: ::std::os::raw::c_uchar,
        x221a_4: ::std::os::raw::c_uchar,
        is_fastfall: ::std::os::raw::c_uchar,
        no_hurt_script: ::std::os::raw::c_uchar,
        x221a_7: ::std::os::raw::c_uchar,
        gfx_persist: ::std::os::raw::c_uchar,
        shield_enable: ::std::os::raw::c_uchar,
        shield_x40: ::std::os::raw::c_uchar,
        shield_x20: ::std::os::raw::c_uchar,
        shield_x10: ::std::os::raw::c_uchar,
        shield_x8: ::std::os::raw::c_uchar,
        x221b_6: ::std::os::raw::c_uchar,
        x221b_7: ::std::os::raw::c_uchar,
        x221b_8: ::std::os::raw::c_uchar,
        x221c_1: ::std::os::raw::c_uchar,
        x221c_2: ::std::os::raw::c_uchar,
        x221c_3: ::std::os::raw::c_uchar,
        x221c_4: ::std::os::raw::c_uchar,
        x221c_5: ::std::os::raw::c_uchar,
        x221c_6: ::std::os::raw::c_uchar,
        hitstun: ::std::os::raw::c_uchar,
        x221c_8: ::std::os::raw::c_uchar,
        x221d_1: ::std::os::raw::c_uchar,
        x221d_2: ::std::os::raw::c_uchar,
        x221d_3: ::std::os::raw::c_uchar,
        input_enable: ::std::os::raw::c_uchar,
        x221d_5: ::std::os::raw::c_uchar,
        nudge_disable: ::std::os::raw::c_uchar,
        ground_ignore: ::std::os::raw::c_uchar,
        x221d_8: ::std::os::raw::c_uchar,
        invisible: ::std::os::raw::c_uchar,
        x221e_2: ::std::os::raw::c_uchar,
        x221e_3: ::std::os::raw::c_uchar,
        isItemVisible: ::std::os::raw::c_uchar,
        x221e_5: ::std::os::raw::c_uchar,
        x221e_6: ::std::os::raw::c_uchar,
        x221e_7: ::std::os::raw::c_uchar,
        x221e_8: ::std::os::raw::c_uchar,
        is_offscreen: ::std::os::raw::c_uchar,
        dead: ::std::os::raw::c_uchar,
        x221f_3: ::std::os::raw::c_uchar,
        sleep: ::std::os::raw::c_uchar,
        ms: ::std::os::raw::c_uchar,
        x221f_6: ::std::os::raw::c_uchar,
        x221f_7: ::std::os::raw::c_uchar,
        x221f_8: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 8usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 8usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x2218_1: u8 = unsafe { ::std::mem::transmute(x2218_1) };
            x2218_1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x2218_2: u8 = unsafe { ::std::mem::transmute(x2218_2) };
            x2218_2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let x2218_3: u8 = unsafe { ::std::mem::transmute(x2218_3) };
            x2218_3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let reflect_enable: u8 = unsafe { ::std::mem::transmute(reflect_enable) };
            reflect_enable as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let reflect_nochangeowner: u8 = unsafe { ::std::mem::transmute(reflect_nochangeowner) };
            reflect_nochangeowner as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let x2218_6: u8 = unsafe { ::std::mem::transmute(x2218_6) };
            x2218_6 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let absorb_enable: u8 = unsafe { ::std::mem::transmute(absorb_enable) };
            absorb_enable as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let absorb_unk: u8 = unsafe { ::std::mem::transmute(absorb_unk) };
            absorb_unk as u64
        });
        __bindgen_bitfield_unit.set(8usize, 1u8, {
            let persistent_gfx: u8 = unsafe { ::std::mem::transmute(persistent_gfx) };
            persistent_gfx as u64
        });
        __bindgen_bitfield_unit.set(9usize, 1u8, {
            let immune: u8 = unsafe { ::std::mem::transmute(immune) };
            immune as u64
        });
        __bindgen_bitfield_unit.set(10usize, 1u8, {
            let x2219_3: u8 = unsafe { ::std::mem::transmute(x2219_3) };
            x2219_3 as u64
        });
        __bindgen_bitfield_unit.set(11usize, 1u8, {
            let hitbox_active: u8 = unsafe { ::std::mem::transmute(hitbox_active) };
            hitbox_active as u64
        });
        __bindgen_bitfield_unit.set(12usize, 1u8, {
            let x2219_5: u8 = unsafe { ::std::mem::transmute(x2219_5) };
            x2219_5 as u64
        });
        __bindgen_bitfield_unit.set(13usize, 1u8, {
            let freeze: u8 = unsafe { ::std::mem::transmute(freeze) };
            freeze as u64
        });
        __bindgen_bitfield_unit.set(14usize, 1u8, {
            let hitlag_unk: u8 = unsafe { ::std::mem::transmute(hitlag_unk) };
            hitlag_unk as u64
        });
        __bindgen_bitfield_unit.set(15usize, 1u8, {
            let hitlag_unk2: u8 = unsafe { ::std::mem::transmute(hitlag_unk2) };
            hitlag_unk2 as u64
        });
        __bindgen_bitfield_unit.set(16usize, 1u8, {
            let x221a_1: u8 = unsafe { ::std::mem::transmute(x221a_1) };
            x221a_1 as u64
        });
        __bindgen_bitfield_unit.set(17usize, 1u8, {
            let x221a_2: u8 = unsafe { ::std::mem::transmute(x221a_2) };
            x221a_2 as u64
        });
        __bindgen_bitfield_unit.set(18usize, 1u8, {
            let hitlag: u8 = unsafe { ::std::mem::transmute(hitlag) };
            hitlag as u64
        });
        __bindgen_bitfield_unit.set(19usize, 1u8, {
            let x221a_4: u8 = unsafe { ::std::mem::transmute(x221a_4) };
            x221a_4 as u64
        });
        __bindgen_bitfield_unit.set(20usize, 1u8, {
            let is_fastfall: u8 = unsafe { ::std::mem::transmute(is_fastfall) };
            is_fastfall as u64
        });
        __bindgen_bitfield_unit.set(21usize, 1u8, {
            let no_hurt_script: u8 = unsafe { ::std::mem::transmute(no_hurt_script) };
            no_hurt_script as u64
        });
        __bindgen_bitfield_unit.set(22usize, 1u8, {
            let x221a_7: u8 = unsafe { ::std::mem::transmute(x221a_7) };
            x221a_7 as u64
        });
        __bindgen_bitfield_unit.set(23usize, 1u8, {
            let gfx_persist: u8 = unsafe { ::std::mem::transmute(gfx_persist) };
            gfx_persist as u64
        });
        __bindgen_bitfield_unit.set(24usize, 1u8, {
            let shield_enable: u8 = unsafe { ::std::mem::transmute(shield_enable) };
            shield_enable as u64
        });
        __bindgen_bitfield_unit.set(25usize, 1u8, {
            let shield_x40: u8 = unsafe { ::std::mem::transmute(shield_x40) };
            shield_x40 as u64
        });
        __bindgen_bitfield_unit.set(26usize, 1u8, {
            let shield_x20: u8 = unsafe { ::std::mem::transmute(shield_x20) };
            shield_x20 as u64
        });
        __bindgen_bitfield_unit.set(27usize, 1u8, {
            let shield_x10: u8 = unsafe { ::std::mem::transmute(shield_x10) };
            shield_x10 as u64
        });
        __bindgen_bitfield_unit.set(28usize, 1u8, {
            let shield_x8: u8 = unsafe { ::std::mem::transmute(shield_x8) };
            shield_x8 as u64
        });
        __bindgen_bitfield_unit.set(29usize, 1u8, {
            let x221b_6: u8 = unsafe { ::std::mem::transmute(x221b_6) };
            x221b_6 as u64
        });
        __bindgen_bitfield_unit.set(30usize, 1u8, {
            let x221b_7: u8 = unsafe { ::std::mem::transmute(x221b_7) };
            x221b_7 as u64
        });
        __bindgen_bitfield_unit.set(31usize, 1u8, {
            let x221b_8: u8 = unsafe { ::std::mem::transmute(x221b_8) };
            x221b_8 as u64
        });
        __bindgen_bitfield_unit.set(32usize, 1u8, {
            let x221c_1: u8 = unsafe { ::std::mem::transmute(x221c_1) };
            x221c_1 as u64
        });
        __bindgen_bitfield_unit.set(33usize, 1u8, {
            let x221c_2: u8 = unsafe { ::std::mem::transmute(x221c_2) };
            x221c_2 as u64
        });
        __bindgen_bitfield_unit.set(34usize, 1u8, {
            let x221c_3: u8 = unsafe { ::std::mem::transmute(x221c_3) };
            x221c_3 as u64
        });
        __bindgen_bitfield_unit.set(35usize, 1u8, {
            let x221c_4: u8 = unsafe { ::std::mem::transmute(x221c_4) };
            x221c_4 as u64
        });
        __bindgen_bitfield_unit.set(36usize, 1u8, {
            let x221c_5: u8 = unsafe { ::std::mem::transmute(x221c_5) };
            x221c_5 as u64
        });
        __bindgen_bitfield_unit.set(37usize, 1u8, {
            let x221c_6: u8 = unsafe { ::std::mem::transmute(x221c_6) };
            x221c_6 as u64
        });
        __bindgen_bitfield_unit.set(38usize, 1u8, {
            let hitstun: u8 = unsafe { ::std::mem::transmute(hitstun) };
            hitstun as u64
        });
        __bindgen_bitfield_unit.set(39usize, 1u8, {
            let x221c_8: u8 = unsafe { ::std::mem::transmute(x221c_8) };
            x221c_8 as u64
        });
        __bindgen_bitfield_unit.set(40usize, 1u8, {
            let x221d_1: u8 = unsafe { ::std::mem::transmute(x221d_1) };
            x221d_1 as u64
        });
        __bindgen_bitfield_unit.set(41usize, 1u8, {
            let x221d_2: u8 = unsafe { ::std::mem::transmute(x221d_2) };
            x221d_2 as u64
        });
        __bindgen_bitfield_unit.set(42usize, 1u8, {
            let x221d_3: u8 = unsafe { ::std::mem::transmute(x221d_3) };
            x221d_3 as u64
        });
        __bindgen_bitfield_unit.set(43usize, 1u8, {
            let input_enable: u8 = unsafe { ::std::mem::transmute(input_enable) };
            input_enable as u64
        });
        __bindgen_bitfield_unit.set(44usize, 1u8, {
            let x221d_5: u8 = unsafe { ::std::mem::transmute(x221d_5) };
            x221d_5 as u64
        });
        __bindgen_bitfield_unit.set(45usize, 1u8, {
            let nudge_disable: u8 = unsafe { ::std::mem::transmute(nudge_disable) };
            nudge_disable as u64
        });
        __bindgen_bitfield_unit.set(46usize, 1u8, {
            let ground_ignore: u8 = unsafe { ::std::mem::transmute(ground_ignore) };
            ground_ignore as u64
        });
        __bindgen_bitfield_unit.set(47usize, 1u8, {
            let x221d_8: u8 = unsafe { ::std::mem::transmute(x221d_8) };
            x221d_8 as u64
        });
        __bindgen_bitfield_unit.set(48usize, 1u8, {
            let invisible: u8 = unsafe { ::std::mem::transmute(invisible) };
            invisible as u64
        });
        __bindgen_bitfield_unit.set(49usize, 1u8, {
            let x221e_2: u8 = unsafe { ::std::mem::transmute(x221e_2) };
            x221e_2 as u64
        });
        __bindgen_bitfield_unit.set(50usize, 1u8, {
            let x221e_3: u8 = unsafe { ::std::mem::transmute(x221e_3) };
            x221e_3 as u64
        });
        __bindgen_bitfield_unit.set(51usize, 1u8, {
            let isItemVisible: u8 = unsafe { ::std::mem::transmute(isItemVisible) };
            isItemVisible as u64
        });
        __bindgen_bitfield_unit.set(52usize, 1u8, {
            let x221e_5: u8 = unsafe { ::std::mem::transmute(x221e_5) };
            x221e_5 as u64
        });
        __bindgen_bitfield_unit.set(53usize, 1u8, {
            let x221e_6: u8 = unsafe { ::std::mem::transmute(x221e_6) };
            x221e_6 as u64
        });
        __bindgen_bitfield_unit.set(54usize, 1u8, {
            let x221e_7: u8 = unsafe { ::std::mem::transmute(x221e_7) };
            x221e_7 as u64
        });
        __bindgen_bitfield_unit.set(55usize, 1u8, {
            let x221e_8: u8 = unsafe { ::std::mem::transmute(x221e_8) };
            x221e_8 as u64
        });
        __bindgen_bitfield_unit.set(56usize, 1u8, {
            let is_offscreen: u8 = unsafe { ::std::mem::transmute(is_offscreen) };
            is_offscreen as u64
        });
        __bindgen_bitfield_unit.set(57usize, 1u8, {
            let dead: u8 = unsafe { ::std::mem::transmute(dead) };
            dead as u64
        });
        __bindgen_bitfield_unit.set(58usize, 1u8, {
            let x221f_3: u8 = unsafe { ::std::mem::transmute(x221f_3) };
            x221f_3 as u64
        });
        __bindgen_bitfield_unit.set(59usize, 1u8, {
            let sleep: u8 = unsafe { ::std::mem::transmute(sleep) };
            sleep as u64
        });
        __bindgen_bitfield_unit.set(60usize, 1u8, {
            let ms: u8 = unsafe { ::std::mem::transmute(ms) };
            ms as u64
        });
        __bindgen_bitfield_unit.set(61usize, 1u8, {
            let x221f_6: u8 = unsafe { ::std::mem::transmute(x221f_6) };
            x221f_6 as u64
        });
        __bindgen_bitfield_unit.set(62usize, 1u8, {
            let x221f_7: u8 = unsafe { ::std::mem::transmute(x221f_7) };
            x221f_7 as u64
        });
        __bindgen_bitfield_unit.set(63usize, 1u8, {
            let x221f_8: u8 = unsafe { ::std::mem::transmute(x221f_8) };
            x221f_8 as u64
        });
        __bindgen_bitfield_unit
    }
    #[inline]
    pub fn x2222_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_3.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2222_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_3.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_multijump(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_3.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_multijump(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_3.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2222_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_3.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2222_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_3.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn ceilko_nokb(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_3.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_ceilko_nokb(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_3.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2222_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_3.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2222_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_3.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn has_follower(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_3.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_has_follower(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_3.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2222_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_3.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2222_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_3.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2222_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_3.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2222_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_3.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_3(
        x2222_1: ::std::os::raw::c_uchar,
        is_multijump: ::std::os::raw::c_uchar,
        x2222_3: ::std::os::raw::c_uchar,
        ceilko_nokb: ::std::os::raw::c_uchar,
        x2222_5: ::std::os::raw::c_uchar,
        has_follower: ::std::os::raw::c_uchar,
        x2222_7: ::std::os::raw::c_uchar,
        x2222_8: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x2222_1: u8 = unsafe { ::std::mem::transmute(x2222_1) };
            x2222_1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let is_multijump: u8 = unsafe { ::std::mem::transmute(is_multijump) };
            is_multijump as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let x2222_3: u8 = unsafe { ::std::mem::transmute(x2222_3) };
            x2222_3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let ceilko_nokb: u8 = unsafe { ::std::mem::transmute(ceilko_nokb) };
            ceilko_nokb as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let x2222_5: u8 = unsafe { ::std::mem::transmute(x2222_5) };
            x2222_5 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let has_follower: u8 = unsafe { ::std::mem::transmute(has_follower) };
            has_follower as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let x2222_7: u8 = unsafe { ::std::mem::transmute(x2222_7) };
            x2222_7 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let x2222_8: u8 = unsafe { ::std::mem::transmute(x2222_8) };
            x2222_8 as u64
        });
        __bindgen_bitfield_unit
    }
    #[inline]
    pub fn x2224_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2224_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2224_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2224_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn stamina_dead(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_stamina_dead(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2224_4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2224_4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2224_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2224_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2224_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2224_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2224_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2224_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2224_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2224_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2225_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(8usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2225_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(8usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2225_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(9usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2225_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(9usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn has_model_addition(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(10usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_has_model_addition(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(10usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2225_4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(11usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2225_4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(11usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2225_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(12usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2225_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(12usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2225_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(13usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2225_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(13usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2225_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(14usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2225_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(14usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2225_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(15usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2225_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(15usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2226_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(16usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2226_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(16usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_thrown(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(17usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_thrown(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(17usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2226_4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(18usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2226_4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(18usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2226_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(19usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2226_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(19usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2226_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(20usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2226_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(20usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2226_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(21usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2226_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(21usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2226_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_4.get(22usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2226_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_4.set(22usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_4(
        x2224_1: ::std::os::raw::c_uchar,
        x2224_2: ::std::os::raw::c_uchar,
        stamina_dead: ::std::os::raw::c_uchar,
        x2224_4: ::std::os::raw::c_uchar,
        x2224_5: ::std::os::raw::c_uchar,
        x2224_6: ::std::os::raw::c_uchar,
        x2224_7: ::std::os::raw::c_uchar,
        x2224_8: ::std::os::raw::c_uchar,
        x2225_1: ::std::os::raw::c_uchar,
        x2225_2: ::std::os::raw::c_uchar,
        has_model_addition: ::std::os::raw::c_uchar,
        x2225_4: ::std::os::raw::c_uchar,
        x2225_5: ::std::os::raw::c_uchar,
        x2225_6: ::std::os::raw::c_uchar,
        x2225_7: ::std::os::raw::c_uchar,
        x2225_8: ::std::os::raw::c_uchar,
        x2226_2: ::std::os::raw::c_uchar,
        is_thrown: ::std::os::raw::c_uchar,
        x2226_4: ::std::os::raw::c_uchar,
        x2226_5: ::std::os::raw::c_uchar,
        x2226_6: ::std::os::raw::c_uchar,
        x2226_7: ::std::os::raw::c_uchar,
        x2226_8: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 3usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 3usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x2224_1: u8 = unsafe { ::std::mem::transmute(x2224_1) };
            x2224_1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x2224_2: u8 = unsafe { ::std::mem::transmute(x2224_2) };
            x2224_2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let stamina_dead: u8 = unsafe { ::std::mem::transmute(stamina_dead) };
            stamina_dead as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let x2224_4: u8 = unsafe { ::std::mem::transmute(x2224_4) };
            x2224_4 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let x2224_5: u8 = unsafe { ::std::mem::transmute(x2224_5) };
            x2224_5 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let x2224_6: u8 = unsafe { ::std::mem::transmute(x2224_6) };
            x2224_6 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let x2224_7: u8 = unsafe { ::std::mem::transmute(x2224_7) };
            x2224_7 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let x2224_8: u8 = unsafe { ::std::mem::transmute(x2224_8) };
            x2224_8 as u64
        });
        __bindgen_bitfield_unit.set(8usize, 1u8, {
            let x2225_1: u8 = unsafe { ::std::mem::transmute(x2225_1) };
            x2225_1 as u64
        });
        __bindgen_bitfield_unit.set(9usize, 1u8, {
            let x2225_2: u8 = unsafe { ::std::mem::transmute(x2225_2) };
            x2225_2 as u64
        });
        __bindgen_bitfield_unit.set(10usize, 1u8, {
            let has_model_addition: u8 = unsafe { ::std::mem::transmute(has_model_addition) };
            has_model_addition as u64
        });
        __bindgen_bitfield_unit.set(11usize, 1u8, {
            let x2225_4: u8 = unsafe { ::std::mem::transmute(x2225_4) };
            x2225_4 as u64
        });
        __bindgen_bitfield_unit.set(12usize, 1u8, {
            let x2225_5: u8 = unsafe { ::std::mem::transmute(x2225_5) };
            x2225_5 as u64
        });
        __bindgen_bitfield_unit.set(13usize, 1u8, {
            let x2225_6: u8 = unsafe { ::std::mem::transmute(x2225_6) };
            x2225_6 as u64
        });
        __bindgen_bitfield_unit.set(14usize, 1u8, {
            let x2225_7: u8 = unsafe { ::std::mem::transmute(x2225_7) };
            x2225_7 as u64
        });
        __bindgen_bitfield_unit.set(15usize, 1u8, {
            let x2225_8: u8 = unsafe { ::std::mem::transmute(x2225_8) };
            x2225_8 as u64
        });
        __bindgen_bitfield_unit.set(16usize, 1u8, {
            let x2226_2: u8 = unsafe { ::std::mem::transmute(x2226_2) };
            x2226_2 as u64
        });
        __bindgen_bitfield_unit.set(17usize, 1u8, {
            let is_thrown: u8 = unsafe { ::std::mem::transmute(is_thrown) };
            is_thrown as u64
        });
        __bindgen_bitfield_unit.set(18usize, 1u8, {
            let x2226_4: u8 = unsafe { ::std::mem::transmute(x2226_4) };
            x2226_4 as u64
        });
        __bindgen_bitfield_unit.set(19usize, 1u8, {
            let x2226_5: u8 = unsafe { ::std::mem::transmute(x2226_5) };
            x2226_5 as u64
        });
        __bindgen_bitfield_unit.set(20usize, 1u8, {
            let x2226_6: u8 = unsafe { ::std::mem::transmute(x2226_6) };
            x2226_6 as u64
        });
        __bindgen_bitfield_unit.set(21usize, 1u8, {
            let x2226_7: u8 = unsafe { ::std::mem::transmute(x2226_7) };
            x2226_7 as u64
        });
        __bindgen_bitfield_unit.set(22usize, 1u8, {
            let x2226_8: u8 = unsafe { ::std::mem::transmute(x2226_8) };
            x2226_8 as u64
        });
        __bindgen_bitfield_unit
    }
    #[inline]
    pub fn x2228_1(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2228_1(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2228_2(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2228_2(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2228_3(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2228_3(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2228_4(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2228_4(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2228_5(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2228_5(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2228_6(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2228_6(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn used_tether(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_used_tether(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2228_8(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2228_8(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2229_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(8usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2229_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(8usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2229_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(9usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2229_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(9usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2229_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(10usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2229_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(10usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2229_4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(11usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2229_4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(11usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2229_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(12usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2229_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(12usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2229_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(13usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2229_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(13usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x2229_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(14usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x2229_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(14usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn no_reaction_always(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_5.get(15usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_no_reaction_always(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_5.set(15usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_5(
        x2228_1: ::std::os::raw::c_char,
        x2228_2: ::std::os::raw::c_char,
        x2228_3: ::std::os::raw::c_char,
        x2228_4: ::std::os::raw::c_char,
        x2228_5: ::std::os::raw::c_char,
        x2228_6: ::std::os::raw::c_char,
        used_tether: ::std::os::raw::c_char,
        x2228_8: ::std::os::raw::c_char,
        x2229_1: ::std::os::raw::c_uchar,
        x2229_2: ::std::os::raw::c_uchar,
        x2229_3: ::std::os::raw::c_uchar,
        x2229_4: ::std::os::raw::c_uchar,
        x2229_5: ::std::os::raw::c_uchar,
        x2229_6: ::std::os::raw::c_uchar,
        x2229_7: ::std::os::raw::c_uchar,
        no_reaction_always: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 2usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 2usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x2228_1: u8 = unsafe { ::std::mem::transmute(x2228_1) };
            x2228_1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x2228_2: u8 = unsafe { ::std::mem::transmute(x2228_2) };
            x2228_2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let x2228_3: u8 = unsafe { ::std::mem::transmute(x2228_3) };
            x2228_3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let x2228_4: u8 = unsafe { ::std::mem::transmute(x2228_4) };
            x2228_4 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let x2228_5: u8 = unsafe { ::std::mem::transmute(x2228_5) };
            x2228_5 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let x2228_6: u8 = unsafe { ::std::mem::transmute(x2228_6) };
            x2228_6 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let used_tether: u8 = unsafe { ::std::mem::transmute(used_tether) };
            used_tether as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let x2228_8: u8 = unsafe { ::std::mem::transmute(x2228_8) };
            x2228_8 as u64
        });
        __bindgen_bitfield_unit.set(8usize, 1u8, {
            let x2229_1: u8 = unsafe { ::std::mem::transmute(x2229_1) };
            x2229_1 as u64
        });
        __bindgen_bitfield_unit.set(9usize, 1u8, {
            let x2229_2: u8 = unsafe { ::std::mem::transmute(x2229_2) };
            x2229_2 as u64
        });
        __bindgen_bitfield_unit.set(10usize, 1u8, {
            let x2229_3: u8 = unsafe { ::std::mem::transmute(x2229_3) };
            x2229_3 as u64
        });
        __bindgen_bitfield_unit.set(11usize, 1u8, {
            let x2229_4: u8 = unsafe { ::std::mem::transmute(x2229_4) };
            x2229_4 as u64
        });
        __bindgen_bitfield_unit.set(12usize, 1u8, {
            let x2229_5: u8 = unsafe { ::std::mem::transmute(x2229_5) };
            x2229_5 as u64
        });
        __bindgen_bitfield_unit.set(13usize, 1u8, {
            let x2229_6: u8 = unsafe { ::std::mem::transmute(x2229_6) };
            x2229_6 as u64
        });
        __bindgen_bitfield_unit.set(14usize, 1u8, {
            let x2229_7: u8 = unsafe { ::std::mem::transmute(x2229_7) };
            x2229_7 as u64
        });
        __bindgen_bitfield_unit.set(15usize, 1u8, {
            let no_reaction_always: u8 = unsafe { ::std::mem::transmute(no_reaction_always) };
            no_reaction_always as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_fighter_var {
    pub charVar1: ::std::os::raw::c_int,
    pub charVar2: ::std::os::raw::c_int,
    pub charVar3: ::std::os::raw::c_int,
    pub charVar4: ::std::os::raw::c_int,
    pub charVar5: ::std::os::raw::c_int,
    pub charVar6: ::std::os::raw::c_int,
    pub charVar7: ::std::os::raw::c_int,
    pub charVar8: ::std::os::raw::c_int,
    pub charVar9: ::std::os::raw::c_int,
    pub charVar10: ::std::os::raw::c_int,
    pub charVar11: ::std::os::raw::c_int,
    pub charVar12: ::std::os::raw::c_int,
    pub charVar13: ::std::os::raw::c_int,
    pub charVar14: ::std::os::raw::c_int,
    pub charVar15: ::std::os::raw::c_int,
    pub charVar16: ::std::os::raw::c_int,
    pub charVar17: ::std::os::raw::c_int,
    pub charVar18: ::std::os::raw::c_int,
    pub charVar19: ::std::os::raw::c_int,
    pub charVar20: ::std::os::raw::c_int,
    pub charVar21: ::std::os::raw::c_int,
    pub charVar22: ::std::os::raw::c_int,
    pub charVar23: ::std::os::raw::c_int,
    pub charVar24: ::std::os::raw::c_int,
    pub charVar25: ::std::os::raw::c_int,
    pub charVar26: ::std::os::raw::c_int,
    pub charVar27: ::std::os::raw::c_int,
    pub charVar28: ::std::os::raw::c_int,
    pub charVar29: ::std::os::raw::c_int,
    pub charVar30: ::std::os::raw::c_int,
    pub charVar31: ::std::os::raw::c_int,
    pub charVar32: ::std::os::raw::c_int,
    pub charVar33: ::std::os::raw::c_int,
    pub charVar34: ::std::os::raw::c_int,
    pub charVar35: ::std::os::raw::c_int,
    pub charVar36: ::std::os::raw::c_int,
    pub charVar37: ::std::os::raw::c_int,
    pub charVar38: ::std::os::raw::c_int,
    pub charVar39: ::std::os::raw::c_int,
    pub charVar40: ::std::os::raw::c_int,
    pub charVar41: ::std::os::raw::c_int,
    pub charVar42: ::std::os::raw::c_int,
    pub charVar43: ::std::os::raw::c_int,
    pub charVar44: ::std::os::raw::c_int,
    pub charVar45: ::std::os::raw::c_int,
    pub charVar46: ::std::os::raw::c_int,
    pub charVar47: ::std::os::raw::c_int,
    pub charVar48: ::std::os::raw::c_int,
    pub charVar49: ::std::os::raw::c_int,
    pub charVar50: ::std::os::raw::c_int,
    pub charVar51: ::std::os::raw::c_int,
    pub charVar52: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_fighter_var() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_fighter_var>(),
        208usize,
        concat!("Size of: ", stringify!(FighterData_fighter_var))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_fighter_var>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_fighter_var))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar1 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar2 as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar3 as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar4 as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar5 as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar5)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar6 as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar6)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar7 as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar7)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar8 as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar8)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar9 as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar9)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar10 as *const _ as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar10)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar11 as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar11)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar12 as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar12)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar13 as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar13)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar14 as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar14)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar15 as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar15)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar16 as *const _ as usize
        },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar16)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar17 as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar17)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar18 as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar18)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar19 as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar19)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar20 as *const _ as usize
        },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar20)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar21 as *const _ as usize
        },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar21)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar22 as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar22)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar23 as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar23)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar24 as *const _ as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar24)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar25 as *const _ as usize
        },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar25)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar26 as *const _ as usize
        },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar26)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar27 as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar27)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar28 as *const _ as usize
        },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar28)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar29 as *const _ as usize
        },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar29)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar30 as *const _ as usize
        },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar30)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar31 as *const _ as usize
        },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar31)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar32 as *const _ as usize
        },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar32)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar33 as *const _ as usize
        },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar33)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar34 as *const _ as usize
        },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar34)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar35 as *const _ as usize
        },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar35)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar36 as *const _ as usize
        },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar36)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar37 as *const _ as usize
        },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar37)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar38 as *const _ as usize
        },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar38)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar39 as *const _ as usize
        },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar39)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar40 as *const _ as usize
        },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar40)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar41 as *const _ as usize
        },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar41)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar42 as *const _ as usize
        },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar42)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar43 as *const _ as usize
        },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar43)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar44 as *const _ as usize
        },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar44)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar45 as *const _ as usize
        },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar45)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar46 as *const _ as usize
        },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar46)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar47 as *const _ as usize
        },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar47)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar48 as *const _ as usize
        },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar48)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar49 as *const _ as usize
        },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar49)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar50 as *const _ as usize
        },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar50)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar51 as *const _ as usize
        },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar51)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_fighter_var>())).charVar52 as *const _ as usize
        },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_fighter_var),
            "::",
            stringify!(charVar52)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_state_var {
    pub stateVar1: ::std::os::raw::c_int,
    pub stateVar2: ::std::os::raw::c_int,
    pub stateVar3: ::std::os::raw::c_int,
    pub stateVar4: ::std::os::raw::c_int,
    pub stateVar5: ::std::os::raw::c_int,
    pub stateVar6: ::std::os::raw::c_int,
    pub stateVar7: ::std::os::raw::c_int,
    pub stateVar8: ::std::os::raw::c_int,
    pub stateVar9: ::std::os::raw::c_int,
    pub stateVar10: ::std::os::raw::c_int,
    pub stateVar11: ::std::os::raw::c_int,
    pub stateVar12: ::std::os::raw::c_int,
    pub stateVar13: ::std::os::raw::c_int,
    pub stateVar14: ::std::os::raw::c_int,
    pub stateVar15: ::std::os::raw::c_int,
    pub stateVar16: ::std::os::raw::c_int,
    pub stateVar17: ::std::os::raw::c_int,
    pub stateVar18: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FighterData_state_var() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_state_var>(),
        72usize,
        concat!("Size of: ", stringify!(FighterData_state_var))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_state_var>(),
        4usize,
        concat!("Alignment of ", stringify!(FighterData_state_var))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_state_var>())).stateVar1 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_state_var>())).stateVar2 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_state_var>())).stateVar3 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_state_var>())).stateVar4 as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_state_var>())).stateVar5 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_state_var>())).stateVar6 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_state_var>())).stateVar7 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_state_var>())).stateVar8 as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_state_var>())).stateVar9 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar9)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_state_var>())).stateVar10 as *const _ as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar10)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_state_var>())).stateVar11 as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar11)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_state_var>())).stateVar12 as *const _ as usize
        },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar12)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_state_var>())).stateVar13 as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar13)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_state_var>())).stateVar14 as *const _ as usize
        },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar14)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_state_var>())).stateVar15 as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar15)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_state_var>())).stateVar16 as *const _ as usize
        },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar16)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_state_var>())).stateVar17 as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar17)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_state_var>())).stateVar18 as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_state_var),
            "::",
            stringify!(stateVar18)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_MEX {
    pub anim_owner: ::std::os::raw::c_int,
    pub kb_abilitysource: *mut GOBJ,
    pub ucf_stickX: [u8_; 3usize],
}
#[test]
fn bindgen_test_layout_FighterData_MEX() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_MEX>(),
        24usize,
        concat!("Size of: ", stringify!(FighterData_MEX))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_MEX>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData_MEX))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_MEX>())).anim_owner as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_MEX),
            "::",
            stringify!(anim_owner)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_MEX>())).kb_abilitysource as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_MEX),
            "::",
            stringify!(kb_abilitysource)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_MEX>())).ucf_stickX as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_MEX),
            "::",
            stringify!(ucf_stickX)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FighterData_TM {
    pub state_frame: s16,
    pub shield_frame: s16,
    pub state_prev: [u16_; 6usize],
    pub state_prev_frames: [u16_; 6usize],
    pub last_move_hurt: u16_,
    pub vuln_frames: u16_,
    pub can_fastfall_frames: u16_,
    pub post_hitstun_frames: ::std::os::raw::c_int,
    pub fighter_hurt_shield: *mut GOBJ,
    pub cb_anim: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_FighterData_TM() {
    assert_eq!(
        ::std::mem::size_of::<FighterData_TM>(),
        56usize,
        concat!("Size of: ", stringify!(FighterData_TM))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData_TM>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData_TM))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_TM>())).state_frame as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_TM),
            "::",
            stringify!(state_frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_TM>())).shield_frame as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_TM),
            "::",
            stringify!(shield_frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_TM>())).state_prev as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_TM),
            "::",
            stringify!(state_prev)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_TM>())).state_prev_frames as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_TM),
            "::",
            stringify!(state_prev_frames)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_TM>())).last_move_hurt as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_TM),
            "::",
            stringify!(last_move_hurt)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_TM>())).vuln_frames as *const _ as usize },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_TM),
            "::",
            stringify!(vuln_frames)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_TM>())).can_fastfall_frames as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_TM),
            "::",
            stringify!(can_fastfall_frames)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_TM>())).post_hitstun_frames as *const _ as usize
        },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_TM),
            "::",
            stringify!(post_hitstun_frames)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData_TM>())).fighter_hurt_shield as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_TM),
            "::",
            stringify!(fighter_hurt_shield)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData_TM>())).cb_anim as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData_TM),
            "::",
            stringify!(cb_anim)
        )
    );
}
#[test]
fn bindgen_test_layout_FighterData() {
    assert_eq!(
        ::std::mem::size_of::<FighterData>(),
        11360usize,
        concat!("Size of: ", stringify!(FighterData))
    );
    assert_eq!(
        ::std::mem::align_of::<FighterData>(),
        8usize,
        concat!("Alignment of ", stringify!(FighterData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).fighter as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(fighter)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).kind as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).spawn_num as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(spawn_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).ply as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(ply)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown as *const _ as usize },
        17usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknownE as *const _ as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknownE)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknownF as *const _ as usize },
        19usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknownF)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).state as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).anim_id as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(anim_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).state_num as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(state_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).common_states as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(common_states)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).special_states as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(special_states)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).anim_flags as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(anim_flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).dynamics_data as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(dynamics_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).facing_direction as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(facing_direction)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData>())).facing_direction_repeated as *const _ as usize
        },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(facing_direction_repeated)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).scale1 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(scale1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).scale2 as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(scale2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).scale3 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(scale3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData>())).pointer_to_next_linked_list as *const _ as usize
        },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(pointer_to_next_linked_list)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData>())).pointer_to_0x40__pointer_to_prev_linked_list
                as *const _ as usize
        },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(pointer_to_0x40__pointer_to_prev_linked_list)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData>())).length_of_linked_list as *const _ as usize
        },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(length_of_linked_list)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown4C as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown4C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown50 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown54 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown58 as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5C as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown60 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown64 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown68 as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6C as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown70 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).phys as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(phys)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).costume_JObjDesc as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(costume_JObjDesc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).costume_archive as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(costume_archive)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).ftData as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(ftData)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).attr as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(attr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown294 as *const _ as usize },
        692usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown294)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown298 as *const _ as usize },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown298)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown29C as *const _ as usize },
        700usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown29C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2A0 as *const _ as usize },
        704usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2A0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2A4 as *const _ as usize },
        708usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2A4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2A8 as *const _ as usize },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2A8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2AC as *const _ as usize },
        716usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2AC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2B0 as *const _ as usize },
        720usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2B0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2B4 as *const _ as usize },
        724usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2B4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2B8 as *const _ as usize },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2B8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2BC as *const _ as usize },
        732usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2BC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2C0 as *const _ as usize },
        736usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2C0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2C4 as *const _ as usize },
        740usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2C4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2C8 as *const _ as usize },
        744usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2C8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2CC as *const _ as usize },
        748usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2CC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2D0 as *const _ as usize },
        752usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2D0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).special_attributes as *const _ as usize },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(special_attributes)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).special_attributes2 as *const _ as usize },
        768usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(special_attributes2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2DC as *const _ as usize },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2DC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2E0 as *const _ as usize },
        780usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2E0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2E4 as *const _ as usize },
        784usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2E4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2E8 as *const _ as usize },
        788usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2E8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown2EC as *const _ as usize },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown2EC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).dynamics_boneset as *const _ as usize },
        800usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(dynamics_boneset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).dynamics_num as *const _ as usize },
        1120usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(dynamics_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).script as *const _ as usize },
        1128usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(script)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unk as *const _ as usize },
        1160usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unk3FC as *const _ as usize },
        1164usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unk3FC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).pointer_to_0x460 as *const _ as usize },
        1168usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(pointer_to_0x460)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).pointer_to_0x3c0 as *const _ as usize },
        1172usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(pointer_to_0x3c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).color as *const _ as usize },
        1176usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(color)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).LObj as *const _ as usize },
        1632usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(LObj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).anim_num as *const _ as usize },
        1640usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(anim_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).anim_curr_flags_ptr as *const _ as usize },
        1648usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(anim_curr_flags_ptr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).anim_curr_flags as *const _ as usize },
        1656usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(anim_curr_flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).anim_requested as *const _ as usize },
        1664usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(anim_requested)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).anim_cache_curr as *const _ as usize },
        1672usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(anim_cache_curr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).anim_cache_persist as *const _ as usize },
        1680usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(anim_cache_persist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).anim_curr_ARAM as *const _ as usize },
        1688usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(anim_curr_ARAM)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).anim_persist_ARAM as *const _ as usize },
        1696usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(anim_persist_ARAM)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).dobj_toggle_num as *const _ as usize },
        1704usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(dobj_toggle_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5B0 as *const _ as usize },
        1708usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5B0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5B4 as *const _ as usize },
        1712usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5B4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5B8 as *const _ as usize },
        1716usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5B8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5BC as *const _ as usize },
        1720usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5BC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5C0 as *const _ as usize },
        1724usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5C0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5C4 as *const _ as usize },
        1728usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5C4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5C8 as *const _ as usize },
        1732usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5C8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5CC as *const _ as usize },
        1736usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5CC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5D0 as *const _ as usize },
        1740usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5D0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5D4 as *const _ as usize },
        1744usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5D4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5D8 as *const _ as usize },
        1748usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5D8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5DC as *const _ as usize },
        1752usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5DC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5E0 as *const _ as usize },
        1756usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5E0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown5E4 as *const _ as usize },
        1760usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown5E4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).bones as *const _ as usize },
        1768usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(bones)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).bone_num as *const _ as usize },
        1776usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(bone_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).bone_arr as *const _ as usize },
        1780usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(bone_arr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).dobj_toggle as *const _ as usize },
        1784usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(dobj_toggle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).gfx as *const _ as usize },
        1808usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(gfx)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown610 as *const _ as usize },
        1816usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown610)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown614 as *const _ as usize },
        1820usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown614)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<FighterData>())).player_controller_number as *const _ as usize
        },
        1824usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(player_controller_number)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).costume_id as *const _ as usize },
        1825usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(costume_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).color_overlay_id as *const _ as usize },
        1826usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(color_overlay_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).team as *const _ as usize },
        1827usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(team)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown61E as *const _ as usize },
        1828usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown61E)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown61F as *const _ as usize },
        1829usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown61F)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).input as *const _ as usize },
        1832usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(input)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).transN_pos as *const _ as usize },
        1940usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(transN_pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).transN_pos_prev as *const _ as usize },
        1952usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(transN_pos_prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).transN_offset as *const _ as usize },
        1964usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(transN_offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).transN_offset_prev as *const _ as usize },
        1976usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(transN_offset_prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).input_stickangle as *const _ as usize },
        1988usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(input_stickangle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6C0 as *const _ as usize },
        1992usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6C0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6C4 as *const _ as usize },
        1996usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6C4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6C8 as *const _ as usize },
        2000usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6C8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6CC as *const _ as usize },
        2004usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6CC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6D0 as *const _ as usize },
        2008usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6D0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6D4 as *const _ as usize },
        2012usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6D4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6D8 as *const _ as usize },
        2016usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6D8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6DC as *const _ as usize },
        2020usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6DC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6E0 as *const _ as usize },
        2024usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6E0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6E4 as *const _ as usize },
        2028usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6E4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6E8 as *const _ as usize },
        2032usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6E8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown6EC as *const _ as usize },
        2036usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown6EC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).coll_data as *const _ as usize },
        2040usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(coll_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).cameraBox as *const _ as usize },
        2496usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(cameraBox)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).stateFrame as *const _ as usize },
        2504usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(stateFrame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unknown898 as *const _ as usize },
        2508usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unknown898)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).stateSpeed as *const _ as usize },
        2512usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(stateSpeed)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8a0 as *const _ as usize },
        2516usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).stateBlend as *const _ as usize },
        2520usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(stateBlend)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8a8 as *const _ as usize },
        2524usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).animSkeleton as *const _ as usize },
        2528usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(animSkeleton)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8b0 as *const _ as usize },
        2536usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8b4 as *const _ as usize },
        2540usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8b8 as *const _ as usize },
        2544usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8bc as *const _ as usize },
        2548usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8c0 as *const _ as usize },
        2552usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8c4 as *const _ as usize },
        2556usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8c8 as *const _ as usize },
        2560usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8cc as *const _ as usize },
        2564usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8d0 as *const _ as usize },
        2568usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8d4 as *const _ as usize },
        2572usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8d8 as *const _ as usize },
        2576usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8dc as *const _ as usize },
        2580usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8e0 as *const _ as usize },
        2584usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8e4 as *const _ as usize },
        2588usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8e8 as *const _ as usize },
        2592usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8ec as *const _ as usize },
        2596usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8f0 as *const _ as usize },
        2600usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8f4 as *const _ as usize },
        2604usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8f8 as *const _ as usize },
        2608usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x8fc as *const _ as usize },
        2612usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x8fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x900 as *const _ as usize },
        2616usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x900)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x904 as *const _ as usize },
        2620usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x904)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x908 as *const _ as usize },
        2624usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x908)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x90c as *const _ as usize },
        2628usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x90c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x910 as *const _ as usize },
        2632usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x910)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).hitbox as *const _ as usize },
        2640usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(hitbox)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).throw_hitbox as *const _ as usize },
        4688usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(throw_hitbox)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).unk_hitbox as *const _ as usize },
        5712usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(unk_hitbox)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).teamID as *const _ as usize },
        6224usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(teamID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).grabbersID as *const _ as usize },
        6225usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(grabbersID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).hurtboxNum as *const _ as usize },
        6226usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(hurtboxNum)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).hurtbox as *const _ as usize },
        6232usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(hurtbox)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1614 as *const _ as usize },
        7432usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1614)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1618 as *const _ as usize },
        7436usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1618)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x161c as *const _ as usize },
        7440usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x161c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1620 as *const _ as usize },
        7444usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1620)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1624 as *const _ as usize },
        7448usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1624)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1628 as *const _ as usize },
        7452usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1628)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x162c as *const _ as usize },
        7456usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x162c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1630 as *const _ as usize },
        7460usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1630)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1634 as *const _ as usize },
        7464usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1634)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1638 as *const _ as usize },
        7468usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1638)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x163c as *const _ as usize },
        7472usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x163c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1640 as *const _ as usize },
        7476usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1640)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1644 as *const _ as usize },
        7480usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1644)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1648 as *const _ as usize },
        7484usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1648)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x164c as *const _ as usize },
        7488usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x164c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1650 as *const _ as usize },
        7492usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1650)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1654 as *const _ as usize },
        7496usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1654)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1658 as *const _ as usize },
        7500usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1658)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x165c as *const _ as usize },
        7504usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x165c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1660 as *const _ as usize },
        7508usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1660)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1664 as *const _ as usize },
        7512usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1664)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1668 as *const _ as usize },
        7516usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1668)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).dynamics_hit_num as *const _ as usize },
        7520usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(dynamics_hit_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).dynamics_hit as *const _ as usize },
        7528usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(dynamics_hit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1828 as *const _ as usize },
        8056usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1828)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).dmg as *const _ as usize },
        8064usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(dmg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1960 as *const _ as usize },
        8384usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1960)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1964 as *const _ as usize },
        8388usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1964)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).jump as *const _ as usize },
        8392usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(jump)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x196c as *const _ as usize },
        8396usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x196c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1970 as *const _ as usize },
        8400usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1970)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).heldItem as *const _ as usize },
        8408usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(heldItem)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1978 as *const _ as usize },
        8416usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1978)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x197c as *const _ as usize },
        8424usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x197c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).headItem as *const _ as usize },
        8432usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(headItem)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).heldItemSpecial as *const _ as usize },
        8440usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(heldItemSpecial)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).hurtstatus as *const _ as usize },
        8448usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(hurtstatus)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).shield as *const _ as usize },
        8464usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(shield)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).shield_bubble as *const _ as usize },
        8512usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(shield_bubble)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).reflect_bubble as *const _ as usize },
        8552usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(reflect_bubble)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).absorb_bubble as *const _ as usize },
        8592usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(absorb_bubble)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).reflect_hit as *const _ as usize },
        8632usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(reflect_hit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).absorb_hit as *const _ as usize },
        8648usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(absorb_hit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).grab as *const _ as usize },
        8664usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(grab)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).cpu as *const _ as usize },
        8736usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(cpu)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1fe0 as *const _ as usize },
        10120usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1fe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1fe4 as *const _ as usize },
        10124usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1fe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1fe8 as *const _ as usize },
        10128usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1fe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1fec as *const _ as usize },
        10132usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1fec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1ff0 as *const _ as usize },
        10136usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1ff0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1ff4 as *const _ as usize },
        10140usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1ff4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1ff8 as *const _ as usize },
        10144usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1ff8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x1ffc as *const _ as usize },
        10148usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x1ffc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2000 as *const _ as usize },
        10152usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2000)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2004 as *const _ as usize },
        10156usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2004)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2008 as *const _ as usize },
        10160usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2008)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x200c as *const _ as usize },
        10164usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x200c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2010 as *const _ as usize },
        10168usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2010)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2014 as *const _ as usize },
        10172usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2014)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2018 as *const _ as usize },
        10176usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2018)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x201c as *const _ as usize },
        10180usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x201c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2020 as *const _ as usize },
        10184usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2020)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2024 as *const _ as usize },
        10188usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2024)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2028 as *const _ as usize },
        10192usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2028)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x202c as *const _ as usize },
        10196usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x202c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2030 as *const _ as usize },
        10200usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2030)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2034 as *const _ as usize },
        10204usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2034)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2038 as *const _ as usize },
        10208usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2038)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x203c as *const _ as usize },
        10212usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x203c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2040 as *const _ as usize },
        10216usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2040)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2044 as *const _ as usize },
        10220usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2044)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2048 as *const _ as usize },
        10224usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2048)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x204c as *const _ as usize },
        10228usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x204c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2050 as *const _ as usize },
        10232usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2050)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2054 as *const _ as usize },
        10236usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2054)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2058 as *const _ as usize },
        10240usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2058)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x205c as *const _ as usize },
        10244usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x205c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2060 as *const _ as usize },
        10248usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2060)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).ledge_cooldown as *const _ as usize },
        10252usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(ledge_cooldown)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).attack_kind as *const _ as usize },
        10256usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(attack_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x206c as *const _ as usize },
        10260usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x206c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2070 as *const _ as usize },
        10264usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2070)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2071 as *const _ as usize },
        10265usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2071)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2072 as *const _ as usize },
        10266usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2072)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2073 as *const _ as usize },
        10267usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2073)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2074 as *const _ as usize },
        10268usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2074)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2078 as *const _ as usize },
        10272usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2078)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x207c as *const _ as usize },
        10276usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x207c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2080 as *const _ as usize },
        10280usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2080)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2084 as *const _ as usize },
        10284usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2084)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).moveID as *const _ as usize },
        10288usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(moveID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x208c as *const _ as usize },
        10292usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x208c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2090 as *const _ as usize },
        10296usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2090)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2094 as *const _ as usize },
        10300usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2094)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2098 as *const _ as usize },
        10304usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2098)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x209c as *const _ as usize },
        10308usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x209c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).accessory as *const _ as usize },
        10312usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(accessory)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x20a4 as *const _ as usize },
        10320usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x20a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).shadow as *const _ as usize },
        10328usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(shadow)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x20ac as *const _ as usize },
        10336usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x20ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).afterimage as *const _ as usize },
        10340usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(afterimage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2104 as *const _ as usize },
        10424usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2108 as *const _ as usize },
        10428usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x210c as *const _ as usize },
        10432usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x210c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2110 as *const _ as usize },
        10436usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).smash as *const _ as usize },
        10440usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(smash)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x213c as *const _ as usize },
        10480usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x213c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2140 as *const _ as usize },
        10484usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2144 as *const _ as usize },
        10488usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2148 as *const _ as usize },
        10492usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x214c as *const _ as usize },
        10496usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x214c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2150 as *const _ as usize },
        10500usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2154 as *const _ as usize },
        10504usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2158 as *const _ as usize },
        10508usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x215c as *const _ as usize },
        10512usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x215c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2160 as *const _ as usize },
        10516usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2164 as *const _ as usize },
        10520usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2168 as *const _ as usize },
        10524usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x216c as *const _ as usize },
        10528usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x216c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2170 as *const _ as usize },
        10532usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2174 as *const _ as usize },
        10536usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2178 as *const _ as usize },
        10540usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x217c as *const _ as usize },
        10544usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x217c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2180 as *const _ as usize },
        10548usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2184 as *const _ as usize },
        10552usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2188 as *const _ as usize },
        10556usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x218c as *const _ as usize },
        10560usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x218c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).cb as *const _ as usize },
        10568usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(cb)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).ftcmd_var as *const _ as usize },
        10788usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(ftcmd_var)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).flags as *const _ as usize },
        10804usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).fighter_var as *const _ as usize },
        10832usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(fighter_var)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x22fc as *const _ as usize },
        11040usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x22fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2300 as *const _ as usize },
        11044usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2300)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2304 as *const _ as usize },
        11048usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2304)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2308 as *const _ as usize },
        11052usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2308)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x230c as *const _ as usize },
        11056usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x230c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2310 as *const _ as usize },
        11060usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2310)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2314 as *const _ as usize },
        11064usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2314)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2318 as *const _ as usize },
        11068usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2318)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x231c as *const _ as usize },
        11072usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x231c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2320 as *const _ as usize },
        11076usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2320)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).stage_internal as *const _ as usize },
        11080usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(stage_internal)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2328 as *const _ as usize },
        11084usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2328)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x232c as *const _ as usize },
        11088usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x232c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2330 as *const _ as usize },
        11092usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2330)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2334 as *const _ as usize },
        11096usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2334)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2338 as *const _ as usize },
        11100usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2338)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x233c as *const _ as usize },
        11104usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x233c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).state_var as *const _ as usize },
        11108usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(state_var)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2388 as *const _ as usize },
        11180usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2388)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x238c as *const _ as usize },
        11184usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x238c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2390 as *const _ as usize },
        11188usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2390)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2394 as *const _ as usize },
        11192usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2394)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x2398 as *const _ as usize },
        11196usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x2398)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x239c as *const _ as usize },
        11200usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x239c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23a0 as *const _ as usize },
        11204usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23a4 as *const _ as usize },
        11208usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23a8 as *const _ as usize },
        11212usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23ac as *const _ as usize },
        11216usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23b0 as *const _ as usize },
        11220usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23b4 as *const _ as usize },
        11224usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23b8 as *const _ as usize },
        11228usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23bc as *const _ as usize },
        11232usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23c0 as *const _ as usize },
        11236usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23c4 as *const _ as usize },
        11240usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23c8 as *const _ as usize },
        11244usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23cc as *const _ as usize },
        11248usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23d0 as *const _ as usize },
        11252usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23d4 as *const _ as usize },
        11256usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23d8 as *const _ as usize },
        11260usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23dc as *const _ as usize },
        11264usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23e0 as *const _ as usize },
        11268usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23e4 as *const _ as usize },
        11272usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).x23e8 as *const _ as usize },
        11276usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(x23e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).MEX as *const _ as usize },
        11280usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(MEX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FighterData>())).TM as *const _ as usize },
        11304usize,
        concat!(
            "Offset of field: ",
            stringify!(FighterData),
            "::",
            stringify!(TM)
        )
    );
}
impl FighterData {
    #[inline]
    pub fn x21fc_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x21fc_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn show_center_sphere(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_center_sphere(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn show_item_pickup(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_item_pickup(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn show_cpu_ai(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_cpu_ai(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn show_footstool(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_footstool(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn show_dynamics(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_dynamics(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn show_hit(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_hit(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn show_model(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_model(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        x21fc_1: ::std::os::raw::c_uchar,
        show_center_sphere: ::std::os::raw::c_uchar,
        show_item_pickup: ::std::os::raw::c_uchar,
        show_cpu_ai: ::std::os::raw::c_uchar,
        show_footstool: ::std::os::raw::c_uchar,
        show_dynamics: ::std::os::raw::c_uchar,
        show_hit: ::std::os::raw::c_uchar,
        show_model: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x21fc_1: u8 = unsafe { ::std::mem::transmute(x21fc_1) };
            x21fc_1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let show_center_sphere: u8 = unsafe { ::std::mem::transmute(show_center_sphere) };
            show_center_sphere as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let show_item_pickup: u8 = unsafe { ::std::mem::transmute(show_item_pickup) };
            show_item_pickup as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let show_cpu_ai: u8 = unsafe { ::std::mem::transmute(show_cpu_ai) };
            show_cpu_ai as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let show_footstool: u8 = unsafe { ::std::mem::transmute(show_footstool) };
            show_footstool as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let show_dynamics: u8 = unsafe { ::std::mem::transmute(show_dynamics) };
            show_dynamics as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let show_hit: u8 = unsafe { ::std::mem::transmute(show_hit) };
            show_hit as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let show_model: u8 = unsafe { ::std::mem::transmute(show_model) };
            show_model as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtParts {
    pub num: ::std::os::raw::c_int,
    pub dobj: *mut *mut DOBJ,
    pub x8: *mut ::std::os::raw::c_void,
    pub xc: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_FtParts() {
    assert_eq!(
        ::std::mem::size_of::<FtParts>(),
        32usize,
        concat!("Size of: ", stringify!(FtParts))
    );
    assert_eq!(
        ::std::mem::align_of::<FtParts>(),
        8usize,
        concat!("Alignment of ", stringify!(FtParts))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtParts>())).num as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtParts),
            "::",
            stringify!(num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtParts>())).dobj as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FtParts),
            "::",
            stringify!(dobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtParts>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FtParts),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtParts>())).xc as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FtParts),
            "::",
            stringify!(xc)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtPartsDesc {
    pub model_num: ::std::os::raw::c_int,
    pub lookups: *mut FtPartsLookup,
}
#[test]
fn bindgen_test_layout_FtPartsDesc() {
    assert_eq!(
        ::std::mem::size_of::<FtPartsDesc>(),
        16usize,
        concat!("Size of: ", stringify!(FtPartsDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<FtPartsDesc>(),
        8usize,
        concat!("Alignment of ", stringify!(FtPartsDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtPartsDesc>())).model_num as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtPartsDesc),
            "::",
            stringify!(model_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtPartsDesc>())).lookups as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FtPartsDesc),
            "::",
            stringify!(lookups)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtDOBJUnk3 {
    pub num: ::std::os::raw::c_int,
    pub x4: *mut FtDOBJUnk2,
}
#[test]
fn bindgen_test_layout_FtDOBJUnk3() {
    assert_eq!(
        ::std::mem::size_of::<FtDOBJUnk3>(),
        16usize,
        concat!("Size of: ", stringify!(FtDOBJUnk3))
    );
    assert_eq!(
        ::std::mem::align_of::<FtDOBJUnk3>(),
        8usize,
        concat!("Alignment of ", stringify!(FtDOBJUnk3))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk3>())).num as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk3),
            "::",
            stringify!(num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk3>())).x4 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk3),
            "::",
            stringify!(x4)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtDOBJUnk2 {
    pub num: ::std::os::raw::c_int,
    pub id: *mut u8_,
}
#[test]
fn bindgen_test_layout_FtDOBJUnk2() {
    assert_eq!(
        ::std::mem::size_of::<FtDOBJUnk2>(),
        16usize,
        concat!("Size of: ", stringify!(FtDOBJUnk2))
    );
    assert_eq!(
        ::std::mem::align_of::<FtDOBJUnk2>(),
        8usize,
        concat!("Alignment of ", stringify!(FtDOBJUnk2))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk2>())).num as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk2),
            "::",
            stringify!(num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk2>())).id as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk2),
            "::",
            stringify!(id)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtPartsLookup {
    pub x0: *mut FtDOBJUnk3,
    pub x4: *mut ::std::os::raw::c_void,
    pub x8: *mut ::std::os::raw::c_void,
    pub xc: *mut ::std::os::raw::c_void,
    pub x10: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_FtPartsLookup() {
    assert_eq!(
        ::std::mem::size_of::<FtPartsLookup>(),
        40usize,
        concat!("Size of: ", stringify!(FtPartsLookup))
    );
    assert_eq!(
        ::std::mem::align_of::<FtPartsLookup>(),
        8usize,
        concat!("Alignment of ", stringify!(FtPartsLookup))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtPartsLookup>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtPartsLookup),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtPartsLookup>())).x4 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FtPartsLookup),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtPartsLookup>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FtPartsLookup),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtPartsLookup>())).xc as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FtPartsLookup),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtPartsLookup>())).x10 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FtPartsLookup),
            "::",
            stringify!(x10)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtDOBJUnk {
    pub num: ::std::os::raw::c_int,
    pub x4: [u8_; 5usize],
    pub xc: *mut FtDOBJUnk3,
    pub x10: *mut ::std::os::raw::c_void,
    pub x14: *mut ::std::os::raw::c_void,
    pub x18: *mut ::std::os::raw::c_void,
    pub x1c: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_FtDOBJUnk() {
    assert_eq!(
        ::std::mem::size_of::<FtDOBJUnk>(),
        56usize,
        concat!("Size of: ", stringify!(FtDOBJUnk))
    );
    assert_eq!(
        ::std::mem::align_of::<FtDOBJUnk>(),
        8usize,
        concat!("Alignment of ", stringify!(FtDOBJUnk))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk>())).num as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk),
            "::",
            stringify!(num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk>())).xc as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk>())).x10 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk>())).x14 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk>())).x18 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtDOBJUnk>())).x1c as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(FtDOBJUnk),
            "::",
            stringify!(x1c)
        )
    );
}
#[doc = " State Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtCliffCatch {
    pub ledge_index: ::std::os::raw::c_int,
    pub fall_timer: f32,
    pub timer: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_FtCliffCatch() {
    assert_eq!(
        ::std::mem::size_of::<FtCliffCatch>(),
        12usize,
        concat!("Size of: ", stringify!(FtCliffCatch))
    );
    assert_eq!(
        ::std::mem::align_of::<FtCliffCatch>(),
        4usize,
        concat!("Alignment of ", stringify!(FtCliffCatch))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtCliffCatch>())).ledge_index as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtCliffCatch),
            "::",
            stringify!(ledge_index)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtCliffCatch>())).fall_timer as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FtCliffCatch),
            "::",
            stringify!(fall_timer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtCliffCatch>())).timer as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FtCliffCatch),
            "::",
            stringify!(timer)
        )
    );
}
extern "C" {
    pub static mut stc_ftcommon: *mut *mut ftCommonData;
}
extern "C" {
    pub static mut stc_shieldcolors: *mut *mut GXColor;
}
extern "C" {
    #[doc = " Functions"]
    pub fn ActionStateChange(
        startFrame: f32,
        animSpeed: f32,
        animBlend: f32,
        fighter: *mut GOBJ,
        stateID: ::std::os::raw::c_int,
        flags1: ::std::os::raw::c_int,
        flags2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Subaction_Update(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_UpdateBonePos(fighter_data: *mut FighterData, unk: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Animation_GetAddress(
        fighter: *mut FighterData,
        animID: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Fighter_GetSubactionHeader(
        fighter: *mut FighterData,
        animID: ::std::os::raw::c_int,
    ) -> *mut SubactionHeader;
}
extern "C" {
    pub fn Animation_GetLength(animAddress: ::std::os::raw::c_int) -> f32;
}
extern "C" {
    pub fn Fighter_EnterLightThrow(fighter: *mut GOBJ, stateID: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fighter_EnterDamageFall(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_EnterWait(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_EnterFall(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_EnterSpecialFall(
        fighter: *mut GOBJ,
        can_fastfall: ::std::os::raw::c_int,
        can_not_noimpactland: ::std::os::raw::c_int,
        can_not_interrupt: ::std::os::raw::c_int,
        aerialDriftMultipler: f32,
        landing_frames: f32,
    );
}
extern "C" {
    pub fn Fighter_EnterLanding(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_EnterSpecialLanding(
        fighter: *mut GOBJ,
        unk: ::std::os::raw::c_int,
        state_length: f32,
    );
}
extern "C" {
    pub fn Fighter_EnterSleep(fighter: *mut GOBJ, ms: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fighter_EnterCliffWait(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_EnterRebirth(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_EnterRebirthWait(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_UpdateRebirthPlatformPos(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_MoveToCliff(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_GetGObj(ply: ::std::os::raw::c_int) -> *mut GOBJ;
}
extern "C" {
    pub fn Fighter_GetSubcharGObj(
        ply: ::std::os::raw::c_int,
        ms: ::std::os::raw::c_int,
    ) -> *mut GOBJ;
}
extern "C" {
    pub fn Fighter_GetPlayerblock(ply: ::std::os::raw::c_int) -> *mut Playerblock;
}
extern "C" {
    pub fn Fighter_SetSlotType(ply: ::std::os::raw::c_int, slot: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fighter_GetControllerPort(ply: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_GetStaleMoveTable(ply: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_SetPosition(
        ply: ::std::os::raw::c_int,
        ms: ::std::os::raw::c_int,
        pos: *mut Vec3,
    );
}
extern "C" {
    pub fn Fighter_ApplyIntang(fighter: *mut GOBJ, duration: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fighter_GetSlotType(index: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_GetStocks(ply: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_SetFallNum(
        index: ::std::os::raw::c_int,
        ms: ::std::os::raw::c_int,
        falls: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fighter_EnableECBBottomUpdate(fighter: *mut FighterData);
}
extern "C" {
    pub fn Fighter_EnterDamageState(fighter: *mut GOBJ, stateID: ::std::os::raw::c_int, frame: f32);
}
extern "C" {
    pub fn Fighter_BoneLookup(
        fighter: *mut FighterData,
        boneID: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_GiveDamage(fighter: *mut FighterData, damage: f32);
}
extern "C" {
    pub fn Fighter_GiveHeal(fighter: *mut FighterData, heal: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fighter_SetHUDDamage(player: ::std::os::raw::c_int, damage: u16_);
}
extern "C" {
    pub fn Fighter_RunOnHitCallbacks(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_SetStocks(ply: ::std::os::raw::c_int, stocks: ::std::os::raw::c_int);
}
extern "C" {
    pub fn FrameTimerCheck(fighter: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_EnterMiscPassState(
        start_frame: f32,
        fighter: *mut GOBJ,
        state: ::std::os::raw::c_int,
        flags: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fighter_CollGround_PassLedge(fighter: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_CollGround_StopLedge(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_CollAir_GrabLedgeWalljump(
        fighter: *mut GOBJ,
        perFrame: *mut ::std::os::raw::c_void,
        onLand: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_CollAir_GrabLedge(
        fighter: *mut GOBJ,
        grab_direction: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_CollAir_IgnoreLedge(fighter: *mut GOBJ, callback: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Fighter_CollAir_IgnoreLedge_NoCB(fighter: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_IASACheck_CliffCatch(fighter: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_IASACheck_JumpAerial(fighter: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_IASACheck_JumpF(fighter: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_IASACheck_PassConditions(fighter: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_IASACheck_Turn(fighter: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_PhysGround_ApplyFriction(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_PhysAir_ApplyGravity(fighter: *mut FighterData, gravity: f32, limit: f32);
}
extern "C" {
    pub fn Fighter_PhysAir_LimitVelocity(fighter: *mut FighterData);
}
extern "C" {
    pub fn Fighter_Phys_UseAnimPos(fighter: *mut FighterData);
}
extern "C" {
    pub fn Fighter_Phys_UseAnimPosAndStick(fighter: *mut FighterData);
}
extern "C" {
    pub fn Fighter_SetGrounded(fighter: *mut FighterData);
}
extern "C" {
    pub fn Fighter_SetGrounded2(fighter: *mut FighterData);
}
extern "C" {
    pub fn Fighter_SetAirborne(fighter: *mut FighterData);
}
extern "C" {
    pub fn Fighter_LoseGroundJump(fighter_data: *mut FighterData);
}
extern "C" {
    pub fn Fighter_EnableCollUpdate(fighter_data: *mut FighterData);
}
extern "C" {
    pub fn Fighter_KillAllVelocity(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_AdvanceScript(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_GFXRemoveAll(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_EnableReflectUpdate(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_CreateReflect(
        fighter: *mut GOBJ,
        reflect: *mut ReflectDesc,
        cb_OnReflectHit: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Fighter_GetBoneRotation(fighter: *mut FighterData, bone: ::std::os::raw::c_int) -> f32;
}
extern "C" {
    pub fn Fighter_RotateBone_Pitch(
        fighter: *mut FighterData,
        bone: ::std::os::raw::c_int,
        angle: f32,
    ) -> f32;
}
extern "C" {
    pub fn Fighter_RotateBone_Yaw(
        fighter: *mut FighterData,
        bone: ::std::os::raw::c_int,
        angle: f32,
    ) -> f32;
}
extern "C" {
    pub fn Fighter_RotateBone_Roll(
        fighter: *mut FighterData,
        bone: ::std::os::raw::c_int,
        angle: f32,
    ) -> f32;
}
extern "C" {
    pub fn Fighter_PlayVoiceSFX(
        fighter: *mut FighterData,
        sfxID: ::std::os::raw::c_int,
        volume: ::std::os::raw::c_int,
        balance: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fighter_ApplyOverlay(
        fighter_data: *mut FighterData,
        overlay: ::std::os::raw::c_int,
        unk: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fighter_UpdateOverlay(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_DisableBlend(fighter: *mut GOBJ, animd_id: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fighter_UpdateDynamics(fighter: *mut GOBJ, dynamic_struct: *mut u16_);
}
extern "C" {
    pub fn Fighter_ZeroCPUInputs(fighter_data: *mut FighterData);
}
extern "C" {
    pub fn Fighter_CreateShieldGFX(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_UpdateShieldGFX(fighter: *mut GOBJ, size: f32);
}
extern "C" {
    pub fn Fighter_GetShieldColorIndex(ply: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_GetExternalID(ply: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_GetCostumeID(ply: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_GetBaseScale(fighter: *mut FighterData) -> f32;
}
extern "C" {
    pub fn Fighter_SetScale(fighter: *mut GOBJ, scale: f32);
}
extern "C" {
    pub fn Fighter_InitDynamics(fighter_data: *mut FighterData);
}
extern "C" {
    pub fn Fighter_ProcDynamics(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_GetKnockbackAngle(fighter_data: *mut FighterData) -> f32;
}
extern "C" {
    pub fn Fighter_UpdateCameraBox(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_SetAllHurtboxesNotUpdated(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_UpdateHurtboxes(fighter_data: *mut FighterData);
}
extern "C" {
    pub fn Fighter_UpdateIK(fighter: *mut GOBJ);
}
extern "C" {
    pub fn Fighter_ColorRemove(fighter_data: *mut FighterData, color_kind: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Fighter_CPUInitialize(
        fighter_data: *mut FighterData,
        cpu_kind: ::std::os::raw::c_int,
        cpu_level: ::std::os::raw::c_int,
        unk: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Fighter_GetCPUKind(ply: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_GetCPULevel(ply: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_GetName(external_id: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn Fighter_InitPObj();
}
extern "C" {
    pub fn Fighter_InitPObj2();
}
extern "C" {
    pub fn Fighter_IndexFtPartsDObjs(
        fighter: *mut GOBJ,
        copy_model: *mut JOBJ,
        ftparts: *mut FtParts,
    );
}
extern "C" {
    pub fn Fighter_InitFtPartsModel(
        ftpartsdesc: *mut FtPartsDesc,
        unk: *mut FtDOBJUnk,
        index: ::std::os::raw::c_int,
        ftparts: *mut FtParts,
        ftparts2: *mut FtParts,
    );
}
extern "C" {
    pub fn Fighter_CheckUnlocked(ext_id: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Fighter_UpdateOnscreenBool(fighter: *mut GOBJ);
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MatchInit {
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 6usize], u8>,
    pub bombRain: u8_,
    pub unk13: u8_,
    pub isTeams: u8_,
    pub isKOCounterActive: u8_,
    pub unk14: u8_,
    pub itemFreq: u8_,
    pub unk15: u8_,
    pub unk16: u8_,
    pub stage: u16_,
    pub _bitfield_2: __BindgenBitfieldUnit<[u8; 4usize], u32>,
    pub timerSubSeconds: u8_,
    pub unk17: ::std::os::raw::c_int,
    pub _bitfield_3: __BindgenBitfieldUnit<[u8; 8usize], u64>,
    pub unk18: ::std::os::raw::c_int,
    pub cameraShakeMult: f32,
    pub unk19: f32,
    pub unk20: f32,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3c: ::std::os::raw::c_int,
    pub onStartMelee: *mut ::std::os::raw::c_void,
    pub unk21: ::std::os::raw::c_int,
    pub onCheckPause: *mut ::std::os::raw::c_void,
    pub unk22: ::std::os::raw::c_int,
    pub onMatchFrame1: *mut ::std::os::raw::c_void,
    pub onMatchFrame2: *mut ::std::os::raw::c_void,
    pub onMatchEnd: *mut ::std::os::raw::c_void,
    pub playerData: [PlayerData; 6usize],
}
#[test]
fn bindgen_test_layout_MatchInit() {
    assert_eq!(
        ::std::mem::size_of::<MatchInit>(),
        344usize,
        concat!("Size of: ", stringify!(MatchInit))
    );
    assert_eq!(
        ::std::mem::align_of::<MatchInit>(),
        8usize,
        concat!("Alignment of ", stringify!(MatchInit))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).bombRain as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(bombRain)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).unk13 as *const _ as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(unk13)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).isTeams as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(isTeams)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).isKOCounterActive as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(isKOCounterActive)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).unk14 as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(unk14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).itemFreq as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(itemFreq)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).unk15 as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(unk15)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).unk16 as *const _ as usize },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(unk16)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).stage as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(stage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).timerSubSeconds as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(timerSubSeconds)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).unk17 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(unk17)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).unk18 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(unk18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).cameraShakeMult as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(cameraShakeMult)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).unk19 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(unk19)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).unk20 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(unk20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).x34 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).x38 as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).x3c as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).onStartMelee as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(onStartMelee)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).unk21 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(unk21)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).onCheckPause as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(onCheckPause)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).unk22 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(unk22)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).onMatchFrame1 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(onMatchFrame1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).onMatchFrame2 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(onMatchFrame2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).onMatchEnd as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(onMatchEnd)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchInit>())).playerData as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchInit),
            "::",
            stringify!(playerData)
        )
    );
}
impl MatchInit {
    #[inline]
    pub fn matchType(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 3u8) as u8) }
    }
    #[inline]
    pub fn set_matchType(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 3u8, val as u64)
        }
    }
    #[inline]
    pub fn hudPos(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 3u8) as u8) }
    }
    #[inline]
    pub fn set_hudPos(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 3u8, val as u64)
        }
    }
    #[inline]
    pub fn timer(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 2u8) as u8) }
    }
    #[inline]
    pub fn set_timer(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 2u8, val as u64)
        }
    }
    #[inline]
    pub fn timer_unk2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(8usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_timer_unk2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(8usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(9usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_unk4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(9usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hideReady(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(10usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hideReady(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(10usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hideGo(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(11usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hideGo(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(11usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isDisableMusic(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(12usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isDisableMusic(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(12usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(13usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_unk3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(13usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn timer_unk(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(14usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_timer_unk(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(14usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(15usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_unk2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(15usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk9(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(16usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_unk9(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(16usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn disableOffscreenDamage(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(17usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_disableOffscreenDamage(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(17usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(18usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_unk8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(18usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isSingleButtonMode(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(19usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isSingleButtonMode(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(19usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isDisablePause(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(20usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isDisablePause(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(20usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(21usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_unk7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(21usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isCreateHUD(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(22usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isCreateHUD(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(22usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(23usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_unk5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(23usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isShowScore(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(24usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isShowScore(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(24usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isShowAnalogStick(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(25usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isShowAnalogStick(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(25usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isCheckForZRetry(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(26usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isCheckForZRetry(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(26usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isShowZRetry(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(27usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isShowZRetry(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(27usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isCheckForLRAStart(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(28usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isCheckForLRAStart(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(28usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isShowLRAStart(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(29usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isShowLRAStart(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(29usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isHidePauseHUD(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(30usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isHidePauseHUD(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(30usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn timerRunOnPause(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(31usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_timerRunOnPause(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(31usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk11(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(32usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_unk11(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(32usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isCheckStockSteal(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(33usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isCheckStockSteal(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(33usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isRunStockLogic(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(34usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isRunStockLogic(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(34usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk10(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(35usize, 5u8) as u8) }
    }
    #[inline]
    pub fn set_unk10(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(35usize, 5u8, val as u64)
        }
    }
    #[inline]
    pub fn isSkipEndCheck(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(40usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isSkipEndCheck(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(40usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isSkipUnkStockCheck(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(41usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isSkipUnkStockCheck(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(41usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isDisableHit(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(42usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isDisableHit(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(42usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn unk12(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(43usize, 5u8) as u8) }
    }
    #[inline]
    pub fn set_unk12(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(43usize, 5u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        matchType: ::std::os::raw::c_uchar,
        hudPos: ::std::os::raw::c_uchar,
        timer: ::std::os::raw::c_uchar,
        timer_unk2: ::std::os::raw::c_uchar,
        unk4: ::std::os::raw::c_uchar,
        hideReady: ::std::os::raw::c_uchar,
        hideGo: ::std::os::raw::c_uchar,
        isDisableMusic: ::std::os::raw::c_uchar,
        unk3: ::std::os::raw::c_uchar,
        timer_unk: ::std::os::raw::c_uchar,
        unk2: ::std::os::raw::c_uchar,
        unk9: ::std::os::raw::c_uchar,
        disableOffscreenDamage: ::std::os::raw::c_uchar,
        unk8: ::std::os::raw::c_uchar,
        isSingleButtonMode: ::std::os::raw::c_uchar,
        isDisablePause: ::std::os::raw::c_uchar,
        unk7: ::std::os::raw::c_uchar,
        isCreateHUD: ::std::os::raw::c_uchar,
        unk5: ::std::os::raw::c_uchar,
        isShowScore: ::std::os::raw::c_uchar,
        isShowAnalogStick: ::std::os::raw::c_uchar,
        isCheckForZRetry: ::std::os::raw::c_uchar,
        isShowZRetry: ::std::os::raw::c_uchar,
        isCheckForLRAStart: ::std::os::raw::c_uchar,
        isShowLRAStart: ::std::os::raw::c_uchar,
        isHidePauseHUD: ::std::os::raw::c_uchar,
        timerRunOnPause: ::std::os::raw::c_uchar,
        unk11: ::std::os::raw::c_uchar,
        isCheckStockSteal: ::std::os::raw::c_uchar,
        isRunStockLogic: ::std::os::raw::c_uchar,
        unk10: ::std::os::raw::c_uchar,
        isSkipEndCheck: ::std::os::raw::c_uchar,
        isSkipUnkStockCheck: ::std::os::raw::c_uchar,
        isDisableHit: ::std::os::raw::c_uchar,
        unk12: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 6usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 6usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 3u8, {
            let matchType: u8 = unsafe { ::std::mem::transmute(matchType) };
            matchType as u64
        });
        __bindgen_bitfield_unit.set(3usize, 3u8, {
            let hudPos: u8 = unsafe { ::std::mem::transmute(hudPos) };
            hudPos as u64
        });
        __bindgen_bitfield_unit.set(6usize, 2u8, {
            let timer: u8 = unsafe { ::std::mem::transmute(timer) };
            timer as u64
        });
        __bindgen_bitfield_unit.set(8usize, 1u8, {
            let timer_unk2: u8 = unsafe { ::std::mem::transmute(timer_unk2) };
            timer_unk2 as u64
        });
        __bindgen_bitfield_unit.set(9usize, 1u8, {
            let unk4: u8 = unsafe { ::std::mem::transmute(unk4) };
            unk4 as u64
        });
        __bindgen_bitfield_unit.set(10usize, 1u8, {
            let hideReady: u8 = unsafe { ::std::mem::transmute(hideReady) };
            hideReady as u64
        });
        __bindgen_bitfield_unit.set(11usize, 1u8, {
            let hideGo: u8 = unsafe { ::std::mem::transmute(hideGo) };
            hideGo as u64
        });
        __bindgen_bitfield_unit.set(12usize, 1u8, {
            let isDisableMusic: u8 = unsafe { ::std::mem::transmute(isDisableMusic) };
            isDisableMusic as u64
        });
        __bindgen_bitfield_unit.set(13usize, 1u8, {
            let unk3: u8 = unsafe { ::std::mem::transmute(unk3) };
            unk3 as u64
        });
        __bindgen_bitfield_unit.set(14usize, 1u8, {
            let timer_unk: u8 = unsafe { ::std::mem::transmute(timer_unk) };
            timer_unk as u64
        });
        __bindgen_bitfield_unit.set(15usize, 1u8, {
            let unk2: u8 = unsafe { ::std::mem::transmute(unk2) };
            unk2 as u64
        });
        __bindgen_bitfield_unit.set(16usize, 1u8, {
            let unk9: u8 = unsafe { ::std::mem::transmute(unk9) };
            unk9 as u64
        });
        __bindgen_bitfield_unit.set(17usize, 1u8, {
            let disableOffscreenDamage: u8 =
                unsafe { ::std::mem::transmute(disableOffscreenDamage) };
            disableOffscreenDamage as u64
        });
        __bindgen_bitfield_unit.set(18usize, 1u8, {
            let unk8: u8 = unsafe { ::std::mem::transmute(unk8) };
            unk8 as u64
        });
        __bindgen_bitfield_unit.set(19usize, 1u8, {
            let isSingleButtonMode: u8 = unsafe { ::std::mem::transmute(isSingleButtonMode) };
            isSingleButtonMode as u64
        });
        __bindgen_bitfield_unit.set(20usize, 1u8, {
            let isDisablePause: u8 = unsafe { ::std::mem::transmute(isDisablePause) };
            isDisablePause as u64
        });
        __bindgen_bitfield_unit.set(21usize, 1u8, {
            let unk7: u8 = unsafe { ::std::mem::transmute(unk7) };
            unk7 as u64
        });
        __bindgen_bitfield_unit.set(22usize, 1u8, {
            let isCreateHUD: u8 = unsafe { ::std::mem::transmute(isCreateHUD) };
            isCreateHUD as u64
        });
        __bindgen_bitfield_unit.set(23usize, 1u8, {
            let unk5: u8 = unsafe { ::std::mem::transmute(unk5) };
            unk5 as u64
        });
        __bindgen_bitfield_unit.set(24usize, 1u8, {
            let isShowScore: u8 = unsafe { ::std::mem::transmute(isShowScore) };
            isShowScore as u64
        });
        __bindgen_bitfield_unit.set(25usize, 1u8, {
            let isShowAnalogStick: u8 = unsafe { ::std::mem::transmute(isShowAnalogStick) };
            isShowAnalogStick as u64
        });
        __bindgen_bitfield_unit.set(26usize, 1u8, {
            let isCheckForZRetry: u8 = unsafe { ::std::mem::transmute(isCheckForZRetry) };
            isCheckForZRetry as u64
        });
        __bindgen_bitfield_unit.set(27usize, 1u8, {
            let isShowZRetry: u8 = unsafe { ::std::mem::transmute(isShowZRetry) };
            isShowZRetry as u64
        });
        __bindgen_bitfield_unit.set(28usize, 1u8, {
            let isCheckForLRAStart: u8 = unsafe { ::std::mem::transmute(isCheckForLRAStart) };
            isCheckForLRAStart as u64
        });
        __bindgen_bitfield_unit.set(29usize, 1u8, {
            let isShowLRAStart: u8 = unsafe { ::std::mem::transmute(isShowLRAStart) };
            isShowLRAStart as u64
        });
        __bindgen_bitfield_unit.set(30usize, 1u8, {
            let isHidePauseHUD: u8 = unsafe { ::std::mem::transmute(isHidePauseHUD) };
            isHidePauseHUD as u64
        });
        __bindgen_bitfield_unit.set(31usize, 1u8, {
            let timerRunOnPause: u8 = unsafe { ::std::mem::transmute(timerRunOnPause) };
            timerRunOnPause as u64
        });
        __bindgen_bitfield_unit.set(32usize, 1u8, {
            let unk11: u8 = unsafe { ::std::mem::transmute(unk11) };
            unk11 as u64
        });
        __bindgen_bitfield_unit.set(33usize, 1u8, {
            let isCheckStockSteal: u8 = unsafe { ::std::mem::transmute(isCheckStockSteal) };
            isCheckStockSteal as u64
        });
        __bindgen_bitfield_unit.set(34usize, 1u8, {
            let isRunStockLogic: u8 = unsafe { ::std::mem::transmute(isRunStockLogic) };
            isRunStockLogic as u64
        });
        __bindgen_bitfield_unit.set(35usize, 5u8, {
            let unk10: u8 = unsafe { ::std::mem::transmute(unk10) };
            unk10 as u64
        });
        __bindgen_bitfield_unit.set(40usize, 1u8, {
            let isSkipEndCheck: u8 = unsafe { ::std::mem::transmute(isSkipEndCheck) };
            isSkipEndCheck as u64
        });
        __bindgen_bitfield_unit.set(41usize, 1u8, {
            let isSkipUnkStockCheck: u8 = unsafe { ::std::mem::transmute(isSkipUnkStockCheck) };
            isSkipUnkStockCheck as u64
        });
        __bindgen_bitfield_unit.set(42usize, 1u8, {
            let isDisableHit: u8 = unsafe { ::std::mem::transmute(isDisableHit) };
            isDisableHit as u64
        });
        __bindgen_bitfield_unit.set(43usize, 5u8, {
            let unk12: u8 = unsafe { ::std::mem::transmute(unk12) };
            unk12 as u64
        });
        __bindgen_bitfield_unit
    }
    #[inline]
    pub fn timerSeconds(&self) -> ::std::os::raw::c_int {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(0usize, 32u8) as u32) }
    }
    #[inline]
    pub fn set_timerSeconds(&mut self, val: ::std::os::raw::c_int) {
        unsafe {
            let val: u32 = ::std::mem::transmute(val);
            self._bitfield_2.set(0usize, 32u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_2(
        timerSeconds: ::std::os::raw::c_int,
    ) -> __BindgenBitfieldUnit<[u8; 4usize], u32> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 4usize], u32> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 32u8, {
            let timerSeconds: u32 = unsafe { ::std::mem::transmute(timerSeconds) };
            timerSeconds as u64
        });
        __bindgen_bitfield_unit
    }
    #[inline]
    pub fn itemSwitch(&self) -> ::std::os::raw::c_ulonglong {
        unsafe { ::std::mem::transmute(self._bitfield_3.get(0usize, 64u8) as u64) }
    }
    #[inline]
    pub fn set_itemSwitch(&mut self, val: ::std::os::raw::c_ulonglong) {
        unsafe {
            let val: u64 = ::std::mem::transmute(val);
            self._bitfield_3.set(0usize, 64u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_3(
        itemSwitch: ::std::os::raw::c_ulonglong,
    ) -> __BindgenBitfieldUnit<[u8; 8usize], u64> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 8usize], u64> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 64u8, {
            let itemSwitch: u64 = unsafe { ::std::mem::transmute(itemSwitch) };
            itemSwitch as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MatchHUD {
    pub percent: *mut GOBJ,
    pub insignia: *mut GOBJ,
    pub x8: u8_,
    pub x9: u8_,
    pub xa: u16_,
    pub xc: u16_,
    pub xe: u8_,
    pub xf: u8_,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub x11: u8_,
    pub x12: u8_,
    pub x13: u8_,
    pub x14: [f32; 3usize],
    pub percent_digitpos: [f32; 4usize],
    pub x34: [::std::os::raw::c_int; 8usize],
    pub x54: [*mut JOBJ; 5usize],
}
#[test]
fn bindgen_test_layout_MatchHUD() {
    assert_eq!(
        ::std::mem::size_of::<MatchHUD>(),
        128usize,
        concat!("Size of: ", stringify!(MatchHUD))
    );
    assert_eq!(
        ::std::mem::align_of::<MatchHUD>(),
        8usize,
        concat!("Alignment of ", stringify!(MatchHUD))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).percent as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(percent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).insignia as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(insignia)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).x9 as *const _ as usize },
        17usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(x9)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).xa as *const _ as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(xa)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).xc as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).xe as *const _ as usize },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(xe)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).xf as *const _ as usize },
        23usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(xf)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).x11 as *const _ as usize },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(x11)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).x12 as *const _ as usize },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(x12)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).x13 as *const _ as usize },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(x13)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).x14 as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).percent_digitpos as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(percent_digitpos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).x34 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchHUD>())).x54 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchHUD),
            "::",
            stringify!(x54)
        )
    );
}
impl MatchHUD {
    #[inline]
    pub fn is_removed(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_removed(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x10_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x10_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x10_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x10_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x10_4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x10_4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x10_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x10_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x10_6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x10_6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x10_7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x10_7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x10_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x10_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        is_removed: ::std::os::raw::c_uchar,
        x10_2: ::std::os::raw::c_uchar,
        x10_3: ::std::os::raw::c_uchar,
        x10_4: ::std::os::raw::c_uchar,
        x10_5: ::std::os::raw::c_uchar,
        x10_6: ::std::os::raw::c_uchar,
        x10_7: ::std::os::raw::c_uchar,
        x10_8: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let is_removed: u8 = unsafe { ::std::mem::transmute(is_removed) };
            is_removed as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x10_2: u8 = unsafe { ::std::mem::transmute(x10_2) };
            x10_2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let x10_3: u8 = unsafe { ::std::mem::transmute(x10_3) };
            x10_3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let x10_4: u8 = unsafe { ::std::mem::transmute(x10_4) };
            x10_4 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let x10_5: u8 = unsafe { ::std::mem::transmute(x10_5) };
            x10_5 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let x10_6: u8 = unsafe { ::std::mem::transmute(x10_6) };
            x10_6 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let x10_7: u8 = unsafe { ::std::mem::transmute(x10_7) };
            x10_7 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let x10_8: u8 = unsafe { ::std::mem::transmute(x10_8) };
            x10_8 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CameraBox {
    pub alloc: *mut ::std::os::raw::c_void,
    pub next: *mut CameraBox,
    pub kind: ::std::os::raw::c_int,
    pub flags: ::std::os::raw::c_int,
    pub cam_pos: Vec3,
    pub bone_pos: Vec3,
    pub direction: f32,
    pub boundleft_curr: f32,
    pub boundright_curr: f32,
    pub boundtop_curr: f32,
    pub boundbottom_curr: f32,
    pub x3c: f32,
    pub boundleft_proj: f32,
    pub boundright_proj: f32,
    pub boundtop_proj: f32,
    pub boundbottom_proj: f32,
}
#[test]
fn bindgen_test_layout_CameraBox() {
    assert_eq!(
        ::std::mem::size_of::<CameraBox>(),
        88usize,
        concat!("Size of: ", stringify!(CameraBox))
    );
    assert_eq!(
        ::std::mem::align_of::<CameraBox>(),
        8usize,
        concat!("Alignment of ", stringify!(CameraBox))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).alloc as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(alloc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).next as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).kind as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).flags as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).cam_pos as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(cam_pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).bone_pos as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(bone_pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).direction as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(direction)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).boundleft_curr as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(boundleft_curr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).boundright_curr as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(boundright_curr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).boundtop_curr as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(boundtop_curr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).boundbottom_curr as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(boundbottom_curr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).x3c as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).boundleft_proj as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(boundleft_proj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).boundright_proj as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(boundright_proj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).boundtop_proj as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(boundtop_proj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CameraBox>())).boundbottom_proj as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(CameraBox),
            "::",
            stringify!(boundbottom_proj)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MatchCamera {
    pub x0: ::std::os::raw::c_int,
    pub cam_kind: ::std::os::raw::c_int,
    pub x8: ::std::os::raw::c_int,
    pub xc: ::std::os::raw::c_int,
    pub x10: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_int,
    pub x28: ::std::os::raw::c_int,
    pub x2c: ::std::os::raw::c_int,
    pub x30: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3c: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4c: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8c: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa4: ::std::os::raw::c_int,
    pub xa8: ::std::os::raw::c_int,
    pub xac: ::std::os::raw::c_int,
    pub xb0: ::std::os::raw::c_int,
    pub xb4: ::std::os::raw::c_int,
    pub xb8: ::std::os::raw::c_int,
    pub xbc: ::std::os::raw::c_int,
    pub xc0: ::std::os::raw::c_int,
    pub xc4: ::std::os::raw::c_int,
    pub xc8: ::std::os::raw::c_int,
    pub xcc: ::std::os::raw::c_int,
    pub xd0: ::std::os::raw::c_int,
    pub xd4: ::std::os::raw::c_int,
    pub xd8: ::std::os::raw::c_int,
    pub xdc: ::std::os::raw::c_int,
    pub xe0: ::std::os::raw::c_int,
    pub xe4: ::std::os::raw::c_int,
    pub xe8: ::std::os::raw::c_int,
    pub xec: ::std::os::raw::c_int,
    pub xf0: ::std::os::raw::c_int,
    pub xf4: ::std::os::raw::c_int,
    pub xf8: ::std::os::raw::c_int,
    pub xfc: ::std::os::raw::c_int,
    pub x100: ::std::os::raw::c_int,
    pub x104: ::std::os::raw::c_int,
    pub x108: ::std::os::raw::c_int,
    pub x10c: ::std::os::raw::c_int,
    pub x110: ::std::os::raw::c_int,
    pub x114: ::std::os::raw::c_int,
    pub x118: ::std::os::raw::c_int,
    pub x11c: ::std::os::raw::c_int,
    pub x120: ::std::os::raw::c_int,
    pub x124: ::std::os::raw::c_int,
    pub x128: ::std::os::raw::c_int,
    pub x12c: ::std::os::raw::c_int,
    pub x130: ::std::os::raw::c_int,
    pub x134: ::std::os::raw::c_int,
    pub x138: ::std::os::raw::c_int,
    pub x13c: ::std::os::raw::c_int,
    pub x140: ::std::os::raw::c_int,
    pub x144: ::std::os::raw::c_int,
    pub x148: ::std::os::raw::c_int,
    pub x14c: ::std::os::raw::c_int,
    pub x150: ::std::os::raw::c_int,
    pub x154: ::std::os::raw::c_int,
    pub x158: ::std::os::raw::c_int,
    pub x15c: ::std::os::raw::c_int,
    pub x160: ::std::os::raw::c_int,
    pub x164: ::std::os::raw::c_int,
    pub x168: ::std::os::raw::c_int,
    pub x16c: ::std::os::raw::c_int,
    pub x170: ::std::os::raw::c_int,
    pub x174: ::std::os::raw::c_int,
    pub x178: ::std::os::raw::c_int,
    pub x17c: ::std::os::raw::c_int,
    pub x180: ::std::os::raw::c_int,
    pub x184: ::std::os::raw::c_int,
    pub x188: ::std::os::raw::c_int,
    pub x18c: ::std::os::raw::c_int,
    pub x190: ::std::os::raw::c_int,
    pub x194: ::std::os::raw::c_int,
    pub x198: ::std::os::raw::c_int,
    pub x19c: ::std::os::raw::c_int,
    pub x1a0: ::std::os::raw::c_int,
    pub x1a4: ::std::os::raw::c_int,
    pub x1a8: ::std::os::raw::c_int,
    pub x1ac: ::std::os::raw::c_int,
    pub x1b0: ::std::os::raw::c_int,
    pub x1b4: ::std::os::raw::c_int,
    pub x1b8: ::std::os::raw::c_int,
    pub x1bc: ::std::os::raw::c_int,
    pub x1c0: ::std::os::raw::c_int,
    pub x1c4: ::std::os::raw::c_int,
    pub x1c8: ::std::os::raw::c_int,
    pub x1cc: ::std::os::raw::c_int,
    pub x1d0: ::std::os::raw::c_int,
    pub x1d4: ::std::os::raw::c_int,
    pub x1d8: ::std::os::raw::c_int,
    pub x1dc: ::std::os::raw::c_int,
    pub x1e0: ::std::os::raw::c_int,
    pub x1e4: ::std::os::raw::c_int,
    pub x1e8: ::std::os::raw::c_int,
    pub x1ec: ::std::os::raw::c_int,
    pub x1f0: ::std::os::raw::c_int,
    pub x1f4: ::std::os::raw::c_int,
    pub x1f8: ::std::os::raw::c_int,
    pub x1fc: ::std::os::raw::c_int,
    pub x200: ::std::os::raw::c_int,
    pub x204: ::std::os::raw::c_int,
    pub x208: ::std::os::raw::c_int,
    pub x20c: ::std::os::raw::c_int,
    pub x210: ::std::os::raw::c_int,
    pub x214: ::std::os::raw::c_int,
    pub x218: ::std::os::raw::c_int,
    pub x21c: ::std::os::raw::c_int,
    pub x220: ::std::os::raw::c_int,
    pub x224: ::std::os::raw::c_int,
    pub x228: ::std::os::raw::c_int,
    pub x22c: ::std::os::raw::c_int,
    pub x230: ::std::os::raw::c_int,
    pub x234: ::std::os::raw::c_int,
    pub x238: ::std::os::raw::c_int,
    pub x23c: ::std::os::raw::c_int,
    pub x240: ::std::os::raw::c_int,
    pub x244: ::std::os::raw::c_int,
    pub x248: ::std::os::raw::c_int,
    pub x24c: ::std::os::raw::c_int,
    pub x250: ::std::os::raw::c_int,
    pub x254: ::std::os::raw::c_int,
    pub x258: ::std::os::raw::c_int,
    pub x25c: ::std::os::raw::c_int,
    pub x260: ::std::os::raw::c_int,
    pub x264: ::std::os::raw::c_int,
    pub x268: ::std::os::raw::c_int,
    pub x26c: ::std::os::raw::c_int,
    pub x270: ::std::os::raw::c_int,
    pub x274: ::std::os::raw::c_int,
    pub x278: ::std::os::raw::c_int,
    pub x27c: ::std::os::raw::c_int,
    pub x280: ::std::os::raw::c_int,
    pub x284: ::std::os::raw::c_int,
    pub x288: ::std::os::raw::c_int,
    pub x28c: ::std::os::raw::c_int,
    pub x290: ::std::os::raw::c_int,
    pub x294: ::std::os::raw::c_int,
    pub x298: ::std::os::raw::c_int,
    pub x29c: ::std::os::raw::c_int,
    pub x2a0: ::std::os::raw::c_int,
    pub x2a4: ::std::os::raw::c_int,
    pub x2a8: ::std::os::raw::c_int,
    pub x2ac: ::std::os::raw::c_int,
    pub x2b0: ::std::os::raw::c_int,
    pub x2b4: ::std::os::raw::c_int,
    pub x2b8: ::std::os::raw::c_int,
    pub x2bc: ::std::os::raw::c_int,
    pub x2c0: ::std::os::raw::c_int,
    pub x2c4: ::std::os::raw::c_int,
    pub x2c8: ::std::os::raw::c_int,
    pub x2cc: ::std::os::raw::c_int,
    pub x2d0: ::std::os::raw::c_int,
    pub x2d4: ::std::os::raw::c_int,
    pub x2d8: ::std::os::raw::c_int,
    pub x2dc: ::std::os::raw::c_int,
    pub x2e0: ::std::os::raw::c_int,
    pub x2e4: ::std::os::raw::c_int,
    pub x2e8: ::std::os::raw::c_int,
    pub freecam_tilt_vertical: f32,
    pub x2f0: ::std::os::raw::c_int,
    pub x2f4: ::std::os::raw::c_int,
    pub freecam_zoommax: f32,
    pub freecam_zoommin: f32,
    pub x300: ::std::os::raw::c_int,
    pub x304: ::std::os::raw::c_int,
    pub freecam_pos: Vec3,
    pub freecam_offset: Vec3,
    pub freecam_rotate: Vec2,
    pub freecam_fov: Vec3,
    pub x334: ::std::os::raw::c_int,
    pub x338: ::std::os::raw::c_int,
    pub x33c: ::std::os::raw::c_int,
    pub x340: ::std::os::raw::c_int,
    pub x344: ::std::os::raw::c_int,
    pub x348: ::std::os::raw::c_int,
    pub x34c: ::std::os::raw::c_int,
    pub x350: ::std::os::raw::c_int,
    pub x354: ::std::os::raw::c_int,
    pub x358: ::std::os::raw::c_int,
    pub x35c: ::std::os::raw::c_int,
    pub x360: ::std::os::raw::c_int,
    pub x364: ::std::os::raw::c_int,
    pub x368: ::std::os::raw::c_int,
    pub x36c: ::std::os::raw::c_int,
    pub x370: ::std::os::raw::c_int,
    pub x374: ::std::os::raw::c_int,
    pub x378: ::std::os::raw::c_int,
    pub x37c: ::std::os::raw::c_int,
    pub x380: ::std::os::raw::c_int,
    pub x384: ::std::os::raw::c_int,
    pub x388: ::std::os::raw::c_int,
    pub x38c: ::std::os::raw::c_int,
    pub x390: ::std::os::raw::c_int,
    pub x394: ::std::os::raw::c_int,
    pub x398: ::std::os::raw::c_char,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub x39a: ::std::os::raw::c_char,
    pub x39b: ::std::os::raw::c_char,
    pub x39c: ::std::os::raw::c_int,
    pub x3a0: ::std::os::raw::c_int,
    pub x3a4: ::std::os::raw::c_int,
    pub x3a8: ::std::os::raw::c_int,
    pub x3ac: ::std::os::raw::c_int,
    pub x3b0: ::std::os::raw::c_int,
    pub x3b4: ::std::os::raw::c_int,
    pub x3b8: ::std::os::raw::c_int,
    pub x3bc: ::std::os::raw::c_int,
    pub x3c0: ::std::os::raw::c_int,
    pub x3c4: ::std::os::raw::c_int,
    pub x3c8: ::std::os::raw::c_int,
    pub x3cc: ::std::os::raw::c_int,
    pub x3d0: ::std::os::raw::c_int,
    pub x3d4: ::std::os::raw::c_int,
    pub devcam_pos: Vec3,
    pub devcam_rot: Vec3,
    pub devcam_fov: f32,
    pub x3f4: ::std::os::raw::c_int,
    pub x3f8: ::std::os::raw::c_int,
    pub x3fc: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_MatchCamera() {
    assert_eq!(
        ::std::mem::size_of::<MatchCamera>(),
        1024usize,
        concat!("Size of: ", stringify!(MatchCamera))
    );
    assert_eq!(
        ::std::mem::align_of::<MatchCamera>(),
        4usize,
        concat!("Alignment of ", stringify!(MatchCamera))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).cam_kind as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(cam_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x10 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x14 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x18 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1c as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x20 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x24 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x28 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2c as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x30 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x34 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x38 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x40 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x44 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x48 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x4c as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x50 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x54 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x58 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x5c as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x60 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x64 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x68 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x6c as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x70 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x74 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x78 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x7c as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x80 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x84 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x88 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x8c as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x90 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x94 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x98 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x9c as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xa0 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xa4 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xa8 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xac as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xb0 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xb4 as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xb8 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xbc as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xc0 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xc4 as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xc8 as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xcc as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xd0 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xd4 as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xd8 as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xdc as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xe0 as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xe4 as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xe8 as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xec as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xf0 as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xf4 as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xf8 as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).xfc as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(xfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x100 as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x104 as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x108 as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x10c as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x10c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x110 as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x114 as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x118 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x11c as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x11c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x120 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x124 as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x128 as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x12c as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x12c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x130 as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x134 as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x138 as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x13c as *const _ as usize },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x13c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x140 as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x144 as *const _ as usize },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x148 as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x14c as *const _ as usize },
        332usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x14c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x150 as *const _ as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x154 as *const _ as usize },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x158 as *const _ as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x15c as *const _ as usize },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x15c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x160 as *const _ as usize },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x164 as *const _ as usize },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x168 as *const _ as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x16c as *const _ as usize },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x16c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x170 as *const _ as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x174 as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x178 as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x17c as *const _ as usize },
        380usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x17c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x180 as *const _ as usize },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x184 as *const _ as usize },
        388usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x188 as *const _ as usize },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x18c as *const _ as usize },
        396usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x18c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x190 as *const _ as usize },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x190)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x194 as *const _ as usize },
        404usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x194)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x198 as *const _ as usize },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x198)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x19c as *const _ as usize },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x19c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1a0 as *const _ as usize },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1a4 as *const _ as usize },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1a8 as *const _ as usize },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1ac as *const _ as usize },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1b0 as *const _ as usize },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1b4 as *const _ as usize },
        436usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1b8 as *const _ as usize },
        440usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1bc as *const _ as usize },
        444usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1c0 as *const _ as usize },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1c4 as *const _ as usize },
        452usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1c8 as *const _ as usize },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1cc as *const _ as usize },
        460usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1d0 as *const _ as usize },
        464usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1d4 as *const _ as usize },
        468usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1d8 as *const _ as usize },
        472usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1dc as *const _ as usize },
        476usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1e0 as *const _ as usize },
        480usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1e4 as *const _ as usize },
        484usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1e8 as *const _ as usize },
        488usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1ec as *const _ as usize },
        492usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1f0 as *const _ as usize },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1f4 as *const _ as usize },
        500usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1f8 as *const _ as usize },
        504usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x1fc as *const _ as usize },
        508usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x1fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x200 as *const _ as usize },
        512usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x200)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x204 as *const _ as usize },
        516usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x204)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x208 as *const _ as usize },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x208)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x20c as *const _ as usize },
        524usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x20c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x210 as *const _ as usize },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x210)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x214 as *const _ as usize },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x214)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x218 as *const _ as usize },
        536usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x218)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x21c as *const _ as usize },
        540usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x21c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x220 as *const _ as usize },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x220)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x224 as *const _ as usize },
        548usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x224)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x228 as *const _ as usize },
        552usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x228)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x22c as *const _ as usize },
        556usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x22c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x230 as *const _ as usize },
        560usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x230)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x234 as *const _ as usize },
        564usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x234)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x238 as *const _ as usize },
        568usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x238)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x23c as *const _ as usize },
        572usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x23c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x240 as *const _ as usize },
        576usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x240)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x244 as *const _ as usize },
        580usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x244)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x248 as *const _ as usize },
        584usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x248)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x24c as *const _ as usize },
        588usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x24c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x250 as *const _ as usize },
        592usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x250)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x254 as *const _ as usize },
        596usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x254)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x258 as *const _ as usize },
        600usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x258)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x25c as *const _ as usize },
        604usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x25c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x260 as *const _ as usize },
        608usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x260)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x264 as *const _ as usize },
        612usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x264)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x268 as *const _ as usize },
        616usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x268)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x26c as *const _ as usize },
        620usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x26c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x270 as *const _ as usize },
        624usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x270)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x274 as *const _ as usize },
        628usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x274)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x278 as *const _ as usize },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x278)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x27c as *const _ as usize },
        636usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x27c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x280 as *const _ as usize },
        640usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x280)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x284 as *const _ as usize },
        644usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x284)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x288 as *const _ as usize },
        648usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x288)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x28c as *const _ as usize },
        652usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x28c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x290 as *const _ as usize },
        656usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x290)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x294 as *const _ as usize },
        660usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x294)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x298 as *const _ as usize },
        664usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x298)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x29c as *const _ as usize },
        668usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x29c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2a0 as *const _ as usize },
        672usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2a4 as *const _ as usize },
        676usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2a8 as *const _ as usize },
        680usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2ac as *const _ as usize },
        684usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2b0 as *const _ as usize },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2b4 as *const _ as usize },
        692usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2b8 as *const _ as usize },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2bc as *const _ as usize },
        700usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2c0 as *const _ as usize },
        704usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2c4 as *const _ as usize },
        708usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2c8 as *const _ as usize },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2cc as *const _ as usize },
        716usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2d0 as *const _ as usize },
        720usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2d4 as *const _ as usize },
        724usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2d8 as *const _ as usize },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2dc as *const _ as usize },
        732usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2e0 as *const _ as usize },
        736usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2e4 as *const _ as usize },
        740usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2e8 as *const _ as usize },
        744usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2e8)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<MatchCamera>())).freecam_tilt_vertical as *const _ as usize
        },
        748usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(freecam_tilt_vertical)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2f0 as *const _ as usize },
        752usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x2f4 as *const _ as usize },
        756usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x2f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).freecam_zoommax as *const _ as usize },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(freecam_zoommax)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).freecam_zoommin as *const _ as usize },
        764usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(freecam_zoommin)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x300 as *const _ as usize },
        768usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x300)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x304 as *const _ as usize },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x304)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).freecam_pos as *const _ as usize },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(freecam_pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).freecam_offset as *const _ as usize },
        788usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(freecam_offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).freecam_rotate as *const _ as usize },
        800usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(freecam_rotate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).freecam_fov as *const _ as usize },
        808usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(freecam_fov)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x334 as *const _ as usize },
        820usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x334)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x338 as *const _ as usize },
        824usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x338)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x33c as *const _ as usize },
        828usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x33c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x340 as *const _ as usize },
        832usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x340)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x344 as *const _ as usize },
        836usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x344)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x348 as *const _ as usize },
        840usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x348)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x34c as *const _ as usize },
        844usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x34c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x350 as *const _ as usize },
        848usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x350)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x354 as *const _ as usize },
        852usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x354)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x358 as *const _ as usize },
        856usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x358)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x35c as *const _ as usize },
        860usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x35c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x360 as *const _ as usize },
        864usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x360)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x364 as *const _ as usize },
        868usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x364)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x368 as *const _ as usize },
        872usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x368)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x36c as *const _ as usize },
        876usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x36c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x370 as *const _ as usize },
        880usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x370)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x374 as *const _ as usize },
        884usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x374)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x378 as *const _ as usize },
        888usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x378)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x37c as *const _ as usize },
        892usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x37c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x380 as *const _ as usize },
        896usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x380)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x384 as *const _ as usize },
        900usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x384)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x388 as *const _ as usize },
        904usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x388)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x38c as *const _ as usize },
        908usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x38c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x390 as *const _ as usize },
        912usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x390)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x394 as *const _ as usize },
        916usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x394)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x398 as *const _ as usize },
        920usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x398)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x39a as *const _ as usize },
        922usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x39a)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x39b as *const _ as usize },
        923usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x39b)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x39c as *const _ as usize },
        924usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x39c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3a0 as *const _ as usize },
        928usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3a4 as *const _ as usize },
        932usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3a8 as *const _ as usize },
        936usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3ac as *const _ as usize },
        940usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3b0 as *const _ as usize },
        944usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3b4 as *const _ as usize },
        948usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3b8 as *const _ as usize },
        952usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3bc as *const _ as usize },
        956usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3c0 as *const _ as usize },
        960usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3c4 as *const _ as usize },
        964usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3c8 as *const _ as usize },
        968usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3cc as *const _ as usize },
        972usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3d0 as *const _ as usize },
        976usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3d4 as *const _ as usize },
        980usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).devcam_pos as *const _ as usize },
        984usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(devcam_pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).devcam_rot as *const _ as usize },
        996usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(devcam_rot)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).devcam_fov as *const _ as usize },
        1008usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(devcam_fov)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3f4 as *const _ as usize },
        1012usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3f8 as *const _ as usize },
        1016usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchCamera>())).x3fc as *const _ as usize },
        1020usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchCamera),
            "::",
            stringify!(x3fc)
        )
    );
}
impl MatchCamera {
    #[inline]
    pub fn x399x80(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x399x80(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x399x40(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x399x40(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x399x20(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x399x20(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn show_coll(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_coll(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x399x08(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x399x08(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x399x04(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x399x04(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x399x02(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x399x02(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x399x01(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x399x01(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        x399x80: ::std::os::raw::c_uchar,
        x399x40: ::std::os::raw::c_uchar,
        x399x20: ::std::os::raw::c_uchar,
        show_coll: ::std::os::raw::c_uchar,
        x399x08: ::std::os::raw::c_uchar,
        x399x04: ::std::os::raw::c_uchar,
        x399x02: ::std::os::raw::c_uchar,
        x399x01: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x399x80: u8 = unsafe { ::std::mem::transmute(x399x80) };
            x399x80 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x399x40: u8 = unsafe { ::std::mem::transmute(x399x40) };
            x399x40 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let x399x20: u8 = unsafe { ::std::mem::transmute(x399x20) };
            x399x20 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let show_coll: u8 = unsafe { ::std::mem::transmute(show_coll) };
            show_coll as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let x399x08: u8 = unsafe { ::std::mem::transmute(x399x08) };
            x399x08 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let x399x04: u8 = unsafe { ::std::mem::transmute(x399x04) };
            x399x04 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let x399x02: u8 = unsafe { ::std::mem::transmute(x399x02) };
            x399x02 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let x399x01: u8 = unsafe { ::std::mem::transmute(x399x01) };
            x399x01 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MatchOffscreen {
    pub x0: *mut ::std::os::raw::c_void,
    pub x4: *mut ::std::os::raw::c_void,
    pub x8: *mut ::std::os::raw::c_void,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub x10: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_MatchOffscreen() {
    assert_eq!(
        ::std::mem::size_of::<MatchOffscreen>(),
        40usize,
        concat!("Size of: ", stringify!(MatchOffscreen))
    );
    assert_eq!(
        ::std::mem::align_of::<MatchOffscreen>(),
        8usize,
        concat!("Alignment of ", stringify!(MatchOffscreen))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchOffscreen>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchOffscreen),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchOffscreen>())).x4 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchOffscreen),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchOffscreen>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchOffscreen),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MatchOffscreen>())).x10 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MatchOffscreen),
            "::",
            stringify!(x10)
        )
    );
}
impl MatchOffscreen {
    #[inline]
    pub fn is_offscreen(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_offscreen(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn ignore_offscreen(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_ignore_offscreen(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x3f(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 6u8) as u8) }
    }
    #[inline]
    pub fn set_x3f(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 6u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        is_offscreen: ::std::os::raw::c_uchar,
        ignore_offscreen: ::std::os::raw::c_uchar,
        x3f: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let is_offscreen: u8 = unsafe { ::std::mem::transmute(is_offscreen) };
            is_offscreen as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let ignore_offscreen: u8 = unsafe { ::std::mem::transmute(ignore_offscreen) };
            ignore_offscreen as u64
        });
        __bindgen_bitfield_unit.set(2usize, 6u8, {
            let x3f: u8 = unsafe { ::std::mem::transmute(x3f) };
            x3f as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Match {
    pub state: u8_,
    pub pauser: u8_,
    pub x4: ::std::os::raw::c_int,
    pub x8: ::std::os::raw::c_int,
    pub xc: ::std::os::raw::c_int,
    pub x10: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub time_frames: ::std::os::raw::c_int,
    pub time_seconds: ::std::os::raw::c_int,
    pub time_ms: u16_,
    pub x30: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3c: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4c: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8c: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa4: ::std::os::raw::c_int,
    pub xa8: ::std::os::raw::c_int,
    pub xac: ::std::os::raw::c_int,
    pub xb0: ::std::os::raw::c_int,
    pub xb4: ::std::os::raw::c_int,
    pub xb8: ::std::os::raw::c_int,
    pub xbc: ::std::os::raw::c_int,
    pub xc0: ::std::os::raw::c_int,
    pub xc4: ::std::os::raw::c_int,
    pub xc8: ::std::os::raw::c_int,
    pub xcc: ::std::os::raw::c_int,
    pub xd0: ::std::os::raw::c_int,
    pub xd4: ::std::os::raw::c_int,
    pub xd8: ::std::os::raw::c_int,
    pub xdc: ::std::os::raw::c_int,
    pub xe0: ::std::os::raw::c_int,
    pub xe4: ::std::os::raw::c_int,
    pub xe8: ::std::os::raw::c_int,
    pub xec: ::std::os::raw::c_int,
    pub xf0: ::std::os::raw::c_int,
    pub xf4: ::std::os::raw::c_int,
    pub xf8: ::std::os::raw::c_int,
    pub xfc: ::std::os::raw::c_int,
    pub x100: ::std::os::raw::c_int,
    pub x104: ::std::os::raw::c_int,
    pub x108: ::std::os::raw::c_int,
    pub x10c: ::std::os::raw::c_int,
    pub x110: ::std::os::raw::c_int,
    pub x114: ::std::os::raw::c_int,
    pub x118: ::std::os::raw::c_int,
    pub x11c: ::std::os::raw::c_int,
    pub x120: ::std::os::raw::c_int,
    pub x124: ::std::os::raw::c_int,
    pub x128: ::std::os::raw::c_int,
    pub x12c: ::std::os::raw::c_int,
    pub x130: ::std::os::raw::c_int,
    pub x134: ::std::os::raw::c_int,
    pub x138: ::std::os::raw::c_int,
    pub x13c: ::std::os::raw::c_int,
    pub x140: ::std::os::raw::c_int,
    pub x144: ::std::os::raw::c_int,
    pub x148: ::std::os::raw::c_int,
    pub x14c: ::std::os::raw::c_int,
    pub x150: ::std::os::raw::c_int,
    pub x154: ::std::os::raw::c_int,
    pub x158: ::std::os::raw::c_int,
    pub x15c: ::std::os::raw::c_int,
    pub x160: ::std::os::raw::c_int,
    pub x164: ::std::os::raw::c_int,
    pub x168: ::std::os::raw::c_int,
    pub x16c: ::std::os::raw::c_int,
    pub x170: ::std::os::raw::c_int,
    pub x174: ::std::os::raw::c_int,
    pub x178: ::std::os::raw::c_int,
    pub x17c: ::std::os::raw::c_int,
    pub x180: ::std::os::raw::c_int,
    pub x184: ::std::os::raw::c_int,
    pub x188: ::std::os::raw::c_int,
    pub x18c: ::std::os::raw::c_int,
    pub x190: ::std::os::raw::c_int,
    pub x194: ::std::os::raw::c_int,
    pub x198: ::std::os::raw::c_int,
    pub x19c: ::std::os::raw::c_int,
    pub x1a0: ::std::os::raw::c_int,
    pub x1a4: ::std::os::raw::c_int,
    pub x1a8: ::std::os::raw::c_int,
    pub x1ac: ::std::os::raw::c_int,
    pub x1b0: ::std::os::raw::c_int,
    pub x1b4: ::std::os::raw::c_int,
    pub x1b8: ::std::os::raw::c_int,
    pub x1bc: ::std::os::raw::c_int,
    pub x1c0: ::std::os::raw::c_int,
    pub x1c4: ::std::os::raw::c_int,
    pub x1c8: ::std::os::raw::c_int,
    pub x1cc: ::std::os::raw::c_int,
    pub x1d0: ::std::os::raw::c_int,
    pub x1d4: ::std::os::raw::c_int,
    pub x1d8: ::std::os::raw::c_int,
    pub x1dc: ::std::os::raw::c_int,
    pub x1e0: ::std::os::raw::c_int,
    pub x1e4: ::std::os::raw::c_int,
    pub x1e8: ::std::os::raw::c_int,
    pub x1ec: ::std::os::raw::c_int,
    pub x1f0: ::std::os::raw::c_int,
    pub x1f4: ::std::os::raw::c_int,
    pub x1f8: ::std::os::raw::c_int,
    pub x1fc: ::std::os::raw::c_int,
    pub x200: ::std::os::raw::c_int,
    pub x204: ::std::os::raw::c_int,
    pub x208: ::std::os::raw::c_int,
    pub x20c: ::std::os::raw::c_int,
    pub x210: ::std::os::raw::c_int,
    pub x214: ::std::os::raw::c_int,
    pub x218: ::std::os::raw::c_int,
    pub x21c: ::std::os::raw::c_int,
    pub x220: ::std::os::raw::c_int,
    pub x224: ::std::os::raw::c_int,
    pub x228: ::std::os::raw::c_int,
    pub x22c: ::std::os::raw::c_int,
    pub x230: ::std::os::raw::c_int,
    pub x234: ::std::os::raw::c_int,
    pub x238: ::std::os::raw::c_int,
    pub x23c: ::std::os::raw::c_int,
    pub x240: ::std::os::raw::c_int,
    pub x244: ::std::os::raw::c_int,
    pub x248: ::std::os::raw::c_int,
    pub x24c: ::std::os::raw::c_int,
    pub x250: ::std::os::raw::c_int,
    pub x254: ::std::os::raw::c_int,
    pub x258: ::std::os::raw::c_int,
    pub x25c: ::std::os::raw::c_int,
    pub x260: ::std::os::raw::c_int,
    pub x264: ::std::os::raw::c_int,
    pub x268: ::std::os::raw::c_int,
    pub x26c: ::std::os::raw::c_int,
    pub x270: ::std::os::raw::c_int,
    pub x274: ::std::os::raw::c_int,
    pub x278: ::std::os::raw::c_int,
    pub x27c: ::std::os::raw::c_int,
    pub x280: ::std::os::raw::c_int,
    pub x284: ::std::os::raw::c_int,
    pub x288: ::std::os::raw::c_int,
    pub x28c: ::std::os::raw::c_int,
    pub x290: ::std::os::raw::c_int,
    pub x294: ::std::os::raw::c_int,
    pub x298: ::std::os::raw::c_int,
    pub x29c: ::std::os::raw::c_int,
    pub x2a0: ::std::os::raw::c_int,
    pub x2a4: ::std::os::raw::c_int,
    pub x2a8: ::std::os::raw::c_int,
    pub x2ac: ::std::os::raw::c_int,
    pub x2b0: ::std::os::raw::c_int,
    pub x2b4: ::std::os::raw::c_int,
    pub x2b8: ::std::os::raw::c_int,
    pub x2bc: ::std::os::raw::c_int,
    pub x2c0: ::std::os::raw::c_int,
    pub x2c4: ::std::os::raw::c_int,
    pub x2c8: ::std::os::raw::c_int,
    pub x2cc: ::std::os::raw::c_int,
    pub x2d0: ::std::os::raw::c_int,
    pub x2d4: ::std::os::raw::c_int,
    pub x2d8: ::std::os::raw::c_int,
    pub x2dc: ::std::os::raw::c_int,
    pub x2e0: ::std::os::raw::c_int,
    pub x2e4: ::std::os::raw::c_int,
    pub x2e8: ::std::os::raw::c_int,
    pub x2ec: ::std::os::raw::c_int,
    pub x2f0: ::std::os::raw::c_int,
    pub x2f4: ::std::os::raw::c_int,
    pub x2f8: ::std::os::raw::c_int,
    pub x2fc: ::std::os::raw::c_int,
    pub x300: ::std::os::raw::c_int,
    pub x304: ::std::os::raw::c_int,
    pub x308: ::std::os::raw::c_int,
    pub x30c: ::std::os::raw::c_int,
    pub x310: ::std::os::raw::c_int,
    pub x314: ::std::os::raw::c_int,
    pub x318: ::std::os::raw::c_int,
    pub x31c: ::std::os::raw::c_int,
    pub x320: ::std::os::raw::c_int,
    pub x324: ::std::os::raw::c_int,
    pub x328: ::std::os::raw::c_int,
    pub x32c: ::std::os::raw::c_int,
    pub x330: ::std::os::raw::c_int,
    pub x334: ::std::os::raw::c_int,
    pub x338: ::std::os::raw::c_int,
    pub x33c: ::std::os::raw::c_int,
    pub x340: ::std::os::raw::c_int,
    pub x344: ::std::os::raw::c_int,
    pub x348: ::std::os::raw::c_int,
    pub x34c: ::std::os::raw::c_int,
    pub x350: ::std::os::raw::c_int,
    pub x354: ::std::os::raw::c_int,
    pub x358: ::std::os::raw::c_int,
    pub x35c: ::std::os::raw::c_int,
    pub x360: ::std::os::raw::c_int,
    pub x364: ::std::os::raw::c_int,
    pub x368: ::std::os::raw::c_int,
    pub x36c: ::std::os::raw::c_int,
    pub x370: ::std::os::raw::c_int,
    pub x374: ::std::os::raw::c_int,
    pub x378: ::std::os::raw::c_int,
    pub x37c: ::std::os::raw::c_int,
    pub x380: ::std::os::raw::c_int,
    pub x384: ::std::os::raw::c_int,
    pub x388: ::std::os::raw::c_int,
    pub x38c: ::std::os::raw::c_int,
    pub x390: ::std::os::raw::c_int,
    pub x394: ::std::os::raw::c_int,
    pub x398: ::std::os::raw::c_int,
    pub x39c: ::std::os::raw::c_int,
    pub x3a0: ::std::os::raw::c_int,
    pub x3a4: ::std::os::raw::c_int,
    pub x3a8: ::std::os::raw::c_int,
    pub x3ac: ::std::os::raw::c_int,
    pub x3b0: ::std::os::raw::c_int,
    pub x3b4: ::std::os::raw::c_int,
    pub x3b8: ::std::os::raw::c_int,
    pub x3bc: ::std::os::raw::c_int,
    pub x3c0: ::std::os::raw::c_int,
    pub x3c4: ::std::os::raw::c_int,
    pub x3c8: ::std::os::raw::c_int,
    pub x3cc: ::std::os::raw::c_int,
    pub x3d0: ::std::os::raw::c_int,
    pub x3d4: ::std::os::raw::c_int,
    pub x3d8: ::std::os::raw::c_int,
    pub x3dc: ::std::os::raw::c_int,
    pub x3e0: ::std::os::raw::c_int,
    pub x3e4: ::std::os::raw::c_int,
    pub x3e8: ::std::os::raw::c_int,
    pub x3ec: ::std::os::raw::c_int,
    pub x3f0: ::std::os::raw::c_int,
    pub x3f4: ::std::os::raw::c_int,
    pub x3f8: ::std::os::raw::c_int,
    pub x3fc: ::std::os::raw::c_int,
    pub x400: ::std::os::raw::c_int,
    pub x404: ::std::os::raw::c_int,
    pub x408: ::std::os::raw::c_int,
    pub x40c: ::std::os::raw::c_int,
    pub x410: ::std::os::raw::c_int,
    pub x414: ::std::os::raw::c_int,
    pub x418: ::std::os::raw::c_int,
    pub x41c: ::std::os::raw::c_int,
    pub x420: ::std::os::raw::c_int,
    pub x424: ::std::os::raw::c_int,
    pub x428: ::std::os::raw::c_int,
    pub x42c: ::std::os::raw::c_int,
    pub x430: ::std::os::raw::c_int,
    pub x434: ::std::os::raw::c_int,
    pub x438: ::std::os::raw::c_int,
    pub x43c: ::std::os::raw::c_int,
    pub x440: ::std::os::raw::c_int,
    pub x444: ::std::os::raw::c_int,
    pub x448: ::std::os::raw::c_int,
    pub x44c: ::std::os::raw::c_int,
    pub x450: ::std::os::raw::c_int,
    pub x454: ::std::os::raw::c_int,
    pub x458: ::std::os::raw::c_int,
    pub x45c: ::std::os::raw::c_int,
    pub x460: ::std::os::raw::c_int,
    pub x464: ::std::os::raw::c_int,
    pub x468: ::std::os::raw::c_int,
    pub x46c: ::std::os::raw::c_int,
    pub x470: ::std::os::raw::c_int,
    pub x474: ::std::os::raw::c_int,
    pub x478: ::std::os::raw::c_int,
    pub x47c: ::std::os::raw::c_int,
    pub x480: ::std::os::raw::c_int,
    pub x484: ::std::os::raw::c_int,
    pub x488: ::std::os::raw::c_int,
    pub x48c: ::std::os::raw::c_int,
    pub x490: ::std::os::raw::c_int,
    pub x494: ::std::os::raw::c_int,
    pub x498: ::std::os::raw::c_int,
    pub x49c: ::std::os::raw::c_int,
    pub x4a0: ::std::os::raw::c_int,
    pub x4a4: ::std::os::raw::c_int,
    pub x4a8: ::std::os::raw::c_int,
    pub x4ac: ::std::os::raw::c_int,
    pub x4b0: ::std::os::raw::c_int,
    pub x4b4: ::std::os::raw::c_int,
    pub x4b8: ::std::os::raw::c_int,
    pub x4bc: ::std::os::raw::c_int,
    pub x4c0: ::std::os::raw::c_int,
    pub x4c4: ::std::os::raw::c_int,
    pub x4c8: ::std::os::raw::c_int,
    pub x4cc: ::std::os::raw::c_int,
    pub x4d0: ::std::os::raw::c_int,
    pub x4d4: ::std::os::raw::c_int,
    pub x4d8: ::std::os::raw::c_int,
    pub x4dc: ::std::os::raw::c_int,
    pub x4e0: ::std::os::raw::c_int,
    pub x4e4: ::std::os::raw::c_int,
    pub x4e8: ::std::os::raw::c_int,
    pub x4ec: ::std::os::raw::c_int,
    pub x4f0: ::std::os::raw::c_int,
    pub x4f4: ::std::os::raw::c_int,
    pub x4f8: ::std::os::raw::c_int,
    pub x4fc: ::std::os::raw::c_int,
    pub x500: ::std::os::raw::c_int,
    pub x504: ::std::os::raw::c_int,
    pub x508: ::std::os::raw::c_int,
    pub x50c: ::std::os::raw::c_int,
    pub x510: ::std::os::raw::c_int,
    pub x514: ::std::os::raw::c_int,
    pub x518: ::std::os::raw::c_int,
    pub x51c: ::std::os::raw::c_int,
    pub x520: ::std::os::raw::c_int,
    pub x524: ::std::os::raw::c_int,
    pub x528: ::std::os::raw::c_int,
    pub x52c: ::std::os::raw::c_int,
    pub x530: ::std::os::raw::c_int,
    pub x534: ::std::os::raw::c_int,
    pub x538: ::std::os::raw::c_int,
    pub x53c: ::std::os::raw::c_int,
    pub x540: ::std::os::raw::c_int,
    pub x544: ::std::os::raw::c_int,
    pub x548: ::std::os::raw::c_int,
    pub x54c: ::std::os::raw::c_int,
    pub x550: ::std::os::raw::c_int,
    pub x554: ::std::os::raw::c_int,
    pub x558: ::std::os::raw::c_int,
    pub x55c: ::std::os::raw::c_int,
    pub x560: ::std::os::raw::c_int,
    pub x564: ::std::os::raw::c_int,
    pub x568: ::std::os::raw::c_int,
    pub x56c: ::std::os::raw::c_int,
    pub x570: ::std::os::raw::c_int,
    pub x574: ::std::os::raw::c_int,
    pub x578: ::std::os::raw::c_int,
    pub x57c: ::std::os::raw::c_int,
    pub x580: ::std::os::raw::c_int,
    pub x584: ::std::os::raw::c_int,
    pub x588: ::std::os::raw::c_int,
    pub x58c: ::std::os::raw::c_int,
    pub x590: ::std::os::raw::c_int,
    pub x594: ::std::os::raw::c_int,
    pub x598: ::std::os::raw::c_int,
    pub x59c: ::std::os::raw::c_int,
    pub x5a0: ::std::os::raw::c_int,
    pub x5a4: ::std::os::raw::c_int,
    pub x5a8: ::std::os::raw::c_int,
    pub x5ac: ::std::os::raw::c_int,
    pub x5b0: ::std::os::raw::c_int,
    pub x5b4: ::std::os::raw::c_int,
    pub x5b8: ::std::os::raw::c_int,
    pub x5bc: ::std::os::raw::c_int,
    pub x5c0: ::std::os::raw::c_int,
    pub x5c4: ::std::os::raw::c_int,
    pub x5c8: ::std::os::raw::c_int,
    pub x5cc: ::std::os::raw::c_int,
    pub x5d0: ::std::os::raw::c_int,
    pub x5d4: ::std::os::raw::c_int,
    pub x5d8: ::std::os::raw::c_int,
    pub x5dc: ::std::os::raw::c_int,
    pub x5e0: ::std::os::raw::c_int,
    pub x5e4: ::std::os::raw::c_int,
    pub x5e8: ::std::os::raw::c_int,
    pub x5ec: ::std::os::raw::c_int,
    pub x5f0: ::std::os::raw::c_int,
    pub x5f4: ::std::os::raw::c_int,
    pub x5f8: ::std::os::raw::c_int,
    pub x5fc: ::std::os::raw::c_int,
    pub x600: ::std::os::raw::c_int,
    pub x604: ::std::os::raw::c_int,
    pub x608: ::std::os::raw::c_int,
    pub x60c: ::std::os::raw::c_int,
    pub x610: ::std::os::raw::c_int,
    pub x614: ::std::os::raw::c_int,
    pub x618: ::std::os::raw::c_int,
    pub x61c: ::std::os::raw::c_int,
    pub x620: ::std::os::raw::c_int,
    pub x624: ::std::os::raw::c_int,
    pub x628: ::std::os::raw::c_int,
    pub x62c: ::std::os::raw::c_int,
    pub x630: ::std::os::raw::c_int,
    pub x634: ::std::os::raw::c_int,
    pub x638: ::std::os::raw::c_int,
    pub x63c: ::std::os::raw::c_int,
    pub x640: ::std::os::raw::c_int,
    pub x644: ::std::os::raw::c_int,
    pub x648: ::std::os::raw::c_int,
    pub x64c: ::std::os::raw::c_int,
    pub x650: ::std::os::raw::c_int,
    pub x654: ::std::os::raw::c_int,
    pub x658: ::std::os::raw::c_int,
    pub x65c: ::std::os::raw::c_int,
    pub x660: ::std::os::raw::c_int,
    pub x664: ::std::os::raw::c_int,
    pub x668: ::std::os::raw::c_int,
    pub x66c: ::std::os::raw::c_int,
    pub x670: ::std::os::raw::c_int,
    pub x674: ::std::os::raw::c_int,
    pub x678: ::std::os::raw::c_int,
    pub x67c: ::std::os::raw::c_int,
    pub x680: ::std::os::raw::c_int,
    pub x684: ::std::os::raw::c_int,
    pub x688: ::std::os::raw::c_int,
    pub x68c: ::std::os::raw::c_int,
    pub x690: ::std::os::raw::c_int,
    pub x694: ::std::os::raw::c_int,
    pub x698: ::std::os::raw::c_int,
    pub x69c: ::std::os::raw::c_int,
    pub x6a0: ::std::os::raw::c_int,
    pub x6a4: ::std::os::raw::c_int,
    pub x6a8: ::std::os::raw::c_int,
    pub x6ac: ::std::os::raw::c_int,
    pub x6b0: ::std::os::raw::c_int,
    pub x6b4: ::std::os::raw::c_int,
    pub x6b8: ::std::os::raw::c_int,
    pub x6bc: ::std::os::raw::c_int,
    pub x6c0: ::std::os::raw::c_int,
    pub x6c4: ::std::os::raw::c_int,
    pub x6c8: ::std::os::raw::c_int,
    pub x6cc: ::std::os::raw::c_int,
    pub x6d0: ::std::os::raw::c_int,
    pub x6d4: ::std::os::raw::c_int,
    pub x6d8: ::std::os::raw::c_int,
    pub x6dc: ::std::os::raw::c_int,
    pub x6e0: ::std::os::raw::c_int,
    pub x6e4: ::std::os::raw::c_int,
    pub x6e8: ::std::os::raw::c_int,
    pub x6ec: ::std::os::raw::c_int,
    pub x6f0: ::std::os::raw::c_int,
    pub x6f4: ::std::os::raw::c_int,
    pub x6f8: ::std::os::raw::c_int,
    pub x6fc: ::std::os::raw::c_int,
    pub x700: ::std::os::raw::c_int,
    pub x704: ::std::os::raw::c_int,
    pub x708: ::std::os::raw::c_int,
    pub x70c: ::std::os::raw::c_int,
    pub x710: ::std::os::raw::c_int,
    pub x714: ::std::os::raw::c_int,
    pub x718: ::std::os::raw::c_int,
    pub x71c: ::std::os::raw::c_int,
    pub x720: ::std::os::raw::c_int,
    pub x724: ::std::os::raw::c_int,
    pub x728: ::std::os::raw::c_int,
    pub x72c: ::std::os::raw::c_int,
    pub x730: ::std::os::raw::c_int,
    pub x734: ::std::os::raw::c_int,
    pub x738: ::std::os::raw::c_int,
    pub x73c: ::std::os::raw::c_int,
    pub x740: ::std::os::raw::c_int,
    pub x744: ::std::os::raw::c_int,
    pub x748: ::std::os::raw::c_int,
    pub x74c: ::std::os::raw::c_int,
    pub x750: ::std::os::raw::c_int,
    pub x754: ::std::os::raw::c_int,
    pub x758: ::std::os::raw::c_int,
    pub x75c: ::std::os::raw::c_int,
    pub x760: ::std::os::raw::c_int,
    pub x764: ::std::os::raw::c_int,
    pub x768: ::std::os::raw::c_int,
    pub x76c: ::std::os::raw::c_int,
    pub x770: ::std::os::raw::c_int,
    pub x774: ::std::os::raw::c_int,
    pub x778: ::std::os::raw::c_int,
    pub x77c: ::std::os::raw::c_int,
    pub x780: ::std::os::raw::c_int,
    pub x784: ::std::os::raw::c_int,
    pub x788: ::std::os::raw::c_int,
    pub x78c: ::std::os::raw::c_int,
    pub x790: ::std::os::raw::c_int,
    pub x794: ::std::os::raw::c_int,
    pub x798: ::std::os::raw::c_int,
    pub x79c: ::std::os::raw::c_int,
    pub x7a0: ::std::os::raw::c_int,
    pub x7a4: ::std::os::raw::c_int,
    pub x7a8: ::std::os::raw::c_int,
    pub x7ac: ::std::os::raw::c_int,
    pub x7b0: ::std::os::raw::c_int,
    pub x7b4: ::std::os::raw::c_int,
    pub x7b8: ::std::os::raw::c_int,
    pub x7bc: ::std::os::raw::c_int,
    pub x7c0: ::std::os::raw::c_int,
    pub x7c4: ::std::os::raw::c_int,
    pub x7c8: ::std::os::raw::c_int,
    pub x7cc: ::std::os::raw::c_int,
    pub x7d0: ::std::os::raw::c_int,
    pub x7d4: ::std::os::raw::c_int,
    pub x7d8: ::std::os::raw::c_int,
    pub x7dc: ::std::os::raw::c_int,
    pub x7e0: ::std::os::raw::c_int,
    pub x7e4: ::std::os::raw::c_int,
    pub x7e8: ::std::os::raw::c_int,
    pub x7ec: ::std::os::raw::c_int,
    pub x7f0: ::std::os::raw::c_int,
    pub x7f4: ::std::os::raw::c_int,
    pub x7f8: ::std::os::raw::c_int,
    pub x7fc: ::std::os::raw::c_int,
    pub x800: ::std::os::raw::c_int,
    pub x804: ::std::os::raw::c_int,
    pub x808: ::std::os::raw::c_int,
    pub x80c: ::std::os::raw::c_int,
    pub x810: ::std::os::raw::c_int,
    pub x814: ::std::os::raw::c_int,
    pub x818: ::std::os::raw::c_int,
    pub x81c: ::std::os::raw::c_int,
    pub x820: ::std::os::raw::c_int,
    pub x824: ::std::os::raw::c_int,
    pub x828: ::std::os::raw::c_int,
    pub x82c: ::std::os::raw::c_int,
    pub x830: ::std::os::raw::c_int,
    pub x834: ::std::os::raw::c_int,
    pub x838: ::std::os::raw::c_int,
    pub x83c: ::std::os::raw::c_int,
    pub x840: ::std::os::raw::c_int,
    pub x844: ::std::os::raw::c_int,
    pub x848: ::std::os::raw::c_int,
    pub x84c: ::std::os::raw::c_int,
    pub x850: ::std::os::raw::c_int,
    pub x854: ::std::os::raw::c_int,
    pub x858: ::std::os::raw::c_int,
    pub x85c: ::std::os::raw::c_int,
    pub x860: ::std::os::raw::c_int,
    pub x864: ::std::os::raw::c_int,
    pub x868: ::std::os::raw::c_int,
    pub x86c: ::std::os::raw::c_int,
    pub x870: ::std::os::raw::c_int,
    pub x874: ::std::os::raw::c_int,
    pub x878: ::std::os::raw::c_int,
    pub x87c: ::std::os::raw::c_int,
    pub x880: ::std::os::raw::c_int,
    pub x884: ::std::os::raw::c_int,
    pub x888: ::std::os::raw::c_int,
    pub x88c: ::std::os::raw::c_int,
    pub x890: ::std::os::raw::c_int,
    pub x894: ::std::os::raw::c_int,
    pub x898: ::std::os::raw::c_int,
    pub x89c: ::std::os::raw::c_int,
    pub x8a0: ::std::os::raw::c_int,
    pub x8a4: ::std::os::raw::c_int,
    pub x8a8: ::std::os::raw::c_int,
    pub x8ac: ::std::os::raw::c_int,
    pub x8b0: ::std::os::raw::c_int,
    pub x8b4: ::std::os::raw::c_int,
    pub x8b8: ::std::os::raw::c_int,
    pub x8bc: ::std::os::raw::c_int,
    pub x8c0: ::std::os::raw::c_int,
    pub x8c4: ::std::os::raw::c_int,
    pub x8c8: ::std::os::raw::c_int,
    pub x8cc: ::std::os::raw::c_int,
    pub x8d0: ::std::os::raw::c_int,
    pub x8d4: ::std::os::raw::c_int,
    pub x8d8: ::std::os::raw::c_int,
    pub x8dc: ::std::os::raw::c_int,
    pub x8e0: ::std::os::raw::c_int,
    pub x8e4: ::std::os::raw::c_int,
    pub x8e8: ::std::os::raw::c_int,
    pub x8ec: ::std::os::raw::c_int,
    pub x8f0: ::std::os::raw::c_int,
    pub x8f4: ::std::os::raw::c_int,
    pub x8f8: ::std::os::raw::c_int,
    pub x8fc: ::std::os::raw::c_int,
    pub x900: ::std::os::raw::c_int,
    pub x904: ::std::os::raw::c_int,
    pub x908: ::std::os::raw::c_int,
    pub x90c: ::std::os::raw::c_int,
    pub x910: ::std::os::raw::c_int,
    pub x914: ::std::os::raw::c_int,
    pub x918: ::std::os::raw::c_int,
    pub x91c: ::std::os::raw::c_int,
    pub x920: ::std::os::raw::c_int,
    pub x924: ::std::os::raw::c_int,
    pub x928: ::std::os::raw::c_int,
    pub x92c: ::std::os::raw::c_int,
    pub x930: ::std::os::raw::c_int,
    pub x934: ::std::os::raw::c_int,
    pub x938: ::std::os::raw::c_int,
    pub x93c: ::std::os::raw::c_int,
    pub x940: ::std::os::raw::c_int,
    pub x944: ::std::os::raw::c_int,
    pub x948: ::std::os::raw::c_int,
    pub x94c: ::std::os::raw::c_int,
    pub x950: ::std::os::raw::c_int,
    pub x954: ::std::os::raw::c_int,
    pub x958: ::std::os::raw::c_int,
    pub x95c: ::std::os::raw::c_int,
    pub x960: ::std::os::raw::c_int,
    pub x964: ::std::os::raw::c_int,
    pub x968: ::std::os::raw::c_int,
    pub x96c: ::std::os::raw::c_int,
    pub x970: ::std::os::raw::c_int,
    pub x974: ::std::os::raw::c_int,
    pub x978: ::std::os::raw::c_int,
    pub x97c: ::std::os::raw::c_int,
    pub x980: ::std::os::raw::c_int,
    pub x984: ::std::os::raw::c_int,
    pub x988: ::std::os::raw::c_int,
    pub x98c: ::std::os::raw::c_int,
    pub x990: ::std::os::raw::c_int,
    pub x994: ::std::os::raw::c_int,
    pub x998: ::std::os::raw::c_int,
    pub x99c: ::std::os::raw::c_int,
    pub x9a0: ::std::os::raw::c_int,
    pub x9a4: ::std::os::raw::c_int,
    pub x9a8: ::std::os::raw::c_int,
    pub x9ac: ::std::os::raw::c_int,
    pub x9b0: ::std::os::raw::c_int,
    pub x9b4: ::std::os::raw::c_int,
    pub x9b8: ::std::os::raw::c_int,
    pub x9bc: ::std::os::raw::c_int,
    pub x9c0: ::std::os::raw::c_int,
    pub x9c4: ::std::os::raw::c_int,
    pub x9c8: ::std::os::raw::c_int,
    pub x9cc: ::std::os::raw::c_int,
    pub x9d0: ::std::os::raw::c_int,
    pub x9d4: ::std::os::raw::c_int,
    pub x9d8: ::std::os::raw::c_int,
    pub x9dc: ::std::os::raw::c_int,
    pub x9e0: ::std::os::raw::c_int,
    pub x9e4: ::std::os::raw::c_int,
    pub x9e8: ::std::os::raw::c_int,
    pub x9ec: ::std::os::raw::c_int,
    pub x9f0: ::std::os::raw::c_int,
    pub x9f4: ::std::os::raw::c_int,
    pub x9f8: ::std::os::raw::c_int,
    pub x9fc: ::std::os::raw::c_int,
    pub xa00: ::std::os::raw::c_int,
    pub xa04: ::std::os::raw::c_int,
    pub xa08: ::std::os::raw::c_int,
    pub xa0c: ::std::os::raw::c_int,
    pub xa10: ::std::os::raw::c_int,
    pub xa14: ::std::os::raw::c_int,
    pub xa18: ::std::os::raw::c_int,
    pub xa1c: ::std::os::raw::c_int,
    pub xa20: ::std::os::raw::c_int,
    pub xa24: ::std::os::raw::c_int,
    pub xa28: ::std::os::raw::c_int,
    pub xa2c: ::std::os::raw::c_int,
    pub xa30: ::std::os::raw::c_int,
    pub xa34: ::std::os::raw::c_int,
    pub xa38: ::std::os::raw::c_int,
    pub xa3c: ::std::os::raw::c_int,
    pub xa40: ::std::os::raw::c_int,
    pub xa44: ::std::os::raw::c_int,
    pub xa48: ::std::os::raw::c_int,
    pub xa4c: ::std::os::raw::c_int,
    pub xa50: ::std::os::raw::c_int,
    pub xa54: ::std::os::raw::c_int,
    pub xa58: ::std::os::raw::c_int,
    pub xa5c: ::std::os::raw::c_int,
    pub xa60: ::std::os::raw::c_int,
    pub xa64: ::std::os::raw::c_int,
    pub xa68: ::std::os::raw::c_int,
    pub xa6c: ::std::os::raw::c_int,
    pub xa70: ::std::os::raw::c_int,
    pub xa74: ::std::os::raw::c_int,
    pub xa78: ::std::os::raw::c_int,
    pub xa7c: ::std::os::raw::c_int,
    pub xa80: ::std::os::raw::c_int,
    pub xa84: ::std::os::raw::c_int,
    pub xa88: ::std::os::raw::c_int,
    pub xa8c: ::std::os::raw::c_int,
    pub xa90: ::std::os::raw::c_int,
    pub xa94: ::std::os::raw::c_int,
    pub xa98: ::std::os::raw::c_int,
    pub xa9c: ::std::os::raw::c_int,
    pub xaa0: ::std::os::raw::c_int,
    pub xaa4: ::std::os::raw::c_int,
    pub xaa8: ::std::os::raw::c_int,
    pub xaac: ::std::os::raw::c_int,
    pub xab0: ::std::os::raw::c_int,
    pub xab4: ::std::os::raw::c_int,
    pub xab8: ::std::os::raw::c_int,
    pub xabc: ::std::os::raw::c_int,
    pub xac0: ::std::os::raw::c_int,
    pub xac4: ::std::os::raw::c_int,
    pub xac8: ::std::os::raw::c_int,
    pub xacc: ::std::os::raw::c_int,
    pub xad0: ::std::os::raw::c_int,
    pub xad4: ::std::os::raw::c_int,
    pub xad8: ::std::os::raw::c_int,
    pub xadc: ::std::os::raw::c_int,
    pub xae0: ::std::os::raw::c_int,
    pub xae4: ::std::os::raw::c_int,
    pub xae8: ::std::os::raw::c_int,
    pub xaec: ::std::os::raw::c_int,
    pub xaf0: ::std::os::raw::c_int,
    pub xaf4: ::std::os::raw::c_int,
    pub xaf8: ::std::os::raw::c_int,
    pub xafc: ::std::os::raw::c_int,
    pub xb00: ::std::os::raw::c_int,
    pub xb04: ::std::os::raw::c_int,
    pub xb08: ::std::os::raw::c_int,
    pub xb0c: ::std::os::raw::c_int,
    pub xb10: ::std::os::raw::c_int,
    pub xb14: ::std::os::raw::c_int,
    pub xb18: ::std::os::raw::c_int,
    pub xb1c: ::std::os::raw::c_int,
    pub xb20: ::std::os::raw::c_int,
    pub xb24: ::std::os::raw::c_int,
    pub xb28: ::std::os::raw::c_int,
    pub xb2c: ::std::os::raw::c_int,
    pub xb30: ::std::os::raw::c_int,
    pub xb34: ::std::os::raw::c_int,
    pub xb38: ::std::os::raw::c_int,
    pub xb3c: ::std::os::raw::c_int,
    pub xb40: ::std::os::raw::c_int,
    pub xb44: ::std::os::raw::c_int,
    pub xb48: ::std::os::raw::c_int,
    pub xb4c: ::std::os::raw::c_int,
    pub xb50: ::std::os::raw::c_int,
    pub xb54: ::std::os::raw::c_int,
    pub xb58: ::std::os::raw::c_int,
    pub xb5c: ::std::os::raw::c_int,
    pub xb60: ::std::os::raw::c_int,
    pub xb64: ::std::os::raw::c_int,
    pub xb68: ::std::os::raw::c_int,
    pub xb6c: ::std::os::raw::c_int,
    pub xb70: ::std::os::raw::c_int,
    pub xb74: ::std::os::raw::c_int,
    pub xb78: ::std::os::raw::c_int,
    pub xb7c: ::std::os::raw::c_int,
    pub xb80: ::std::os::raw::c_int,
    pub xb84: ::std::os::raw::c_int,
    pub xb88: ::std::os::raw::c_int,
    pub xb8c: ::std::os::raw::c_int,
    pub xb90: ::std::os::raw::c_int,
    pub xb94: ::std::os::raw::c_int,
    pub xb98: ::std::os::raw::c_int,
    pub xb9c: ::std::os::raw::c_int,
    pub xba0: ::std::os::raw::c_int,
    pub xba4: ::std::os::raw::c_int,
    pub xba8: ::std::os::raw::c_int,
    pub xbac: ::std::os::raw::c_int,
    pub xbb0: ::std::os::raw::c_int,
    pub xbb4: ::std::os::raw::c_int,
    pub xbb8: ::std::os::raw::c_int,
    pub xbbc: ::std::os::raw::c_int,
    pub xbc0: ::std::os::raw::c_int,
    pub xbc4: ::std::os::raw::c_int,
    pub xbc8: ::std::os::raw::c_int,
    pub xbcc: ::std::os::raw::c_int,
    pub xbd0: ::std::os::raw::c_int,
    pub xbd4: ::std::os::raw::c_int,
    pub xbd8: ::std::os::raw::c_int,
    pub xbdc: ::std::os::raw::c_int,
    pub xbe0: ::std::os::raw::c_int,
    pub xbe4: ::std::os::raw::c_int,
    pub xbe8: ::std::os::raw::c_int,
    pub xbec: ::std::os::raw::c_int,
    pub xbf0: ::std::os::raw::c_int,
    pub xbf4: ::std::os::raw::c_int,
    pub xbf8: ::std::os::raw::c_int,
    pub xbfc: ::std::os::raw::c_int,
    pub xc00: ::std::os::raw::c_int,
    pub xc04: ::std::os::raw::c_int,
    pub xc08: ::std::os::raw::c_int,
    pub xc0c: ::std::os::raw::c_int,
    pub xc10: ::std::os::raw::c_int,
    pub xc14: ::std::os::raw::c_int,
    pub xc18: ::std::os::raw::c_int,
    pub xc1c: ::std::os::raw::c_int,
    pub xc20: ::std::os::raw::c_int,
    pub xc24: ::std::os::raw::c_int,
    pub xc28: ::std::os::raw::c_int,
    pub xc2c: ::std::os::raw::c_int,
    pub xc30: ::std::os::raw::c_int,
    pub xc34: ::std::os::raw::c_int,
    pub xc38: ::std::os::raw::c_int,
    pub xc3c: ::std::os::raw::c_int,
    pub xc40: ::std::os::raw::c_int,
    pub xc44: ::std::os::raw::c_int,
    pub xc48: ::std::os::raw::c_int,
    pub xc4c: ::std::os::raw::c_int,
    pub xc50: ::std::os::raw::c_int,
    pub xc54: ::std::os::raw::c_int,
    pub xc58: ::std::os::raw::c_int,
    pub xc5c: ::std::os::raw::c_int,
    pub xc60: ::std::os::raw::c_int,
    pub xc64: ::std::os::raw::c_int,
    pub xc68: ::std::os::raw::c_int,
    pub xc6c: ::std::os::raw::c_int,
    pub xc70: ::std::os::raw::c_int,
    pub xc74: ::std::os::raw::c_int,
    pub xc78: ::std::os::raw::c_int,
    pub xc7c: ::std::os::raw::c_int,
    pub xc80: ::std::os::raw::c_int,
    pub xc84: ::std::os::raw::c_int,
    pub xc88: ::std::os::raw::c_int,
    pub xc8c: ::std::os::raw::c_int,
    pub xc90: ::std::os::raw::c_int,
    pub xc94: ::std::os::raw::c_int,
    pub xc98: ::std::os::raw::c_int,
    pub xc9c: ::std::os::raw::c_int,
    pub xca0: ::std::os::raw::c_int,
    pub xca4: ::std::os::raw::c_int,
    pub xca8: ::std::os::raw::c_int,
    pub xcac: ::std::os::raw::c_int,
    pub xcb0: ::std::os::raw::c_int,
    pub xcb4: ::std::os::raw::c_int,
    pub xcb8: ::std::os::raw::c_int,
    pub xcbc: ::std::os::raw::c_int,
    pub xcc0: ::std::os::raw::c_int,
    pub xcc4: ::std::os::raw::c_int,
    pub xcc8: ::std::os::raw::c_int,
    pub xccc: ::std::os::raw::c_int,
    pub xcd0: ::std::os::raw::c_int,
    pub xcd4: ::std::os::raw::c_int,
    pub xcd8: ::std::os::raw::c_int,
    pub xcdc: ::std::os::raw::c_int,
    pub xce0: ::std::os::raw::c_int,
    pub xce4: ::std::os::raw::c_int,
    pub xce8: ::std::os::raw::c_int,
    pub xcec: ::std::os::raw::c_int,
    pub xcf0: ::std::os::raw::c_int,
    pub xcf4: ::std::os::raw::c_int,
    pub xcf8: ::std::os::raw::c_int,
    pub xcfc: ::std::os::raw::c_int,
    pub xd00: ::std::os::raw::c_int,
    pub xd04: ::std::os::raw::c_int,
    pub xd08: ::std::os::raw::c_int,
    pub xd0c: ::std::os::raw::c_int,
    pub xd10: ::std::os::raw::c_int,
    pub xd14: ::std::os::raw::c_int,
    pub xd18: ::std::os::raw::c_int,
    pub xd1c: ::std::os::raw::c_int,
    pub xd20: ::std::os::raw::c_int,
    pub xd24: ::std::os::raw::c_int,
    pub xd28: ::std::os::raw::c_int,
    pub xd2c: ::std::os::raw::c_int,
    pub xd30: ::std::os::raw::c_int,
    pub xd34: ::std::os::raw::c_int,
    pub xd38: ::std::os::raw::c_int,
    pub xd3c: ::std::os::raw::c_int,
    pub xd40: ::std::os::raw::c_int,
    pub xd44: ::std::os::raw::c_int,
    pub xd48: ::std::os::raw::c_int,
    pub xd4c: ::std::os::raw::c_int,
    pub xd50: ::std::os::raw::c_int,
    pub xd54: ::std::os::raw::c_int,
    pub xd58: ::std::os::raw::c_int,
    pub xd5c: ::std::os::raw::c_int,
    pub xd60: ::std::os::raw::c_int,
    pub xd64: ::std::os::raw::c_int,
    pub xd68: ::std::os::raw::c_int,
    pub xd6c: ::std::os::raw::c_int,
    pub xd70: ::std::os::raw::c_int,
    pub xd74: ::std::os::raw::c_int,
    pub xd78: ::std::os::raw::c_int,
    pub xd7c: ::std::os::raw::c_int,
    pub xd80: ::std::os::raw::c_int,
    pub xd84: ::std::os::raw::c_int,
    pub xd88: ::std::os::raw::c_int,
    pub xd8c: ::std::os::raw::c_int,
    pub xd90: ::std::os::raw::c_int,
    pub xd94: ::std::os::raw::c_int,
    pub xd98: ::std::os::raw::c_int,
    pub xd9c: ::std::os::raw::c_int,
    pub xda0: ::std::os::raw::c_int,
    pub xda4: ::std::os::raw::c_int,
    pub xda8: ::std::os::raw::c_int,
    pub xdac: ::std::os::raw::c_int,
    pub xdb0: ::std::os::raw::c_int,
    pub xdb4: ::std::os::raw::c_int,
    pub xdb8: ::std::os::raw::c_int,
    pub xdbc: ::std::os::raw::c_int,
    pub xdc0: ::std::os::raw::c_int,
    pub xdc4: ::std::os::raw::c_int,
    pub xdc8: ::std::os::raw::c_int,
    pub xdcc: ::std::os::raw::c_int,
    pub xdd0: ::std::os::raw::c_int,
    pub xdd4: ::std::os::raw::c_int,
    pub xdd8: ::std::os::raw::c_int,
    pub xddc: ::std::os::raw::c_int,
    pub xde0: ::std::os::raw::c_int,
    pub xde4: ::std::os::raw::c_int,
    pub xde8: ::std::os::raw::c_int,
    pub xdec: ::std::os::raw::c_int,
    pub xdf0: ::std::os::raw::c_int,
    pub xdf4: ::std::os::raw::c_int,
    pub xdf8: ::std::os::raw::c_int,
    pub xdfc: ::std::os::raw::c_int,
    pub xe00: ::std::os::raw::c_int,
    pub xe04: ::std::os::raw::c_int,
    pub xe08: ::std::os::raw::c_int,
    pub xe0c: ::std::os::raw::c_int,
    pub xe10: ::std::os::raw::c_int,
    pub xe14: ::std::os::raw::c_int,
    pub xe18: ::std::os::raw::c_int,
    pub xe1c: ::std::os::raw::c_int,
    pub xe20: ::std::os::raw::c_int,
    pub xe24: ::std::os::raw::c_int,
    pub xe28: ::std::os::raw::c_int,
    pub xe2c: ::std::os::raw::c_int,
    pub xe30: ::std::os::raw::c_int,
    pub xe34: ::std::os::raw::c_int,
    pub xe38: ::std::os::raw::c_int,
    pub xe3c: ::std::os::raw::c_int,
    pub xe40: ::std::os::raw::c_int,
    pub xe44: ::std::os::raw::c_int,
    pub xe48: ::std::os::raw::c_int,
    pub xe4c: ::std::os::raw::c_int,
    pub xe50: ::std::os::raw::c_int,
    pub xe54: ::std::os::raw::c_int,
    pub xe58: ::std::os::raw::c_int,
    pub xe5c: ::std::os::raw::c_int,
    pub xe60: ::std::os::raw::c_int,
    pub xe64: ::std::os::raw::c_int,
    pub xe68: ::std::os::raw::c_int,
    pub xe6c: ::std::os::raw::c_int,
    pub xe70: ::std::os::raw::c_int,
    pub xe74: ::std::os::raw::c_int,
    pub xe78: ::std::os::raw::c_int,
    pub xe7c: ::std::os::raw::c_int,
    pub xe80: ::std::os::raw::c_int,
    pub xe84: ::std::os::raw::c_int,
    pub xe88: ::std::os::raw::c_int,
    pub xe8c: ::std::os::raw::c_int,
    pub xe90: ::std::os::raw::c_int,
    pub xe94: ::std::os::raw::c_int,
    pub xe98: ::std::os::raw::c_int,
    pub xe9c: ::std::os::raw::c_int,
    pub xea0: ::std::os::raw::c_int,
    pub xea4: ::std::os::raw::c_int,
    pub xea8: ::std::os::raw::c_int,
    pub xeac: ::std::os::raw::c_int,
    pub xeb0: ::std::os::raw::c_int,
    pub xeb4: ::std::os::raw::c_int,
    pub xeb8: ::std::os::raw::c_int,
    pub xebc: ::std::os::raw::c_int,
    pub xec0: ::std::os::raw::c_int,
    pub xec4: ::std::os::raw::c_int,
    pub xec8: ::std::os::raw::c_int,
    pub xecc: ::std::os::raw::c_int,
    pub xed0: ::std::os::raw::c_int,
    pub xed4: ::std::os::raw::c_int,
    pub xed8: ::std::os::raw::c_int,
    pub xedc: ::std::os::raw::c_int,
    pub xee0: ::std::os::raw::c_int,
    pub xee4: ::std::os::raw::c_int,
    pub xee8: ::std::os::raw::c_int,
    pub xeec: ::std::os::raw::c_int,
    pub xef0: ::std::os::raw::c_int,
    pub xef4: ::std::os::raw::c_int,
    pub xef8: ::std::os::raw::c_int,
    pub xefc: ::std::os::raw::c_int,
    pub xf00: ::std::os::raw::c_int,
    pub xf04: ::std::os::raw::c_int,
    pub xf08: ::std::os::raw::c_int,
    pub xf0c: ::std::os::raw::c_int,
    pub xf10: ::std::os::raw::c_int,
    pub xf14: ::std::os::raw::c_int,
    pub xf18: ::std::os::raw::c_int,
    pub xf1c: ::std::os::raw::c_int,
    pub xf20: ::std::os::raw::c_int,
    pub xf24: ::std::os::raw::c_int,
    pub xf28: ::std::os::raw::c_int,
    pub xf2c: ::std::os::raw::c_int,
    pub xf30: ::std::os::raw::c_int,
    pub xf34: ::std::os::raw::c_int,
    pub xf38: ::std::os::raw::c_int,
    pub xf3c: ::std::os::raw::c_int,
    pub xf40: ::std::os::raw::c_int,
    pub xf44: ::std::os::raw::c_int,
    pub xf48: ::std::os::raw::c_int,
    pub xf4c: ::std::os::raw::c_int,
    pub xf50: ::std::os::raw::c_int,
    pub xf54: ::std::os::raw::c_int,
    pub xf58: ::std::os::raw::c_int,
    pub xf5c: ::std::os::raw::c_int,
    pub xf60: ::std::os::raw::c_int,
    pub xf64: ::std::os::raw::c_int,
    pub xf68: ::std::os::raw::c_int,
    pub xf6c: ::std::os::raw::c_int,
    pub xf70: ::std::os::raw::c_int,
    pub xf74: ::std::os::raw::c_int,
    pub xf78: ::std::os::raw::c_int,
    pub xf7c: ::std::os::raw::c_int,
    pub xf80: ::std::os::raw::c_int,
    pub xf84: ::std::os::raw::c_int,
    pub xf88: ::std::os::raw::c_int,
    pub xf8c: ::std::os::raw::c_int,
    pub xf90: ::std::os::raw::c_int,
    pub xf94: ::std::os::raw::c_int,
    pub xf98: ::std::os::raw::c_int,
    pub xf9c: ::std::os::raw::c_int,
    pub xfa0: ::std::os::raw::c_int,
    pub xfa4: ::std::os::raw::c_int,
    pub xfa8: ::std::os::raw::c_int,
    pub xfac: ::std::os::raw::c_int,
    pub xfb0: ::std::os::raw::c_int,
    pub xfb4: ::std::os::raw::c_int,
    pub xfb8: ::std::os::raw::c_int,
    pub xfbc: ::std::os::raw::c_int,
    pub xfc0: ::std::os::raw::c_int,
    pub xfc4: ::std::os::raw::c_int,
    pub xfc8: ::std::os::raw::c_int,
    pub xfcc: ::std::os::raw::c_int,
    pub xfd0: ::std::os::raw::c_int,
    pub xfd4: ::std::os::raw::c_int,
    pub xfd8: ::std::os::raw::c_int,
    pub xfdc: ::std::os::raw::c_int,
    pub xfe0: ::std::os::raw::c_int,
    pub xfe4: ::std::os::raw::c_int,
    pub xfe8: ::std::os::raw::c_int,
    pub xfec: ::std::os::raw::c_int,
    pub xff0: ::std::os::raw::c_int,
    pub xff4: ::std::os::raw::c_int,
    pub xff8: ::std::os::raw::c_int,
    pub xffc: ::std::os::raw::c_int,
    pub x1000: ::std::os::raw::c_int,
    pub x1004: ::std::os::raw::c_int,
    pub x1008: ::std::os::raw::c_int,
    pub x100c: ::std::os::raw::c_int,
    pub x1010: ::std::os::raw::c_int,
    pub x1014: ::std::os::raw::c_int,
    pub x1018: ::std::os::raw::c_int,
    pub x101c: ::std::os::raw::c_int,
    pub x1020: ::std::os::raw::c_int,
    pub x1024: ::std::os::raw::c_int,
    pub x1028: ::std::os::raw::c_int,
    pub x102c: ::std::os::raw::c_int,
    pub x1030: ::std::os::raw::c_int,
    pub x1034: ::std::os::raw::c_int,
    pub x1038: ::std::os::raw::c_int,
    pub x103c: ::std::os::raw::c_int,
    pub x1040: ::std::os::raw::c_int,
    pub x1044: ::std::os::raw::c_int,
    pub x1048: ::std::os::raw::c_int,
    pub x104c: ::std::os::raw::c_int,
    pub x1050: ::std::os::raw::c_int,
    pub x1054: ::std::os::raw::c_int,
    pub x1058: ::std::os::raw::c_int,
    pub x105c: ::std::os::raw::c_int,
    pub x1060: ::std::os::raw::c_int,
    pub x1064: ::std::os::raw::c_int,
    pub x1068: ::std::os::raw::c_int,
    pub x106c: ::std::os::raw::c_int,
    pub x1070: ::std::os::raw::c_int,
    pub x1074: ::std::os::raw::c_int,
    pub x1078: ::std::os::raw::c_int,
    pub x107c: ::std::os::raw::c_int,
    pub x1080: ::std::os::raw::c_int,
    pub x1084: ::std::os::raw::c_int,
    pub x1088: ::std::os::raw::c_int,
    pub x108c: ::std::os::raw::c_int,
    pub x1090: ::std::os::raw::c_int,
    pub x1094: ::std::os::raw::c_int,
    pub x1098: ::std::os::raw::c_int,
    pub x109c: ::std::os::raw::c_int,
    pub x10a0: ::std::os::raw::c_int,
    pub x10a4: ::std::os::raw::c_int,
    pub x10a8: ::std::os::raw::c_int,
    pub x10ac: ::std::os::raw::c_int,
    pub x10b0: ::std::os::raw::c_int,
    pub x10b4: ::std::os::raw::c_int,
    pub x10b8: ::std::os::raw::c_int,
    pub x10bc: ::std::os::raw::c_int,
    pub x10c0: ::std::os::raw::c_int,
    pub x10c4: ::std::os::raw::c_int,
    pub x10c8: ::std::os::raw::c_int,
    pub x10cc: ::std::os::raw::c_int,
    pub x10d0: ::std::os::raw::c_int,
    pub x10d4: ::std::os::raw::c_int,
    pub x10d8: ::std::os::raw::c_int,
    pub x10dc: ::std::os::raw::c_int,
    pub x10e0: ::std::os::raw::c_int,
    pub x10e4: ::std::os::raw::c_int,
    pub x10e8: ::std::os::raw::c_int,
    pub x10ec: ::std::os::raw::c_int,
    pub x10f0: ::std::os::raw::c_int,
    pub x10f4: ::std::os::raw::c_int,
    pub x10f8: ::std::os::raw::c_int,
    pub x10fc: ::std::os::raw::c_int,
    pub x1100: ::std::os::raw::c_int,
    pub x1104: ::std::os::raw::c_int,
    pub x1108: ::std::os::raw::c_int,
    pub x110c: ::std::os::raw::c_int,
    pub x1110: ::std::os::raw::c_int,
    pub x1114: ::std::os::raw::c_int,
    pub x1118: ::std::os::raw::c_int,
    pub x111c: ::std::os::raw::c_int,
    pub x1120: ::std::os::raw::c_int,
    pub x1124: ::std::os::raw::c_int,
    pub x1128: ::std::os::raw::c_int,
    pub x112c: ::std::os::raw::c_int,
    pub x1130: ::std::os::raw::c_int,
    pub x1134: ::std::os::raw::c_int,
    pub x1138: ::std::os::raw::c_int,
    pub x113c: ::std::os::raw::c_int,
    pub x1140: ::std::os::raw::c_int,
    pub x1144: ::std::os::raw::c_int,
    pub x1148: ::std::os::raw::c_int,
    pub x114c: ::std::os::raw::c_int,
    pub x1150: ::std::os::raw::c_int,
    pub x1154: ::std::os::raw::c_int,
    pub x1158: ::std::os::raw::c_int,
    pub x115c: ::std::os::raw::c_int,
    pub x1160: ::std::os::raw::c_int,
    pub x1164: ::std::os::raw::c_int,
    pub x1168: ::std::os::raw::c_int,
    pub x116c: ::std::os::raw::c_int,
    pub x1170: ::std::os::raw::c_int,
    pub x1174: ::std::os::raw::c_int,
    pub x1178: ::std::os::raw::c_int,
    pub x117c: ::std::os::raw::c_int,
    pub x1180: ::std::os::raw::c_int,
    pub x1184: ::std::os::raw::c_int,
    pub x1188: ::std::os::raw::c_int,
    pub x118c: ::std::os::raw::c_int,
    pub x1190: ::std::os::raw::c_int,
    pub x1194: ::std::os::raw::c_int,
    pub x1198: ::std::os::raw::c_int,
    pub x119c: ::std::os::raw::c_int,
    pub x11a0: ::std::os::raw::c_int,
    pub x11a4: ::std::os::raw::c_int,
    pub x11a8: ::std::os::raw::c_int,
    pub x11ac: ::std::os::raw::c_int,
    pub x11b0: ::std::os::raw::c_int,
    pub x11b4: ::std::os::raw::c_int,
    pub x11b8: ::std::os::raw::c_int,
    pub x11bc: ::std::os::raw::c_int,
    pub x11c0: ::std::os::raw::c_int,
    pub x11c4: ::std::os::raw::c_int,
    pub x11c8: ::std::os::raw::c_int,
    pub x11cc: ::std::os::raw::c_int,
    pub x11d0: ::std::os::raw::c_int,
    pub x11d4: ::std::os::raw::c_int,
    pub x11d8: ::std::os::raw::c_int,
    pub x11dc: ::std::os::raw::c_int,
    pub x11e0: ::std::os::raw::c_int,
    pub x11e4: ::std::os::raw::c_int,
    pub x11e8: ::std::os::raw::c_int,
    pub x11ec: ::std::os::raw::c_int,
    pub x11f0: ::std::os::raw::c_int,
    pub x11f4: ::std::os::raw::c_int,
    pub x11f8: ::std::os::raw::c_int,
    pub x11fc: ::std::os::raw::c_int,
    pub x1200: ::std::os::raw::c_int,
    pub x1204: ::std::os::raw::c_int,
    pub x1208: ::std::os::raw::c_int,
    pub x120c: ::std::os::raw::c_int,
    pub x1210: ::std::os::raw::c_int,
    pub x1214: ::std::os::raw::c_int,
    pub x1218: ::std::os::raw::c_int,
    pub x121c: ::std::os::raw::c_int,
    pub x1220: ::std::os::raw::c_int,
    pub x1224: ::std::os::raw::c_int,
    pub x1228: ::std::os::raw::c_int,
    pub x122c: ::std::os::raw::c_int,
    pub x1230: ::std::os::raw::c_int,
    pub x1234: ::std::os::raw::c_int,
    pub x1238: ::std::os::raw::c_int,
    pub x123c: ::std::os::raw::c_int,
    pub x1240: ::std::os::raw::c_int,
    pub x1244: ::std::os::raw::c_int,
    pub x1248: ::std::os::raw::c_int,
    pub x124c: ::std::os::raw::c_int,
    pub x1250: ::std::os::raw::c_int,
    pub x1254: ::std::os::raw::c_int,
    pub x1258: ::std::os::raw::c_int,
    pub x125c: ::std::os::raw::c_int,
    pub x1260: ::std::os::raw::c_int,
    pub x1264: ::std::os::raw::c_int,
    pub x1268: ::std::os::raw::c_int,
    pub x126c: ::std::os::raw::c_int,
    pub x1270: ::std::os::raw::c_int,
    pub x1274: ::std::os::raw::c_int,
    pub x1278: ::std::os::raw::c_int,
    pub x127c: ::std::os::raw::c_int,
    pub x1280: ::std::os::raw::c_int,
    pub x1284: ::std::os::raw::c_int,
    pub x1288: ::std::os::raw::c_int,
    pub x128c: ::std::os::raw::c_int,
    pub x1290: ::std::os::raw::c_int,
    pub x1294: ::std::os::raw::c_int,
    pub x1298: ::std::os::raw::c_int,
    pub x129c: ::std::os::raw::c_int,
    pub x12a0: ::std::os::raw::c_int,
    pub x12a4: ::std::os::raw::c_int,
    pub x12a8: ::std::os::raw::c_int,
    pub x12ac: ::std::os::raw::c_int,
    pub x12b0: ::std::os::raw::c_int,
    pub x12b4: ::std::os::raw::c_int,
    pub x12b8: ::std::os::raw::c_int,
    pub x12bc: ::std::os::raw::c_int,
    pub x12c0: ::std::os::raw::c_int,
    pub x12c4: ::std::os::raw::c_int,
    pub x12c8: ::std::os::raw::c_int,
    pub x12cc: ::std::os::raw::c_int,
    pub x12d0: ::std::os::raw::c_int,
    pub x12d4: ::std::os::raw::c_int,
    pub x12d8: ::std::os::raw::c_int,
    pub x12dc: ::std::os::raw::c_int,
    pub x12e0: ::std::os::raw::c_int,
    pub x12e4: ::std::os::raw::c_int,
    pub x12e8: ::std::os::raw::c_int,
    pub x12ec: ::std::os::raw::c_int,
    pub x12f0: ::std::os::raw::c_int,
    pub x12f4: ::std::os::raw::c_int,
    pub x12f8: ::std::os::raw::c_int,
    pub x12fc: ::std::os::raw::c_int,
    pub x1300: ::std::os::raw::c_int,
    pub x1304: ::std::os::raw::c_int,
    pub x1308: ::std::os::raw::c_int,
    pub x130c: ::std::os::raw::c_int,
    pub x1310: ::std::os::raw::c_int,
    pub x1314: ::std::os::raw::c_int,
    pub x1318: ::std::os::raw::c_int,
    pub x131c: ::std::os::raw::c_int,
    pub x1320: ::std::os::raw::c_int,
    pub x1324: ::std::os::raw::c_int,
    pub x1328: ::std::os::raw::c_int,
    pub x132c: ::std::os::raw::c_int,
    pub x1330: ::std::os::raw::c_int,
    pub x1334: ::std::os::raw::c_int,
    pub x1338: ::std::os::raw::c_int,
    pub x133c: ::std::os::raw::c_int,
    pub x1340: ::std::os::raw::c_int,
    pub x1344: ::std::os::raw::c_int,
    pub x1348: ::std::os::raw::c_int,
    pub x134c: ::std::os::raw::c_int,
    pub x1350: ::std::os::raw::c_int,
    pub x1354: ::std::os::raw::c_int,
    pub x1358: ::std::os::raw::c_int,
    pub x135c: ::std::os::raw::c_int,
    pub x1360: ::std::os::raw::c_int,
    pub x1364: ::std::os::raw::c_int,
    pub x1368: ::std::os::raw::c_int,
    pub x136c: ::std::os::raw::c_int,
    pub x1370: ::std::os::raw::c_int,
    pub x1374: ::std::os::raw::c_int,
    pub x1378: ::std::os::raw::c_int,
    pub x137c: ::std::os::raw::c_int,
    pub x1380: ::std::os::raw::c_int,
    pub x1384: ::std::os::raw::c_int,
    pub x1388: ::std::os::raw::c_int,
    pub x138c: ::std::os::raw::c_int,
    pub x1390: ::std::os::raw::c_int,
    pub x1394: ::std::os::raw::c_int,
    pub x1398: ::std::os::raw::c_int,
    pub x139c: ::std::os::raw::c_int,
    pub x13a0: ::std::os::raw::c_int,
    pub x13a4: ::std::os::raw::c_int,
    pub x13a8: ::std::os::raw::c_int,
    pub x13ac: ::std::os::raw::c_int,
    pub x13b0: ::std::os::raw::c_int,
    pub x13b4: ::std::os::raw::c_int,
    pub x13b8: ::std::os::raw::c_int,
    pub x13bc: ::std::os::raw::c_int,
    pub x13c0: ::std::os::raw::c_int,
    pub x13c4: ::std::os::raw::c_int,
    pub x13c8: ::std::os::raw::c_int,
    pub x13cc: ::std::os::raw::c_int,
    pub x13d0: ::std::os::raw::c_int,
    pub x13d4: ::std::os::raw::c_int,
    pub x13d8: ::std::os::raw::c_int,
    pub x13dc: ::std::os::raw::c_int,
    pub x13e0: ::std::os::raw::c_int,
    pub x13e4: ::std::os::raw::c_int,
    pub x13e8: ::std::os::raw::c_int,
    pub x13ec: ::std::os::raw::c_int,
    pub x13f0: ::std::os::raw::c_int,
    pub x13f4: ::std::os::raw::c_int,
    pub x13f8: ::std::os::raw::c_int,
    pub x13fc: ::std::os::raw::c_int,
    pub x1400: ::std::os::raw::c_int,
    pub x1404: ::std::os::raw::c_int,
    pub x1408: ::std::os::raw::c_int,
    pub x140c: ::std::os::raw::c_int,
    pub x1410: ::std::os::raw::c_int,
    pub x1414: ::std::os::raw::c_int,
    pub x1418: ::std::os::raw::c_int,
    pub x141c: ::std::os::raw::c_int,
    pub x1420: ::std::os::raw::c_int,
    pub x1424: ::std::os::raw::c_int,
    pub x1428: ::std::os::raw::c_int,
    pub x142c: ::std::os::raw::c_int,
    pub x1430: ::std::os::raw::c_int,
    pub x1434: ::std::os::raw::c_int,
    pub x1438: ::std::os::raw::c_int,
    pub x143c: ::std::os::raw::c_int,
    pub x1440: ::std::os::raw::c_int,
    pub x1444: ::std::os::raw::c_int,
    pub x1448: ::std::os::raw::c_int,
    pub x144c: ::std::os::raw::c_int,
    pub x1450: ::std::os::raw::c_int,
    pub x1454: ::std::os::raw::c_int,
    pub x1458: ::std::os::raw::c_int,
    pub x145c: ::std::os::raw::c_int,
    pub x1460: ::std::os::raw::c_int,
    pub x1464: ::std::os::raw::c_int,
    pub x1468: ::std::os::raw::c_int,
    pub x146c: ::std::os::raw::c_int,
    pub x1470: ::std::os::raw::c_int,
    pub x1474: ::std::os::raw::c_int,
    pub x1478: ::std::os::raw::c_int,
    pub x147c: ::std::os::raw::c_int,
    pub x1480: ::std::os::raw::c_int,
    pub x1484: ::std::os::raw::c_int,
    pub x1488: ::std::os::raw::c_int,
    pub x148c: ::std::os::raw::c_int,
    pub x1490: ::std::os::raw::c_int,
    pub x1494: ::std::os::raw::c_int,
    pub x1498: ::std::os::raw::c_int,
    pub x149c: ::std::os::raw::c_int,
    pub x14a0: ::std::os::raw::c_int,
    pub x14a4: ::std::os::raw::c_int,
    pub x14a8: ::std::os::raw::c_int,
    pub x14ac: ::std::os::raw::c_int,
    pub x14b0: ::std::os::raw::c_int,
    pub x14b4: ::std::os::raw::c_int,
    pub x14b8: ::std::os::raw::c_int,
    pub x14bc: ::std::os::raw::c_int,
    pub x14c0: ::std::os::raw::c_int,
    pub x14c4: ::std::os::raw::c_int,
    pub x14c8: ::std::os::raw::c_int,
    pub x14cc: ::std::os::raw::c_int,
    pub x14d0: ::std::os::raw::c_int,
    pub x14d4: ::std::os::raw::c_int,
    pub x14d8: ::std::os::raw::c_int,
    pub x14dc: ::std::os::raw::c_int,
    pub x14e0: ::std::os::raw::c_int,
    pub x14e4: ::std::os::raw::c_int,
    pub x14e8: ::std::os::raw::c_int,
    pub x14ec: ::std::os::raw::c_int,
    pub x14f0: ::std::os::raw::c_int,
    pub x14f4: ::std::os::raw::c_int,
    pub x14f8: ::std::os::raw::c_int,
    pub x14fc: ::std::os::raw::c_int,
    pub x1500: ::std::os::raw::c_int,
    pub x1504: ::std::os::raw::c_int,
    pub x1508: ::std::os::raw::c_int,
    pub x150c: ::std::os::raw::c_int,
    pub x1510: ::std::os::raw::c_int,
    pub x1514: ::std::os::raw::c_int,
    pub x1518: ::std::os::raw::c_int,
    pub x151c: ::std::os::raw::c_int,
    pub x1520: ::std::os::raw::c_int,
    pub x1524: ::std::os::raw::c_int,
    pub x1528: ::std::os::raw::c_int,
    pub x152c: ::std::os::raw::c_int,
    pub x1530: ::std::os::raw::c_int,
    pub x1534: ::std::os::raw::c_int,
    pub x1538: ::std::os::raw::c_int,
    pub x153c: ::std::os::raw::c_int,
    pub x1540: ::std::os::raw::c_int,
    pub x1544: ::std::os::raw::c_int,
    pub x1548: ::std::os::raw::c_int,
    pub x154c: ::std::os::raw::c_int,
    pub x1550: ::std::os::raw::c_int,
    pub x1554: ::std::os::raw::c_int,
    pub x1558: ::std::os::raw::c_int,
    pub x155c: ::std::os::raw::c_int,
    pub x1560: ::std::os::raw::c_int,
    pub x1564: ::std::os::raw::c_int,
    pub x1568: ::std::os::raw::c_int,
    pub x156c: ::std::os::raw::c_int,
    pub x1570: ::std::os::raw::c_int,
    pub x1574: ::std::os::raw::c_int,
    pub x1578: ::std::os::raw::c_int,
    pub x157c: ::std::os::raw::c_int,
    pub x1580: ::std::os::raw::c_int,
    pub x1584: ::std::os::raw::c_int,
    pub x1588: ::std::os::raw::c_int,
    pub x158c: ::std::os::raw::c_int,
    pub x1590: ::std::os::raw::c_int,
    pub x1594: ::std::os::raw::c_int,
    pub x1598: ::std::os::raw::c_int,
    pub x159c: ::std::os::raw::c_int,
    pub x15a0: ::std::os::raw::c_int,
    pub x15a4: ::std::os::raw::c_int,
    pub x15a8: ::std::os::raw::c_int,
    pub x15ac: ::std::os::raw::c_int,
    pub x15b0: ::std::os::raw::c_int,
    pub x15b4: ::std::os::raw::c_int,
    pub x15b8: ::std::os::raw::c_int,
    pub x15bc: ::std::os::raw::c_int,
    pub x15c0: ::std::os::raw::c_int,
    pub x15c4: ::std::os::raw::c_int,
    pub x15c8: ::std::os::raw::c_int,
    pub x15cc: ::std::os::raw::c_int,
    pub x15d0: ::std::os::raw::c_int,
    pub x15d4: ::std::os::raw::c_int,
    pub x15d8: ::std::os::raw::c_int,
    pub x15dc: ::std::os::raw::c_int,
    pub x15e0: ::std::os::raw::c_int,
    pub x15e4: ::std::os::raw::c_int,
    pub x15e8: ::std::os::raw::c_int,
    pub x15ec: ::std::os::raw::c_int,
    pub x15f0: ::std::os::raw::c_int,
    pub x15f4: ::std::os::raw::c_int,
    pub x15f8: ::std::os::raw::c_int,
    pub x15fc: ::std::os::raw::c_int,
    pub x1600: ::std::os::raw::c_int,
    pub x1604: ::std::os::raw::c_int,
    pub x1608: ::std::os::raw::c_int,
    pub x160c: ::std::os::raw::c_int,
    pub x1610: ::std::os::raw::c_int,
    pub x1614: ::std::os::raw::c_int,
    pub x1618: ::std::os::raw::c_int,
    pub x161c: ::std::os::raw::c_int,
    pub x1620: ::std::os::raw::c_int,
    pub x1624: ::std::os::raw::c_int,
    pub x1628: ::std::os::raw::c_int,
    pub x162c: ::std::os::raw::c_int,
    pub x1630: ::std::os::raw::c_int,
    pub x1634: ::std::os::raw::c_int,
    pub x1638: ::std::os::raw::c_int,
    pub x163c: ::std::os::raw::c_int,
    pub x1640: ::std::os::raw::c_int,
    pub x1644: ::std::os::raw::c_int,
    pub x1648: ::std::os::raw::c_int,
    pub x164c: ::std::os::raw::c_int,
    pub x1650: ::std::os::raw::c_int,
    pub x1654: ::std::os::raw::c_int,
    pub x1658: ::std::os::raw::c_int,
    pub x165c: ::std::os::raw::c_int,
    pub x1660: ::std::os::raw::c_int,
    pub x1664: ::std::os::raw::c_int,
    pub x1668: ::std::os::raw::c_int,
    pub x166c: ::std::os::raw::c_int,
    pub x1670: ::std::os::raw::c_int,
    pub x1674: ::std::os::raw::c_int,
    pub x1678: ::std::os::raw::c_int,
    pub x167c: ::std::os::raw::c_int,
    pub x1680: ::std::os::raw::c_int,
    pub x1684: ::std::os::raw::c_int,
    pub x1688: ::std::os::raw::c_int,
    pub x168c: ::std::os::raw::c_int,
    pub x1690: ::std::os::raw::c_int,
    pub x1694: ::std::os::raw::c_int,
    pub x1698: ::std::os::raw::c_int,
    pub x169c: ::std::os::raw::c_int,
    pub x16a0: ::std::os::raw::c_int,
    pub x16a4: ::std::os::raw::c_int,
    pub x16a8: ::std::os::raw::c_int,
    pub x16ac: ::std::os::raw::c_int,
    pub x16b0: ::std::os::raw::c_int,
    pub x16b4: ::std::os::raw::c_int,
    pub x16b8: ::std::os::raw::c_int,
    pub x16bc: ::std::os::raw::c_int,
    pub x16c0: ::std::os::raw::c_int,
    pub x16c4: ::std::os::raw::c_int,
    pub x16c8: ::std::os::raw::c_int,
    pub x16cc: ::std::os::raw::c_int,
    pub x16d0: ::std::os::raw::c_int,
    pub x16d4: ::std::os::raw::c_int,
    pub x16d8: ::std::os::raw::c_int,
    pub x16dc: ::std::os::raw::c_int,
    pub x16e0: ::std::os::raw::c_int,
    pub x16e4: ::std::os::raw::c_int,
    pub x16e8: ::std::os::raw::c_int,
    pub x16ec: ::std::os::raw::c_int,
    pub x16f0: ::std::os::raw::c_int,
    pub x16f4: ::std::os::raw::c_int,
    pub x16f8: ::std::os::raw::c_int,
    pub x16fc: ::std::os::raw::c_int,
    pub x1700: ::std::os::raw::c_int,
    pub x1704: ::std::os::raw::c_int,
    pub x1708: ::std::os::raw::c_int,
    pub x170c: ::std::os::raw::c_int,
    pub x1710: ::std::os::raw::c_int,
    pub x1714: ::std::os::raw::c_int,
    pub x1718: ::std::os::raw::c_int,
    pub x171c: ::std::os::raw::c_int,
    pub x1720: ::std::os::raw::c_int,
    pub x1724: ::std::os::raw::c_int,
    pub x1728: ::std::os::raw::c_int,
    pub x172c: ::std::os::raw::c_int,
    pub x1730: ::std::os::raw::c_int,
    pub x1734: ::std::os::raw::c_int,
    pub x1738: ::std::os::raw::c_int,
    pub x173c: ::std::os::raw::c_int,
    pub x1740: ::std::os::raw::c_int,
    pub x1744: ::std::os::raw::c_int,
    pub x1748: ::std::os::raw::c_int,
    pub x174c: ::std::os::raw::c_int,
    pub x1750: ::std::os::raw::c_int,
    pub x1754: ::std::os::raw::c_int,
    pub x1758: ::std::os::raw::c_int,
    pub x175c: ::std::os::raw::c_int,
    pub x1760: ::std::os::raw::c_int,
    pub x1764: ::std::os::raw::c_int,
    pub x1768: ::std::os::raw::c_int,
    pub x176c: ::std::os::raw::c_int,
    pub x1770: ::std::os::raw::c_int,
    pub x1774: ::std::os::raw::c_int,
    pub x1778: ::std::os::raw::c_int,
    pub x177c: ::std::os::raw::c_int,
    pub x1780: ::std::os::raw::c_int,
    pub x1784: ::std::os::raw::c_int,
    pub x1788: ::std::os::raw::c_int,
    pub x178c: ::std::os::raw::c_int,
    pub x1790: ::std::os::raw::c_int,
    pub x1794: ::std::os::raw::c_int,
    pub x1798: ::std::os::raw::c_int,
    pub x179c: ::std::os::raw::c_int,
    pub x17a0: ::std::os::raw::c_int,
    pub x17a4: ::std::os::raw::c_int,
    pub x17a8: ::std::os::raw::c_int,
    pub x17ac: ::std::os::raw::c_int,
    pub x17b0: ::std::os::raw::c_int,
    pub x17b4: ::std::os::raw::c_int,
    pub x17b8: ::std::os::raw::c_int,
    pub x17bc: ::std::os::raw::c_int,
    pub x17c0: ::std::os::raw::c_int,
    pub x17c4: ::std::os::raw::c_int,
    pub x17c8: ::std::os::raw::c_int,
    pub x17cc: ::std::os::raw::c_int,
    pub x17d0: ::std::os::raw::c_int,
    pub x17d4: ::std::os::raw::c_int,
    pub x17d8: ::std::os::raw::c_int,
    pub x17dc: ::std::os::raw::c_int,
    pub x17e0: ::std::os::raw::c_int,
    pub x17e4: ::std::os::raw::c_int,
    pub x17e8: ::std::os::raw::c_int,
    pub x17ec: ::std::os::raw::c_int,
    pub x17f0: ::std::os::raw::c_int,
    pub x17f4: ::std::os::raw::c_int,
    pub x17f8: ::std::os::raw::c_int,
    pub x17fc: ::std::os::raw::c_int,
    pub x1800: ::std::os::raw::c_int,
    pub x1804: ::std::os::raw::c_int,
    pub x1808: ::std::os::raw::c_int,
    pub x180c: ::std::os::raw::c_int,
    pub x1810: ::std::os::raw::c_int,
    pub x1814: ::std::os::raw::c_int,
    pub x1818: ::std::os::raw::c_int,
    pub x181c: ::std::os::raw::c_int,
    pub x1820: ::std::os::raw::c_int,
    pub x1824: ::std::os::raw::c_int,
    pub x1828: ::std::os::raw::c_int,
    pub x182c: ::std::os::raw::c_int,
    pub x1830: ::std::os::raw::c_int,
    pub x1834: ::std::os::raw::c_int,
    pub x1838: ::std::os::raw::c_int,
    pub x183c: ::std::os::raw::c_int,
    pub x1840: ::std::os::raw::c_int,
    pub x1844: ::std::os::raw::c_int,
    pub x1848: ::std::os::raw::c_int,
    pub x184c: ::std::os::raw::c_int,
    pub x1850: ::std::os::raw::c_int,
    pub x1854: ::std::os::raw::c_int,
    pub x1858: ::std::os::raw::c_int,
    pub x185c: ::std::os::raw::c_int,
    pub x1860: ::std::os::raw::c_int,
    pub x1864: ::std::os::raw::c_int,
    pub x1868: ::std::os::raw::c_int,
    pub x186c: ::std::os::raw::c_int,
    pub x1870: ::std::os::raw::c_int,
    pub x1874: ::std::os::raw::c_int,
    pub x1878: ::std::os::raw::c_int,
    pub x187c: ::std::os::raw::c_int,
    pub x1880: ::std::os::raw::c_int,
    pub x1884: ::std::os::raw::c_int,
    pub x1888: ::std::os::raw::c_int,
    pub x188c: ::std::os::raw::c_int,
    pub x1890: ::std::os::raw::c_int,
    pub x1894: ::std::os::raw::c_int,
    pub x1898: ::std::os::raw::c_int,
    pub x189c: ::std::os::raw::c_int,
    pub x18a0: ::std::os::raw::c_int,
    pub x18a4: ::std::os::raw::c_int,
    pub x18a8: ::std::os::raw::c_int,
    pub x18ac: ::std::os::raw::c_int,
    pub x18b0: ::std::os::raw::c_int,
    pub x18b4: ::std::os::raw::c_int,
    pub x18b8: ::std::os::raw::c_int,
    pub x18bc: ::std::os::raw::c_int,
    pub x18c0: ::std::os::raw::c_int,
    pub x18c4: ::std::os::raw::c_int,
    pub x18c8: ::std::os::raw::c_int,
    pub x18cc: ::std::os::raw::c_int,
    pub x18d0: ::std::os::raw::c_int,
    pub x18d4: ::std::os::raw::c_int,
    pub x18d8: ::std::os::raw::c_int,
    pub x18dc: ::std::os::raw::c_int,
    pub x18e0: ::std::os::raw::c_int,
    pub x18e4: ::std::os::raw::c_int,
    pub x18e8: ::std::os::raw::c_int,
    pub x18ec: ::std::os::raw::c_int,
    pub x18f0: ::std::os::raw::c_int,
    pub x18f4: ::std::os::raw::c_int,
    pub x18f8: ::std::os::raw::c_int,
    pub x18fc: ::std::os::raw::c_int,
    pub x1900: ::std::os::raw::c_int,
    pub x1904: ::std::os::raw::c_int,
    pub x1908: ::std::os::raw::c_int,
    pub x190c: ::std::os::raw::c_int,
    pub x1910: ::std::os::raw::c_int,
    pub x1914: ::std::os::raw::c_int,
    pub x1918: ::std::os::raw::c_int,
    pub x191c: ::std::os::raw::c_int,
    pub x1920: ::std::os::raw::c_int,
    pub x1924: ::std::os::raw::c_int,
    pub x1928: ::std::os::raw::c_int,
    pub x192c: ::std::os::raw::c_int,
    pub x1930: ::std::os::raw::c_int,
    pub x1934: ::std::os::raw::c_int,
    pub x1938: ::std::os::raw::c_int,
    pub x193c: ::std::os::raw::c_int,
    pub x1940: ::std::os::raw::c_int,
    pub x1944: ::std::os::raw::c_int,
    pub x1948: ::std::os::raw::c_int,
    pub x194c: ::std::os::raw::c_int,
    pub x1950: ::std::os::raw::c_int,
    pub x1954: ::std::os::raw::c_int,
    pub x1958: ::std::os::raw::c_int,
    pub x195c: ::std::os::raw::c_int,
    pub x1960: ::std::os::raw::c_int,
    pub x1964: ::std::os::raw::c_int,
    pub x1968: ::std::os::raw::c_int,
    pub x196c: ::std::os::raw::c_int,
    pub x1970: ::std::os::raw::c_int,
    pub x1974: ::std::os::raw::c_int,
    pub x1978: ::std::os::raw::c_int,
    pub x197c: ::std::os::raw::c_int,
    pub x1980: ::std::os::raw::c_int,
    pub x1984: ::std::os::raw::c_int,
    pub x1988: ::std::os::raw::c_int,
    pub x198c: ::std::os::raw::c_int,
    pub x1990: ::std::os::raw::c_int,
    pub x1994: ::std::os::raw::c_int,
    pub x1998: ::std::os::raw::c_int,
    pub x199c: ::std::os::raw::c_int,
    pub x19a0: ::std::os::raw::c_int,
    pub x19a4: ::std::os::raw::c_int,
    pub x19a8: ::std::os::raw::c_int,
    pub x19ac: ::std::os::raw::c_int,
    pub x19b0: ::std::os::raw::c_int,
    pub x19b4: ::std::os::raw::c_int,
    pub x19b8: ::std::os::raw::c_int,
    pub x19bc: ::std::os::raw::c_int,
    pub x19c0: ::std::os::raw::c_int,
    pub x19c4: ::std::os::raw::c_int,
    pub x19c8: ::std::os::raw::c_int,
    pub x19cc: ::std::os::raw::c_int,
    pub x19d0: ::std::os::raw::c_int,
    pub x19d4: ::std::os::raw::c_int,
    pub x19d8: ::std::os::raw::c_int,
    pub x19dc: ::std::os::raw::c_int,
    pub x19e0: ::std::os::raw::c_int,
    pub x19e4: ::std::os::raw::c_int,
    pub x19e8: ::std::os::raw::c_int,
    pub x19ec: ::std::os::raw::c_int,
    pub x19f0: ::std::os::raw::c_int,
    pub x19f4: ::std::os::raw::c_int,
    pub x19f8: ::std::os::raw::c_int,
    pub x19fc: ::std::os::raw::c_int,
    pub x1a00: ::std::os::raw::c_int,
    pub x1a04: ::std::os::raw::c_int,
    pub x1a08: ::std::os::raw::c_int,
    pub x1a0c: ::std::os::raw::c_int,
    pub x1a10: ::std::os::raw::c_int,
    pub x1a14: ::std::os::raw::c_int,
    pub x1a18: ::std::os::raw::c_int,
    pub x1a1c: ::std::os::raw::c_int,
    pub x1a20: ::std::os::raw::c_int,
    pub x1a24: ::std::os::raw::c_int,
    pub x1a28: ::std::os::raw::c_int,
    pub x1a2c: ::std::os::raw::c_int,
    pub x1a30: ::std::os::raw::c_int,
    pub x1a34: ::std::os::raw::c_int,
    pub x1a38: ::std::os::raw::c_int,
    pub x1a3c: ::std::os::raw::c_int,
    pub x1a40: ::std::os::raw::c_int,
    pub x1a44: ::std::os::raw::c_int,
    pub x1a48: ::std::os::raw::c_int,
    pub x1a4c: ::std::os::raw::c_int,
    pub x1a50: ::std::os::raw::c_int,
    pub x1a54: ::std::os::raw::c_int,
    pub x1a58: ::std::os::raw::c_int,
    pub x1a5c: ::std::os::raw::c_int,
    pub x1a60: ::std::os::raw::c_int,
    pub x1a64: ::std::os::raw::c_int,
    pub x1a68: ::std::os::raw::c_int,
    pub x1a6c: ::std::os::raw::c_int,
    pub x1a70: ::std::os::raw::c_int,
    pub x1a74: ::std::os::raw::c_int,
    pub x1a78: ::std::os::raw::c_int,
    pub x1a7c: ::std::os::raw::c_int,
    pub x1a80: ::std::os::raw::c_int,
    pub x1a84: ::std::os::raw::c_int,
    pub x1a88: ::std::os::raw::c_int,
    pub x1a8c: ::std::os::raw::c_int,
    pub x1a90: ::std::os::raw::c_int,
    pub x1a94: ::std::os::raw::c_int,
    pub x1a98: ::std::os::raw::c_int,
    pub x1a9c: ::std::os::raw::c_int,
    pub x1aa0: ::std::os::raw::c_int,
    pub x1aa4: ::std::os::raw::c_int,
    pub x1aa8: ::std::os::raw::c_int,
    pub x1aac: ::std::os::raw::c_int,
    pub x1ab0: ::std::os::raw::c_int,
    pub x1ab4: ::std::os::raw::c_int,
    pub x1ab8: ::std::os::raw::c_int,
    pub x1abc: ::std::os::raw::c_int,
    pub x1ac0: ::std::os::raw::c_int,
    pub x1ac4: ::std::os::raw::c_int,
    pub x1ac8: ::std::os::raw::c_int,
    pub x1acc: ::std::os::raw::c_int,
    pub x1ad0: ::std::os::raw::c_int,
    pub x1ad4: ::std::os::raw::c_int,
    pub x1ad8: ::std::os::raw::c_int,
    pub x1adc: ::std::os::raw::c_int,
    pub x1ae0: ::std::os::raw::c_int,
    pub x1ae4: ::std::os::raw::c_int,
    pub x1ae8: ::std::os::raw::c_int,
    pub x1aec: ::std::os::raw::c_int,
    pub x1af0: ::std::os::raw::c_int,
    pub x1af4: ::std::os::raw::c_int,
    pub x1af8: ::std::os::raw::c_int,
    pub x1afc: ::std::os::raw::c_int,
    pub x1b00: ::std::os::raw::c_int,
    pub x1b04: ::std::os::raw::c_int,
    pub x1b08: ::std::os::raw::c_int,
    pub x1b0c: ::std::os::raw::c_int,
    pub x1b10: ::std::os::raw::c_int,
    pub x1b14: ::std::os::raw::c_int,
    pub x1b18: ::std::os::raw::c_int,
    pub x1b1c: ::std::os::raw::c_int,
    pub x1b20: ::std::os::raw::c_int,
    pub x1b24: ::std::os::raw::c_int,
    pub x1b28: ::std::os::raw::c_int,
    pub x1b2c: ::std::os::raw::c_int,
    pub x1b30: ::std::os::raw::c_int,
    pub x1b34: ::std::os::raw::c_int,
    pub x1b38: ::std::os::raw::c_int,
    pub x1b3c: ::std::os::raw::c_int,
    pub x1b40: ::std::os::raw::c_int,
    pub x1b44: ::std::os::raw::c_int,
    pub x1b48: ::std::os::raw::c_int,
    pub x1b4c: ::std::os::raw::c_int,
    pub x1b50: ::std::os::raw::c_int,
    pub x1b54: ::std::os::raw::c_int,
    pub x1b58: ::std::os::raw::c_int,
    pub x1b5c: ::std::os::raw::c_int,
    pub x1b60: ::std::os::raw::c_int,
    pub x1b64: ::std::os::raw::c_int,
    pub x1b68: ::std::os::raw::c_int,
    pub x1b6c: ::std::os::raw::c_int,
    pub x1b70: ::std::os::raw::c_int,
    pub x1b74: ::std::os::raw::c_int,
    pub x1b78: ::std::os::raw::c_int,
    pub x1b7c: ::std::os::raw::c_int,
    pub x1b80: ::std::os::raw::c_int,
    pub x1b84: ::std::os::raw::c_int,
    pub x1b88: ::std::os::raw::c_int,
    pub x1b8c: ::std::os::raw::c_int,
    pub x1b90: ::std::os::raw::c_int,
    pub x1b94: ::std::os::raw::c_int,
    pub x1b98: ::std::os::raw::c_int,
    pub x1b9c: ::std::os::raw::c_int,
    pub x1ba0: ::std::os::raw::c_int,
    pub x1ba4: ::std::os::raw::c_int,
    pub x1ba8: ::std::os::raw::c_int,
    pub x1bac: ::std::os::raw::c_int,
    pub x1bb0: ::std::os::raw::c_int,
    pub x1bb4: ::std::os::raw::c_int,
    pub x1bb8: ::std::os::raw::c_int,
    pub x1bbc: ::std::os::raw::c_int,
    pub x1bc0: ::std::os::raw::c_int,
    pub x1bc4: ::std::os::raw::c_int,
    pub x1bc8: ::std::os::raw::c_int,
    pub x1bcc: ::std::os::raw::c_int,
    pub x1bd0: ::std::os::raw::c_int,
    pub x1bd4: ::std::os::raw::c_int,
    pub x1bd8: ::std::os::raw::c_int,
    pub x1bdc: ::std::os::raw::c_int,
    pub x1be0: ::std::os::raw::c_int,
    pub x1be4: ::std::os::raw::c_int,
    pub x1be8: ::std::os::raw::c_int,
    pub x1bec: ::std::os::raw::c_int,
    pub x1bf0: ::std::os::raw::c_int,
    pub x1bf4: ::std::os::raw::c_int,
    pub x1bf8: ::std::os::raw::c_int,
    pub x1bfc: ::std::os::raw::c_int,
    pub x1c00: ::std::os::raw::c_int,
    pub x1c04: ::std::os::raw::c_int,
    pub x1c08: ::std::os::raw::c_int,
    pub x1c0c: ::std::os::raw::c_int,
    pub x1c10: ::std::os::raw::c_int,
    pub x1c14: ::std::os::raw::c_int,
    pub x1c18: ::std::os::raw::c_int,
    pub x1c1c: ::std::os::raw::c_int,
    pub x1c20: ::std::os::raw::c_int,
    pub x1c24: ::std::os::raw::c_int,
    pub x1c28: ::std::os::raw::c_int,
    pub x1c2c: ::std::os::raw::c_int,
    pub x1c30: ::std::os::raw::c_int,
    pub x1c34: ::std::os::raw::c_int,
    pub x1c38: ::std::os::raw::c_int,
    pub x1c3c: ::std::os::raw::c_int,
    pub x1c40: ::std::os::raw::c_int,
    pub x1c44: ::std::os::raw::c_int,
    pub x1c48: ::std::os::raw::c_int,
    pub x1c4c: ::std::os::raw::c_int,
    pub x1c50: ::std::os::raw::c_int,
    pub x1c54: ::std::os::raw::c_int,
    pub x1c58: ::std::os::raw::c_int,
    pub x1c5c: ::std::os::raw::c_int,
    pub x1c60: ::std::os::raw::c_int,
    pub x1c64: ::std::os::raw::c_int,
    pub x1c68: ::std::os::raw::c_int,
    pub x1c6c: ::std::os::raw::c_int,
    pub x1c70: ::std::os::raw::c_int,
    pub x1c74: ::std::os::raw::c_int,
    pub x1c78: ::std::os::raw::c_int,
    pub x1c7c: ::std::os::raw::c_int,
    pub x1c80: ::std::os::raw::c_int,
    pub x1c84: ::std::os::raw::c_int,
    pub x1c88: ::std::os::raw::c_int,
    pub x1c8c: ::std::os::raw::c_int,
    pub x1c90: ::std::os::raw::c_int,
    pub x1c94: ::std::os::raw::c_int,
    pub x1c98: ::std::os::raw::c_int,
    pub x1c9c: ::std::os::raw::c_int,
    pub x1ca0: ::std::os::raw::c_int,
    pub x1ca4: ::std::os::raw::c_int,
    pub x1ca8: ::std::os::raw::c_int,
    pub x1cac: ::std::os::raw::c_int,
    pub x1cb0: ::std::os::raw::c_int,
    pub x1cb4: ::std::os::raw::c_int,
    pub x1cb8: ::std::os::raw::c_int,
    pub x1cbc: ::std::os::raw::c_int,
    pub x1cc0: ::std::os::raw::c_int,
    pub x1cc4: ::std::os::raw::c_int,
    pub x1cc8: ::std::os::raw::c_int,
    pub x1ccc: ::std::os::raw::c_int,
    pub x1cd0: ::std::os::raw::c_int,
    pub x1cd4: ::std::os::raw::c_int,
    pub x1cd8: ::std::os::raw::c_int,
    pub x1cdc: ::std::os::raw::c_int,
    pub x1ce0: ::std::os::raw::c_int,
    pub x1ce4: ::std::os::raw::c_int,
    pub x1ce8: ::std::os::raw::c_int,
    pub x1cec: ::std::os::raw::c_int,
    pub x1cf0: ::std::os::raw::c_int,
    pub x1cf4: ::std::os::raw::c_int,
    pub x1cf8: ::std::os::raw::c_int,
    pub x1cfc: ::std::os::raw::c_int,
    pub x1d00: ::std::os::raw::c_int,
    pub x1d04: ::std::os::raw::c_int,
    pub x1d08: ::std::os::raw::c_int,
    pub x1d0c: ::std::os::raw::c_int,
    pub x1d10: ::std::os::raw::c_int,
    pub x1d14: ::std::os::raw::c_int,
    pub x1d18: ::std::os::raw::c_int,
    pub x1d1c: ::std::os::raw::c_int,
    pub x1d20: ::std::os::raw::c_int,
    pub x1d24: ::std::os::raw::c_int,
    pub x1d28: ::std::os::raw::c_int,
    pub x1d2c: ::std::os::raw::c_int,
    pub x1d30: ::std::os::raw::c_int,
    pub x1d34: ::std::os::raw::c_int,
    pub x1d38: ::std::os::raw::c_int,
    pub x1d3c: ::std::os::raw::c_int,
    pub x1d40: ::std::os::raw::c_int,
    pub x1d44: ::std::os::raw::c_int,
    pub x1d48: ::std::os::raw::c_int,
    pub x1d4c: ::std::os::raw::c_int,
    pub x1d50: ::std::os::raw::c_int,
    pub x1d54: ::std::os::raw::c_int,
    pub x1d58: ::std::os::raw::c_int,
    pub x1d5c: ::std::os::raw::c_int,
    pub x1d60: ::std::os::raw::c_int,
    pub x1d64: ::std::os::raw::c_int,
    pub x1d68: ::std::os::raw::c_int,
    pub x1d6c: ::std::os::raw::c_int,
    pub x1d70: ::std::os::raw::c_int,
    pub x1d74: ::std::os::raw::c_int,
    pub x1d78: ::std::os::raw::c_int,
    pub x1d7c: ::std::os::raw::c_int,
    pub x1d80: ::std::os::raw::c_int,
    pub x1d84: ::std::os::raw::c_int,
    pub x1d88: ::std::os::raw::c_int,
    pub x1d8c: ::std::os::raw::c_int,
    pub x1d90: ::std::os::raw::c_int,
    pub x1d94: ::std::os::raw::c_int,
    pub x1d98: ::std::os::raw::c_int,
    pub x1d9c: ::std::os::raw::c_int,
    pub x1da0: ::std::os::raw::c_int,
    pub x1da4: ::std::os::raw::c_int,
    pub x1da8: ::std::os::raw::c_int,
    pub x1dac: ::std::os::raw::c_int,
    pub x1db0: ::std::os::raw::c_int,
    pub x1db4: ::std::os::raw::c_int,
    pub x1db8: ::std::os::raw::c_int,
    pub x1dbc: ::std::os::raw::c_int,
    pub x1dc0: ::std::os::raw::c_int,
    pub x1dc4: ::std::os::raw::c_int,
    pub x1dc8: ::std::os::raw::c_int,
    pub x1dcc: ::std::os::raw::c_int,
    pub x1dd0: ::std::os::raw::c_int,
    pub x1dd4: ::std::os::raw::c_int,
    pub x1dd8: ::std::os::raw::c_int,
    pub x1ddc: ::std::os::raw::c_int,
    pub x1de0: ::std::os::raw::c_int,
    pub x1de4: ::std::os::raw::c_int,
    pub x1de8: ::std::os::raw::c_int,
    pub x1dec: ::std::os::raw::c_int,
    pub x1df0: ::std::os::raw::c_int,
    pub x1df4: ::std::os::raw::c_int,
    pub x1df8: ::std::os::raw::c_int,
    pub x1dfc: ::std::os::raw::c_int,
    pub x1e00: ::std::os::raw::c_int,
    pub x1e04: ::std::os::raw::c_int,
    pub x1e08: ::std::os::raw::c_int,
    pub x1e0c: ::std::os::raw::c_int,
    pub x1e10: ::std::os::raw::c_int,
    pub x1e14: ::std::os::raw::c_int,
    pub x1e18: ::std::os::raw::c_int,
    pub x1e1c: ::std::os::raw::c_int,
    pub x1e20: ::std::os::raw::c_int,
    pub x1e24: ::std::os::raw::c_int,
    pub x1e28: ::std::os::raw::c_int,
    pub x1e2c: ::std::os::raw::c_int,
    pub x1e30: ::std::os::raw::c_int,
    pub x1e34: ::std::os::raw::c_int,
    pub x1e38: ::std::os::raw::c_int,
    pub x1e3c: ::std::os::raw::c_int,
    pub x1e40: ::std::os::raw::c_int,
    pub x1e44: ::std::os::raw::c_int,
    pub x1e48: ::std::os::raw::c_int,
    pub x1e4c: ::std::os::raw::c_int,
    pub x1e50: ::std::os::raw::c_int,
    pub x1e54: ::std::os::raw::c_int,
    pub x1e58: ::std::os::raw::c_int,
    pub x1e5c: ::std::os::raw::c_int,
    pub x1e60: ::std::os::raw::c_int,
    pub x1e64: ::std::os::raw::c_int,
    pub x1e68: ::std::os::raw::c_int,
    pub x1e6c: ::std::os::raw::c_int,
    pub x1e70: ::std::os::raw::c_int,
    pub x1e74: ::std::os::raw::c_int,
    pub x1e78: ::std::os::raw::c_int,
    pub x1e7c: ::std::os::raw::c_int,
    pub x1e80: ::std::os::raw::c_int,
    pub x1e84: ::std::os::raw::c_int,
    pub x1e88: ::std::os::raw::c_int,
    pub x1e8c: ::std::os::raw::c_int,
    pub x1e90: ::std::os::raw::c_int,
    pub x1e94: ::std::os::raw::c_int,
    pub x1e98: ::std::os::raw::c_int,
    pub x1e9c: ::std::os::raw::c_int,
    pub x1ea0: ::std::os::raw::c_int,
    pub x1ea4: ::std::os::raw::c_int,
    pub x1ea8: ::std::os::raw::c_int,
    pub x1eac: ::std::os::raw::c_int,
    pub x1eb0: ::std::os::raw::c_int,
    pub x1eb4: ::std::os::raw::c_int,
    pub x1eb8: ::std::os::raw::c_int,
    pub x1ebc: ::std::os::raw::c_int,
    pub x1ec0: ::std::os::raw::c_int,
    pub x1ec4: ::std::os::raw::c_int,
    pub x1ec8: ::std::os::raw::c_int,
    pub x1ecc: ::std::os::raw::c_int,
    pub x1ed0: ::std::os::raw::c_int,
    pub x1ed4: ::std::os::raw::c_int,
    pub x1ed8: ::std::os::raw::c_int,
    pub x1edc: ::std::os::raw::c_int,
    pub x1ee0: ::std::os::raw::c_int,
    pub x1ee4: ::std::os::raw::c_int,
    pub x1ee8: ::std::os::raw::c_int,
    pub x1eec: ::std::os::raw::c_int,
    pub x1ef0: ::std::os::raw::c_int,
    pub x1ef4: ::std::os::raw::c_int,
    pub x1ef8: ::std::os::raw::c_int,
    pub x1efc: ::std::os::raw::c_int,
    pub x1f00: ::std::os::raw::c_int,
    pub x1f04: ::std::os::raw::c_int,
    pub x1f08: ::std::os::raw::c_int,
    pub x1f0c: ::std::os::raw::c_int,
    pub x1f10: ::std::os::raw::c_int,
    pub x1f14: ::std::os::raw::c_int,
    pub x1f18: ::std::os::raw::c_int,
    pub x1f1c: ::std::os::raw::c_int,
    pub x1f20: ::std::os::raw::c_int,
    pub x1f24: ::std::os::raw::c_int,
    pub x1f28: ::std::os::raw::c_int,
    pub x1f2c: ::std::os::raw::c_int,
    pub x1f30: ::std::os::raw::c_int,
    pub x1f34: ::std::os::raw::c_int,
    pub x1f38: ::std::os::raw::c_int,
    pub x1f3c: ::std::os::raw::c_int,
    pub x1f40: ::std::os::raw::c_int,
    pub x1f44: ::std::os::raw::c_int,
    pub x1f48: ::std::os::raw::c_int,
    pub x1f4c: ::std::os::raw::c_int,
    pub x1f50: ::std::os::raw::c_int,
    pub x1f54: ::std::os::raw::c_int,
    pub x1f58: ::std::os::raw::c_int,
    pub x1f5c: ::std::os::raw::c_int,
    pub x1f60: ::std::os::raw::c_int,
    pub x1f64: ::std::os::raw::c_int,
    pub x1f68: ::std::os::raw::c_int,
    pub x1f6c: ::std::os::raw::c_int,
    pub x1f70: ::std::os::raw::c_int,
    pub x1f74: ::std::os::raw::c_int,
    pub x1f78: ::std::os::raw::c_int,
    pub x1f7c: ::std::os::raw::c_int,
    pub x1f80: ::std::os::raw::c_int,
    pub x1f84: ::std::os::raw::c_int,
    pub x1f88: ::std::os::raw::c_int,
    pub x1f8c: ::std::os::raw::c_int,
    pub x1f90: ::std::os::raw::c_int,
    pub x1f94: ::std::os::raw::c_int,
    pub x1f98: ::std::os::raw::c_int,
    pub x1f9c: ::std::os::raw::c_int,
    pub x1fa0: ::std::os::raw::c_int,
    pub x1fa4: ::std::os::raw::c_int,
    pub x1fa8: ::std::os::raw::c_int,
    pub x1fac: ::std::os::raw::c_int,
    pub x1fb0: ::std::os::raw::c_int,
    pub x1fb4: ::std::os::raw::c_int,
    pub x1fb8: ::std::os::raw::c_int,
    pub x1fbc: ::std::os::raw::c_int,
    pub x1fc0: ::std::os::raw::c_int,
    pub x1fc4: ::std::os::raw::c_int,
    pub x1fc8: ::std::os::raw::c_int,
    pub x1fcc: ::std::os::raw::c_int,
    pub x1fd0: ::std::os::raw::c_int,
    pub x1fd4: ::std::os::raw::c_int,
    pub x1fd8: ::std::os::raw::c_int,
    pub x1fdc: ::std::os::raw::c_int,
    pub x1fe0: ::std::os::raw::c_int,
    pub x1fe4: ::std::os::raw::c_int,
    pub x1fe8: ::std::os::raw::c_int,
    pub x1fec: ::std::os::raw::c_int,
    pub x1ff0: ::std::os::raw::c_int,
    pub x1ff4: ::std::os::raw::c_int,
    pub x1ff8: ::std::os::raw::c_int,
    pub x1ffc: ::std::os::raw::c_int,
    pub x2000: ::std::os::raw::c_int,
    pub x2004: ::std::os::raw::c_int,
    pub x2008: ::std::os::raw::c_int,
    pub x200c: ::std::os::raw::c_int,
    pub x2010: ::std::os::raw::c_int,
    pub x2014: ::std::os::raw::c_int,
    pub x2018: ::std::os::raw::c_int,
    pub x201c: ::std::os::raw::c_int,
    pub x2020: ::std::os::raw::c_int,
    pub x2024: ::std::os::raw::c_int,
    pub x2028: ::std::os::raw::c_int,
    pub x202c: ::std::os::raw::c_int,
    pub x2030: ::std::os::raw::c_int,
    pub x2034: ::std::os::raw::c_int,
    pub x2038: ::std::os::raw::c_int,
    pub x203c: ::std::os::raw::c_int,
    pub x2040: ::std::os::raw::c_int,
    pub x2044: ::std::os::raw::c_int,
    pub x2048: ::std::os::raw::c_int,
    pub x204c: ::std::os::raw::c_int,
    pub x2050: ::std::os::raw::c_int,
    pub x2054: ::std::os::raw::c_int,
    pub x2058: ::std::os::raw::c_int,
    pub x205c: ::std::os::raw::c_int,
    pub x2060: ::std::os::raw::c_int,
    pub x2064: ::std::os::raw::c_int,
    pub x2068: ::std::os::raw::c_int,
    pub x206c: ::std::os::raw::c_int,
    pub x2070: ::std::os::raw::c_int,
    pub x2074: ::std::os::raw::c_int,
    pub x2078: ::std::os::raw::c_int,
    pub x207c: ::std::os::raw::c_int,
    pub x2080: ::std::os::raw::c_int,
    pub x2084: ::std::os::raw::c_int,
    pub x2088: ::std::os::raw::c_int,
    pub x208c: ::std::os::raw::c_int,
    pub x2090: ::std::os::raw::c_int,
    pub x2094: ::std::os::raw::c_int,
    pub x2098: ::std::os::raw::c_int,
    pub x209c: ::std::os::raw::c_int,
    pub x20a0: ::std::os::raw::c_int,
    pub x20a4: ::std::os::raw::c_int,
    pub x20a8: ::std::os::raw::c_int,
    pub x20ac: ::std::os::raw::c_int,
    pub x20b0: ::std::os::raw::c_int,
    pub x20b4: ::std::os::raw::c_int,
    pub x20b8: ::std::os::raw::c_int,
    pub x20bc: ::std::os::raw::c_int,
    pub x20c0: ::std::os::raw::c_int,
    pub x20c4: ::std::os::raw::c_int,
    pub x20c8: ::std::os::raw::c_int,
    pub x20cc: ::std::os::raw::c_int,
    pub x20d0: ::std::os::raw::c_int,
    pub x20d4: ::std::os::raw::c_int,
    pub x20d8: ::std::os::raw::c_int,
    pub x20dc: ::std::os::raw::c_int,
    pub x20e0: ::std::os::raw::c_int,
    pub x20e4: ::std::os::raw::c_int,
    pub x20e8: ::std::os::raw::c_int,
    pub x20ec: ::std::os::raw::c_int,
    pub x20f0: ::std::os::raw::c_int,
    pub x20f4: ::std::os::raw::c_int,
    pub x20f8: ::std::os::raw::c_int,
    pub x20fc: ::std::os::raw::c_int,
    pub x2100: ::std::os::raw::c_int,
    pub x2104: ::std::os::raw::c_int,
    pub x2108: ::std::os::raw::c_int,
    pub x210c: ::std::os::raw::c_int,
    pub x2110: ::std::os::raw::c_int,
    pub x2114: ::std::os::raw::c_int,
    pub x2118: ::std::os::raw::c_int,
    pub x211c: ::std::os::raw::c_int,
    pub x2120: ::std::os::raw::c_int,
    pub x2124: ::std::os::raw::c_int,
    pub x2128: ::std::os::raw::c_int,
    pub x212c: ::std::os::raw::c_int,
    pub x2130: ::std::os::raw::c_int,
    pub x2134: ::std::os::raw::c_int,
    pub x2138: ::std::os::raw::c_int,
    pub x213c: ::std::os::raw::c_int,
    pub x2140: ::std::os::raw::c_int,
    pub x2144: ::std::os::raw::c_int,
    pub x2148: ::std::os::raw::c_int,
    pub x214c: ::std::os::raw::c_int,
    pub x2150: ::std::os::raw::c_int,
    pub x2154: ::std::os::raw::c_int,
    pub x2158: ::std::os::raw::c_int,
    pub x215c: ::std::os::raw::c_int,
    pub x2160: ::std::os::raw::c_int,
    pub x2164: ::std::os::raw::c_int,
    pub x2168: ::std::os::raw::c_int,
    pub x216c: ::std::os::raw::c_int,
    pub x2170: ::std::os::raw::c_int,
    pub x2174: ::std::os::raw::c_int,
    pub x2178: ::std::os::raw::c_int,
    pub x217c: ::std::os::raw::c_int,
    pub x2180: ::std::os::raw::c_int,
    pub x2184: ::std::os::raw::c_int,
    pub x2188: ::std::os::raw::c_int,
    pub x218c: ::std::os::raw::c_int,
    pub x2190: ::std::os::raw::c_int,
    pub x2194: ::std::os::raw::c_int,
    pub x2198: ::std::os::raw::c_int,
    pub x219c: ::std::os::raw::c_int,
    pub x21a0: ::std::os::raw::c_int,
    pub x21a4: ::std::os::raw::c_int,
    pub x21a8: ::std::os::raw::c_int,
    pub x21ac: ::std::os::raw::c_int,
    pub x21b0: ::std::os::raw::c_int,
    pub x21b4: ::std::os::raw::c_int,
    pub x21b8: ::std::os::raw::c_int,
    pub x21bc: ::std::os::raw::c_int,
    pub x21c0: ::std::os::raw::c_int,
    pub x21c4: ::std::os::raw::c_int,
    pub x21c8: ::std::os::raw::c_int,
    pub x21cc: ::std::os::raw::c_int,
    pub x21d0: ::std::os::raw::c_int,
    pub x21d4: ::std::os::raw::c_int,
    pub x21d8: ::std::os::raw::c_int,
    pub x21dc: ::std::os::raw::c_int,
    pub x21e0: ::std::os::raw::c_int,
    pub x21e4: ::std::os::raw::c_int,
    pub x21e8: ::std::os::raw::c_int,
    pub x21ec: ::std::os::raw::c_int,
    pub x21f0: ::std::os::raw::c_int,
    pub x21f4: ::std::os::raw::c_int,
    pub x21f8: ::std::os::raw::c_int,
    pub x21fc: ::std::os::raw::c_int,
    pub x2200: ::std::os::raw::c_int,
    pub x2204: ::std::os::raw::c_int,
    pub x2208: ::std::os::raw::c_int,
    pub x220c: ::std::os::raw::c_int,
    pub x2210: ::std::os::raw::c_int,
    pub x2214: ::std::os::raw::c_int,
    pub x2218: ::std::os::raw::c_int,
    pub x221c: ::std::os::raw::c_int,
    pub x2220: ::std::os::raw::c_int,
    pub x2224: ::std::os::raw::c_int,
    pub x2228: ::std::os::raw::c_int,
    pub x222c: ::std::os::raw::c_int,
    pub x2230: ::std::os::raw::c_int,
    pub x2234: ::std::os::raw::c_int,
    pub x2238: ::std::os::raw::c_int,
    pub x223c: ::std::os::raw::c_int,
    pub x2240: ::std::os::raw::c_int,
    pub x2244: ::std::os::raw::c_int,
    pub x2248: ::std::os::raw::c_int,
    pub x224c: ::std::os::raw::c_int,
    pub x2250: ::std::os::raw::c_int,
    pub x2254: ::std::os::raw::c_int,
    pub x2258: ::std::os::raw::c_int,
    pub x225c: ::std::os::raw::c_int,
    pub x2260: ::std::os::raw::c_int,
    pub x2264: ::std::os::raw::c_int,
    pub x2268: ::std::os::raw::c_int,
    pub x226c: ::std::os::raw::c_int,
    pub x2270: ::std::os::raw::c_int,
    pub x2274: ::std::os::raw::c_int,
    pub x2278: ::std::os::raw::c_int,
    pub x227c: ::std::os::raw::c_int,
    pub x2280: ::std::os::raw::c_int,
    pub x2284: ::std::os::raw::c_int,
    pub x2288: ::std::os::raw::c_int,
    pub x228c: ::std::os::raw::c_int,
    pub x2290: ::std::os::raw::c_int,
    pub x2294: ::std::os::raw::c_int,
    pub x2298: ::std::os::raw::c_int,
    pub x229c: ::std::os::raw::c_int,
    pub x22a0: ::std::os::raw::c_int,
    pub x22a4: ::std::os::raw::c_int,
    pub x22a8: ::std::os::raw::c_int,
    pub x22ac: ::std::os::raw::c_int,
    pub x22b0: ::std::os::raw::c_int,
    pub x22b4: ::std::os::raw::c_int,
    pub x22b8: ::std::os::raw::c_int,
    pub x22bc: ::std::os::raw::c_int,
    pub x22c0: ::std::os::raw::c_int,
    pub x22c4: ::std::os::raw::c_int,
    pub x22c8: ::std::os::raw::c_int,
    pub x22cc: ::std::os::raw::c_int,
    pub x22d0: ::std::os::raw::c_int,
    pub x22d4: ::std::os::raw::c_int,
    pub x22d8: ::std::os::raw::c_int,
    pub x22dc: ::std::os::raw::c_int,
    pub x22e0: ::std::os::raw::c_int,
    pub x22e4: ::std::os::raw::c_int,
    pub x22e8: ::std::os::raw::c_int,
    pub x22ec: ::std::os::raw::c_int,
    pub x22f0: ::std::os::raw::c_int,
    pub x22f4: ::std::os::raw::c_int,
    pub x22f8: ::std::os::raw::c_int,
    pub x22fc: ::std::os::raw::c_int,
    pub x2300: ::std::os::raw::c_int,
    pub x2304: ::std::os::raw::c_int,
    pub x2308: ::std::os::raw::c_int,
    pub x230c: ::std::os::raw::c_int,
    pub x2310: ::std::os::raw::c_int,
    pub x2314: ::std::os::raw::c_int,
    pub x2318: ::std::os::raw::c_int,
    pub x231c: ::std::os::raw::c_int,
    pub x2320: ::std::os::raw::c_int,
    pub x2324: ::std::os::raw::c_int,
    pub x2328: ::std::os::raw::c_int,
    pub x232c: ::std::os::raw::c_int,
    pub x2330: ::std::os::raw::c_int,
    pub x2334: ::std::os::raw::c_int,
    pub x2338: ::std::os::raw::c_int,
    pub x233c: ::std::os::raw::c_int,
    pub x2340: ::std::os::raw::c_int,
    pub x2344: ::std::os::raw::c_int,
    pub x2348: ::std::os::raw::c_int,
    pub x234c: ::std::os::raw::c_int,
    pub x2350: ::std::os::raw::c_int,
    pub x2354: ::std::os::raw::c_int,
    pub x2358: ::std::os::raw::c_int,
    pub x235c: ::std::os::raw::c_int,
    pub x2360: ::std::os::raw::c_int,
    pub x2364: ::std::os::raw::c_int,
    pub x2368: ::std::os::raw::c_int,
    pub x236c: ::std::os::raw::c_int,
    pub x2370: ::std::os::raw::c_int,
    pub x2374: ::std::os::raw::c_int,
    pub x2378: ::std::os::raw::c_int,
    pub x237c: ::std::os::raw::c_int,
    pub x2380: ::std::os::raw::c_int,
    pub x2384: ::std::os::raw::c_int,
    pub x2388: ::std::os::raw::c_int,
    pub x238c: ::std::os::raw::c_int,
    pub x2390: ::std::os::raw::c_int,
    pub x2394: ::std::os::raw::c_int,
    pub x2398: ::std::os::raw::c_int,
    pub x239c: ::std::os::raw::c_int,
    pub x23a0: ::std::os::raw::c_int,
    pub x23a4: ::std::os::raw::c_int,
    pub x23a8: ::std::os::raw::c_int,
    pub x23ac: ::std::os::raw::c_int,
    pub x23b0: ::std::os::raw::c_int,
    pub x23b4: ::std::os::raw::c_int,
    pub x23b8: ::std::os::raw::c_int,
    pub x23bc: ::std::os::raw::c_int,
    pub x23c0: ::std::os::raw::c_int,
    pub x23c4: ::std::os::raw::c_int,
    pub x23c8: ::std::os::raw::c_int,
    pub x23cc: ::std::os::raw::c_int,
    pub x23d0: ::std::os::raw::c_int,
    pub x23d4: ::std::os::raw::c_int,
    pub x23d8: ::std::os::raw::c_int,
    pub x23dc: ::std::os::raw::c_int,
    pub x23e0: ::std::os::raw::c_int,
    pub x23e4: ::std::os::raw::c_int,
    pub x23e8: ::std::os::raw::c_int,
    pub x23ec: ::std::os::raw::c_int,
    pub x23f0: ::std::os::raw::c_int,
    pub x23f4: ::std::os::raw::c_int,
    pub x23f8: ::std::os::raw::c_int,
    pub x23fc: ::std::os::raw::c_int,
    pub x2400: ::std::os::raw::c_int,
    pub x2404: ::std::os::raw::c_int,
    pub x2408: ::std::os::raw::c_int,
    pub x240c: ::std::os::raw::c_int,
    pub x2410: ::std::os::raw::c_int,
    pub x2414: ::std::os::raw::c_int,
    pub x2418: ::std::os::raw::c_int,
    pub x241c: ::std::os::raw::c_int,
    pub x2420: ::std::os::raw::c_int,
    pub x2424: ::std::os::raw::c_int,
    pub x2428: ::std::os::raw::c_int,
    pub x242c: ::std::os::raw::c_int,
    pub x2430: ::std::os::raw::c_int,
    pub x2434: ::std::os::raw::c_int,
    pub x2438: ::std::os::raw::c_int,
    pub x243c: ::std::os::raw::c_int,
    pub x2440: ::std::os::raw::c_int,
    pub x2444: ::std::os::raw::c_int,
    pub x2448: ::std::os::raw::c_int,
    pub x244c: ::std::os::raw::c_int,
    pub x2450: ::std::os::raw::c_int,
    pub x2454: ::std::os::raw::c_int,
    pub x2458: ::std::os::raw::c_int,
    pub x245c: ::std::os::raw::c_int,
    pub x2460: ::std::os::raw::c_int,
    pub x2464: ::std::os::raw::c_int,
    pub x2468: ::std::os::raw::c_int,
    pub x246c: ::std::os::raw::c_int,
    pub x2470: ::std::os::raw::c_int,
    pub x2474: ::std::os::raw::c_int,
    pub x2478: ::std::os::raw::c_int,
    pub x247c: ::std::os::raw::c_int,
    pub x2480: ::std::os::raw::c_int,
    pub x2484: ::std::os::raw::c_int,
    pub x2488: ::std::os::raw::c_int,
    pub x248c: ::std::os::raw::c_int,
    pub x2490: ::std::os::raw::c_int,
    pub x2494: ::std::os::raw::c_int,
    pub x2498: ::std::os::raw::c_int,
    pub x249c: ::std::os::raw::c_int,
    pub x24a0: ::std::os::raw::c_int,
    pub x24a4: ::std::os::raw::c_int,
    pub x24a8: ::std::os::raw::c_int,
    pub x24ac: ::std::os::raw::c_int,
    pub x24b0: ::std::os::raw::c_int,
    pub x24b4: ::std::os::raw::c_int,
    pub x24b8: ::std::os::raw::c_int,
    pub x24bc: ::std::os::raw::c_int,
    pub x24c0: ::std::os::raw::c_int,
    pub x24c4: ::std::os::raw::c_int,
    pub match_: MatchInit,
}
#[test]
fn bindgen_test_layout_Match() {
    assert_eq!(
        ::std::mem::size_of::<Match>(),
        9760usize,
        concat!("Size of: ", stringify!(Match))
    );
    assert_eq!(
        ::std::mem::align_of::<Match>(),
        8usize,
        concat!("Alignment of ", stringify!(Match))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).state as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).pauser as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(pauser)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4 as *const _ as usize },
        4usize,
        concat!("Offset of field: ", stringify!(Match), "::", stringify!(x4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8 as *const _ as usize },
        8usize,
        concat!("Offset of field: ", stringify!(Match), "::", stringify!(x8))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc as *const _ as usize },
        12usize,
        concat!("Offset of field: ", stringify!(Match), "::", stringify!(xc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).time_frames as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(time_frames)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).time_seconds as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(time_seconds)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).time_ms as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(time_ms)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x30 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x34 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x38 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x40 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x44 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x48 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4c as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x50 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x54 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x58 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5c as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x60 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x64 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x68 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6c as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x70 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x74 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x78 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7c as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x80 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x84 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x88 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8c as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x90 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x94 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x98 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9c as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa0 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa4 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa8 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xac as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb0 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb4 as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb8 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbc as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc0 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc4 as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc8 as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcc as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd0 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd4 as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd8 as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdc as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe0 as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe4 as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe8 as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xec as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf0 as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf4 as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf8 as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfc as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x100 as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x104 as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x108 as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10c as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x110 as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x114 as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x118 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11c as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x120 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x124 as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x128 as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12c as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x130 as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x134 as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x138 as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13c as *const _ as usize },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x140 as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x144 as *const _ as usize },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x148 as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14c as *const _ as usize },
        332usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x150 as *const _ as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x154 as *const _ as usize },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x158 as *const _ as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15c as *const _ as usize },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x160 as *const _ as usize },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x164 as *const _ as usize },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x168 as *const _ as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16c as *const _ as usize },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x170 as *const _ as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x174 as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x178 as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17c as *const _ as usize },
        380usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x180 as *const _ as usize },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x184 as *const _ as usize },
        388usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x188 as *const _ as usize },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18c as *const _ as usize },
        396usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x190 as *const _ as usize },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x190)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x194 as *const _ as usize },
        404usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x194)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x198 as *const _ as usize },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x198)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19c as *const _ as usize },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a0 as *const _ as usize },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a4 as *const _ as usize },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a8 as *const _ as usize },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ac as *const _ as usize },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b0 as *const _ as usize },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b4 as *const _ as usize },
        436usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b8 as *const _ as usize },
        440usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bc as *const _ as usize },
        444usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c0 as *const _ as usize },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c4 as *const _ as usize },
        452usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c8 as *const _ as usize },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cc as *const _ as usize },
        460usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d0 as *const _ as usize },
        464usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d4 as *const _ as usize },
        468usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d8 as *const _ as usize },
        472usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dc as *const _ as usize },
        476usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e0 as *const _ as usize },
        480usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e4 as *const _ as usize },
        484usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e8 as *const _ as usize },
        488usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ec as *const _ as usize },
        492usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f0 as *const _ as usize },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f4 as *const _ as usize },
        500usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f8 as *const _ as usize },
        504usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fc as *const _ as usize },
        508usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x200 as *const _ as usize },
        512usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x200)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x204 as *const _ as usize },
        516usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x204)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x208 as *const _ as usize },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x208)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20c as *const _ as usize },
        524usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x210 as *const _ as usize },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x210)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x214 as *const _ as usize },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x214)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x218 as *const _ as usize },
        536usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x218)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21c as *const _ as usize },
        540usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x220 as *const _ as usize },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x220)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x224 as *const _ as usize },
        548usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x224)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x228 as *const _ as usize },
        552usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x228)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22c as *const _ as usize },
        556usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x230 as *const _ as usize },
        560usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x230)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x234 as *const _ as usize },
        564usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x234)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x238 as *const _ as usize },
        568usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x238)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23c as *const _ as usize },
        572usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x240 as *const _ as usize },
        576usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x240)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x244 as *const _ as usize },
        580usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x244)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x248 as *const _ as usize },
        584usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x248)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24c as *const _ as usize },
        588usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x250 as *const _ as usize },
        592usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x250)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x254 as *const _ as usize },
        596usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x254)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x258 as *const _ as usize },
        600usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x258)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x25c as *const _ as usize },
        604usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x25c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x260 as *const _ as usize },
        608usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x260)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x264 as *const _ as usize },
        612usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x264)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x268 as *const _ as usize },
        616usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x268)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x26c as *const _ as usize },
        620usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x26c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x270 as *const _ as usize },
        624usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x270)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x274 as *const _ as usize },
        628usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x274)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x278 as *const _ as usize },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x278)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x27c as *const _ as usize },
        636usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x27c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x280 as *const _ as usize },
        640usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x280)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x284 as *const _ as usize },
        644usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x284)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x288 as *const _ as usize },
        648usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x288)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x28c as *const _ as usize },
        652usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x28c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x290 as *const _ as usize },
        656usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x290)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x294 as *const _ as usize },
        660usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x294)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x298 as *const _ as usize },
        664usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x298)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x29c as *const _ as usize },
        668usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x29c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2a0 as *const _ as usize },
        672usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2a4 as *const _ as usize },
        676usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2a8 as *const _ as usize },
        680usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2ac as *const _ as usize },
        684usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2b0 as *const _ as usize },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2b4 as *const _ as usize },
        692usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2b8 as *const _ as usize },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2bc as *const _ as usize },
        700usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2c0 as *const _ as usize },
        704usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2c4 as *const _ as usize },
        708usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2c8 as *const _ as usize },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2cc as *const _ as usize },
        716usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2d0 as *const _ as usize },
        720usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2d4 as *const _ as usize },
        724usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2d8 as *const _ as usize },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2dc as *const _ as usize },
        732usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2e0 as *const _ as usize },
        736usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2e4 as *const _ as usize },
        740usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2e8 as *const _ as usize },
        744usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2ec as *const _ as usize },
        748usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2f0 as *const _ as usize },
        752usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2f4 as *const _ as usize },
        756usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2f8 as *const _ as usize },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2fc as *const _ as usize },
        764usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x300 as *const _ as usize },
        768usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x300)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x304 as *const _ as usize },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x304)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x308 as *const _ as usize },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x308)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x30c as *const _ as usize },
        780usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x30c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x310 as *const _ as usize },
        784usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x310)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x314 as *const _ as usize },
        788usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x314)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x318 as *const _ as usize },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x318)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x31c as *const _ as usize },
        796usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x31c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x320 as *const _ as usize },
        800usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x320)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x324 as *const _ as usize },
        804usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x324)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x328 as *const _ as usize },
        808usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x328)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x32c as *const _ as usize },
        812usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x32c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x330 as *const _ as usize },
        816usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x330)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x334 as *const _ as usize },
        820usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x334)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x338 as *const _ as usize },
        824usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x338)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x33c as *const _ as usize },
        828usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x33c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x340 as *const _ as usize },
        832usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x340)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x344 as *const _ as usize },
        836usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x344)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x348 as *const _ as usize },
        840usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x348)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x34c as *const _ as usize },
        844usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x34c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x350 as *const _ as usize },
        848usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x350)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x354 as *const _ as usize },
        852usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x354)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x358 as *const _ as usize },
        856usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x358)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x35c as *const _ as usize },
        860usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x35c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x360 as *const _ as usize },
        864usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x360)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x364 as *const _ as usize },
        868usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x364)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x368 as *const _ as usize },
        872usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x368)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x36c as *const _ as usize },
        876usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x36c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x370 as *const _ as usize },
        880usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x370)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x374 as *const _ as usize },
        884usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x374)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x378 as *const _ as usize },
        888usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x378)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x37c as *const _ as usize },
        892usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x37c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x380 as *const _ as usize },
        896usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x380)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x384 as *const _ as usize },
        900usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x384)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x388 as *const _ as usize },
        904usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x388)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x38c as *const _ as usize },
        908usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x38c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x390 as *const _ as usize },
        912usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x390)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x394 as *const _ as usize },
        916usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x394)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x398 as *const _ as usize },
        920usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x398)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x39c as *const _ as usize },
        924usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x39c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3a0 as *const _ as usize },
        928usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3a4 as *const _ as usize },
        932usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3a8 as *const _ as usize },
        936usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3ac as *const _ as usize },
        940usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3b0 as *const _ as usize },
        944usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3b4 as *const _ as usize },
        948usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3b8 as *const _ as usize },
        952usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3bc as *const _ as usize },
        956usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3c0 as *const _ as usize },
        960usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3c4 as *const _ as usize },
        964usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3c8 as *const _ as usize },
        968usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3cc as *const _ as usize },
        972usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3d0 as *const _ as usize },
        976usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3d4 as *const _ as usize },
        980usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3d8 as *const _ as usize },
        984usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3dc as *const _ as usize },
        988usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3e0 as *const _ as usize },
        992usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3e4 as *const _ as usize },
        996usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3e8 as *const _ as usize },
        1000usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3ec as *const _ as usize },
        1004usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3f0 as *const _ as usize },
        1008usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3f4 as *const _ as usize },
        1012usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3f8 as *const _ as usize },
        1016usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x3fc as *const _ as usize },
        1020usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x3fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x400 as *const _ as usize },
        1024usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x400)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x404 as *const _ as usize },
        1028usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x404)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x408 as *const _ as usize },
        1032usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x408)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x40c as *const _ as usize },
        1036usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x40c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x410 as *const _ as usize },
        1040usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x410)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x414 as *const _ as usize },
        1044usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x414)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x418 as *const _ as usize },
        1048usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x418)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x41c as *const _ as usize },
        1052usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x41c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x420 as *const _ as usize },
        1056usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x420)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x424 as *const _ as usize },
        1060usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x424)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x428 as *const _ as usize },
        1064usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x428)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x42c as *const _ as usize },
        1068usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x42c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x430 as *const _ as usize },
        1072usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x430)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x434 as *const _ as usize },
        1076usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x434)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x438 as *const _ as usize },
        1080usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x438)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x43c as *const _ as usize },
        1084usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x43c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x440 as *const _ as usize },
        1088usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x440)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x444 as *const _ as usize },
        1092usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x444)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x448 as *const _ as usize },
        1096usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x448)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x44c as *const _ as usize },
        1100usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x44c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x450 as *const _ as usize },
        1104usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x450)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x454 as *const _ as usize },
        1108usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x454)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x458 as *const _ as usize },
        1112usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x458)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x45c as *const _ as usize },
        1116usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x45c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x460 as *const _ as usize },
        1120usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x460)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x464 as *const _ as usize },
        1124usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x464)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x468 as *const _ as usize },
        1128usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x468)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x46c as *const _ as usize },
        1132usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x46c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x470 as *const _ as usize },
        1136usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x470)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x474 as *const _ as usize },
        1140usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x474)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x478 as *const _ as usize },
        1144usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x478)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x47c as *const _ as usize },
        1148usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x47c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x480 as *const _ as usize },
        1152usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x480)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x484 as *const _ as usize },
        1156usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x484)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x488 as *const _ as usize },
        1160usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x488)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x48c as *const _ as usize },
        1164usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x48c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x490 as *const _ as usize },
        1168usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x490)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x494 as *const _ as usize },
        1172usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x494)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x498 as *const _ as usize },
        1176usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x498)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x49c as *const _ as usize },
        1180usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x49c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4a0 as *const _ as usize },
        1184usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4a4 as *const _ as usize },
        1188usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4a8 as *const _ as usize },
        1192usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4ac as *const _ as usize },
        1196usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4b0 as *const _ as usize },
        1200usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4b4 as *const _ as usize },
        1204usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4b8 as *const _ as usize },
        1208usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4bc as *const _ as usize },
        1212usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4c0 as *const _ as usize },
        1216usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4c4 as *const _ as usize },
        1220usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4c8 as *const _ as usize },
        1224usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4cc as *const _ as usize },
        1228usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4d0 as *const _ as usize },
        1232usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4d4 as *const _ as usize },
        1236usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4d8 as *const _ as usize },
        1240usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4dc as *const _ as usize },
        1244usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4e0 as *const _ as usize },
        1248usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4e4 as *const _ as usize },
        1252usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4e8 as *const _ as usize },
        1256usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4ec as *const _ as usize },
        1260usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4f0 as *const _ as usize },
        1264usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4f4 as *const _ as usize },
        1268usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4f8 as *const _ as usize },
        1272usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x4fc as *const _ as usize },
        1276usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x4fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x500 as *const _ as usize },
        1280usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x500)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x504 as *const _ as usize },
        1284usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x504)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x508 as *const _ as usize },
        1288usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x508)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x50c as *const _ as usize },
        1292usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x50c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x510 as *const _ as usize },
        1296usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x510)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x514 as *const _ as usize },
        1300usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x514)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x518 as *const _ as usize },
        1304usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x518)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x51c as *const _ as usize },
        1308usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x51c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x520 as *const _ as usize },
        1312usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x520)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x524 as *const _ as usize },
        1316usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x524)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x528 as *const _ as usize },
        1320usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x528)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x52c as *const _ as usize },
        1324usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x52c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x530 as *const _ as usize },
        1328usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x530)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x534 as *const _ as usize },
        1332usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x534)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x538 as *const _ as usize },
        1336usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x538)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x53c as *const _ as usize },
        1340usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x53c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x540 as *const _ as usize },
        1344usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x540)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x544 as *const _ as usize },
        1348usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x544)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x548 as *const _ as usize },
        1352usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x548)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x54c as *const _ as usize },
        1356usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x54c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x550 as *const _ as usize },
        1360usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x550)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x554 as *const _ as usize },
        1364usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x554)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x558 as *const _ as usize },
        1368usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x558)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x55c as *const _ as usize },
        1372usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x55c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x560 as *const _ as usize },
        1376usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x560)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x564 as *const _ as usize },
        1380usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x564)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x568 as *const _ as usize },
        1384usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x568)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x56c as *const _ as usize },
        1388usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x56c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x570 as *const _ as usize },
        1392usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x570)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x574 as *const _ as usize },
        1396usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x574)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x578 as *const _ as usize },
        1400usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x578)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x57c as *const _ as usize },
        1404usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x57c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x580 as *const _ as usize },
        1408usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x580)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x584 as *const _ as usize },
        1412usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x584)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x588 as *const _ as usize },
        1416usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x588)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x58c as *const _ as usize },
        1420usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x58c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x590 as *const _ as usize },
        1424usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x590)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x594 as *const _ as usize },
        1428usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x594)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x598 as *const _ as usize },
        1432usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x598)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x59c as *const _ as usize },
        1436usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x59c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5a0 as *const _ as usize },
        1440usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5a4 as *const _ as usize },
        1444usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5a8 as *const _ as usize },
        1448usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5ac as *const _ as usize },
        1452usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5b0 as *const _ as usize },
        1456usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5b4 as *const _ as usize },
        1460usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5b8 as *const _ as usize },
        1464usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5bc as *const _ as usize },
        1468usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5c0 as *const _ as usize },
        1472usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5c4 as *const _ as usize },
        1476usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5c8 as *const _ as usize },
        1480usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5cc as *const _ as usize },
        1484usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5d0 as *const _ as usize },
        1488usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5d4 as *const _ as usize },
        1492usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5d8 as *const _ as usize },
        1496usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5dc as *const _ as usize },
        1500usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5e0 as *const _ as usize },
        1504usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5e4 as *const _ as usize },
        1508usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5e8 as *const _ as usize },
        1512usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5ec as *const _ as usize },
        1516usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5f0 as *const _ as usize },
        1520usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5f4 as *const _ as usize },
        1524usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5f8 as *const _ as usize },
        1528usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x5fc as *const _ as usize },
        1532usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x5fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x600 as *const _ as usize },
        1536usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x600)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x604 as *const _ as usize },
        1540usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x604)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x608 as *const _ as usize },
        1544usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x608)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x60c as *const _ as usize },
        1548usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x60c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x610 as *const _ as usize },
        1552usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x610)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x614 as *const _ as usize },
        1556usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x614)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x618 as *const _ as usize },
        1560usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x618)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x61c as *const _ as usize },
        1564usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x61c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x620 as *const _ as usize },
        1568usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x620)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x624 as *const _ as usize },
        1572usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x624)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x628 as *const _ as usize },
        1576usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x628)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x62c as *const _ as usize },
        1580usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x62c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x630 as *const _ as usize },
        1584usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x630)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x634 as *const _ as usize },
        1588usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x634)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x638 as *const _ as usize },
        1592usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x638)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x63c as *const _ as usize },
        1596usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x63c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x640 as *const _ as usize },
        1600usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x640)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x644 as *const _ as usize },
        1604usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x644)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x648 as *const _ as usize },
        1608usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x648)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x64c as *const _ as usize },
        1612usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x64c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x650 as *const _ as usize },
        1616usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x650)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x654 as *const _ as usize },
        1620usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x654)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x658 as *const _ as usize },
        1624usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x658)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x65c as *const _ as usize },
        1628usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x65c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x660 as *const _ as usize },
        1632usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x660)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x664 as *const _ as usize },
        1636usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x664)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x668 as *const _ as usize },
        1640usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x668)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x66c as *const _ as usize },
        1644usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x66c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x670 as *const _ as usize },
        1648usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x670)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x674 as *const _ as usize },
        1652usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x674)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x678 as *const _ as usize },
        1656usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x678)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x67c as *const _ as usize },
        1660usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x67c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x680 as *const _ as usize },
        1664usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x680)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x684 as *const _ as usize },
        1668usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x684)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x688 as *const _ as usize },
        1672usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x688)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x68c as *const _ as usize },
        1676usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x68c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x690 as *const _ as usize },
        1680usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x690)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x694 as *const _ as usize },
        1684usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x694)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x698 as *const _ as usize },
        1688usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x698)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x69c as *const _ as usize },
        1692usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x69c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6a0 as *const _ as usize },
        1696usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6a4 as *const _ as usize },
        1700usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6a8 as *const _ as usize },
        1704usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6ac as *const _ as usize },
        1708usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6b0 as *const _ as usize },
        1712usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6b4 as *const _ as usize },
        1716usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6b8 as *const _ as usize },
        1720usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6bc as *const _ as usize },
        1724usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6c0 as *const _ as usize },
        1728usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6c4 as *const _ as usize },
        1732usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6c8 as *const _ as usize },
        1736usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6cc as *const _ as usize },
        1740usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6d0 as *const _ as usize },
        1744usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6d4 as *const _ as usize },
        1748usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6d8 as *const _ as usize },
        1752usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6dc as *const _ as usize },
        1756usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6e0 as *const _ as usize },
        1760usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6e4 as *const _ as usize },
        1764usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6e8 as *const _ as usize },
        1768usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6ec as *const _ as usize },
        1772usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6f0 as *const _ as usize },
        1776usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6f4 as *const _ as usize },
        1780usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6f8 as *const _ as usize },
        1784usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x6fc as *const _ as usize },
        1788usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x6fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x700 as *const _ as usize },
        1792usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x700)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x704 as *const _ as usize },
        1796usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x704)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x708 as *const _ as usize },
        1800usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x708)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x70c as *const _ as usize },
        1804usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x70c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x710 as *const _ as usize },
        1808usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x710)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x714 as *const _ as usize },
        1812usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x714)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x718 as *const _ as usize },
        1816usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x718)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x71c as *const _ as usize },
        1820usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x71c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x720 as *const _ as usize },
        1824usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x720)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x724 as *const _ as usize },
        1828usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x724)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x728 as *const _ as usize },
        1832usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x728)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x72c as *const _ as usize },
        1836usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x72c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x730 as *const _ as usize },
        1840usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x730)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x734 as *const _ as usize },
        1844usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x734)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x738 as *const _ as usize },
        1848usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x738)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x73c as *const _ as usize },
        1852usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x73c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x740 as *const _ as usize },
        1856usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x740)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x744 as *const _ as usize },
        1860usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x744)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x748 as *const _ as usize },
        1864usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x748)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x74c as *const _ as usize },
        1868usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x74c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x750 as *const _ as usize },
        1872usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x750)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x754 as *const _ as usize },
        1876usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x754)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x758 as *const _ as usize },
        1880usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x758)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x75c as *const _ as usize },
        1884usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x75c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x760 as *const _ as usize },
        1888usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x760)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x764 as *const _ as usize },
        1892usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x764)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x768 as *const _ as usize },
        1896usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x768)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x76c as *const _ as usize },
        1900usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x76c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x770 as *const _ as usize },
        1904usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x770)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x774 as *const _ as usize },
        1908usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x774)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x778 as *const _ as usize },
        1912usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x778)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x77c as *const _ as usize },
        1916usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x77c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x780 as *const _ as usize },
        1920usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x780)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x784 as *const _ as usize },
        1924usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x784)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x788 as *const _ as usize },
        1928usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x788)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x78c as *const _ as usize },
        1932usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x78c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x790 as *const _ as usize },
        1936usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x790)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x794 as *const _ as usize },
        1940usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x794)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x798 as *const _ as usize },
        1944usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x798)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x79c as *const _ as usize },
        1948usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x79c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7a0 as *const _ as usize },
        1952usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7a4 as *const _ as usize },
        1956usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7a8 as *const _ as usize },
        1960usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7ac as *const _ as usize },
        1964usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7b0 as *const _ as usize },
        1968usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7b4 as *const _ as usize },
        1972usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7b8 as *const _ as usize },
        1976usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7bc as *const _ as usize },
        1980usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7c0 as *const _ as usize },
        1984usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7c4 as *const _ as usize },
        1988usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7c8 as *const _ as usize },
        1992usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7cc as *const _ as usize },
        1996usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7d0 as *const _ as usize },
        2000usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7d4 as *const _ as usize },
        2004usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7d8 as *const _ as usize },
        2008usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7dc as *const _ as usize },
        2012usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7e0 as *const _ as usize },
        2016usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7e4 as *const _ as usize },
        2020usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7e8 as *const _ as usize },
        2024usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7ec as *const _ as usize },
        2028usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7f0 as *const _ as usize },
        2032usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7f4 as *const _ as usize },
        2036usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7f8 as *const _ as usize },
        2040usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x7fc as *const _ as usize },
        2044usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x7fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x800 as *const _ as usize },
        2048usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x800)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x804 as *const _ as usize },
        2052usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x804)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x808 as *const _ as usize },
        2056usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x808)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x80c as *const _ as usize },
        2060usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x80c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x810 as *const _ as usize },
        2064usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x810)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x814 as *const _ as usize },
        2068usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x814)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x818 as *const _ as usize },
        2072usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x818)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x81c as *const _ as usize },
        2076usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x81c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x820 as *const _ as usize },
        2080usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x820)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x824 as *const _ as usize },
        2084usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x824)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x828 as *const _ as usize },
        2088usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x828)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x82c as *const _ as usize },
        2092usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x82c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x830 as *const _ as usize },
        2096usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x830)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x834 as *const _ as usize },
        2100usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x834)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x838 as *const _ as usize },
        2104usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x838)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x83c as *const _ as usize },
        2108usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x83c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x840 as *const _ as usize },
        2112usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x840)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x844 as *const _ as usize },
        2116usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x844)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x848 as *const _ as usize },
        2120usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x848)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x84c as *const _ as usize },
        2124usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x84c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x850 as *const _ as usize },
        2128usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x850)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x854 as *const _ as usize },
        2132usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x854)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x858 as *const _ as usize },
        2136usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x858)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x85c as *const _ as usize },
        2140usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x85c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x860 as *const _ as usize },
        2144usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x860)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x864 as *const _ as usize },
        2148usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x864)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x868 as *const _ as usize },
        2152usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x868)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x86c as *const _ as usize },
        2156usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x86c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x870 as *const _ as usize },
        2160usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x870)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x874 as *const _ as usize },
        2164usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x874)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x878 as *const _ as usize },
        2168usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x878)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x87c as *const _ as usize },
        2172usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x87c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x880 as *const _ as usize },
        2176usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x880)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x884 as *const _ as usize },
        2180usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x884)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x888 as *const _ as usize },
        2184usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x888)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x88c as *const _ as usize },
        2188usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x88c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x890 as *const _ as usize },
        2192usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x890)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x894 as *const _ as usize },
        2196usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x894)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x898 as *const _ as usize },
        2200usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x898)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x89c as *const _ as usize },
        2204usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x89c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8a0 as *const _ as usize },
        2208usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8a4 as *const _ as usize },
        2212usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8a8 as *const _ as usize },
        2216usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8ac as *const _ as usize },
        2220usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8b0 as *const _ as usize },
        2224usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8b4 as *const _ as usize },
        2228usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8b8 as *const _ as usize },
        2232usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8bc as *const _ as usize },
        2236usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8c0 as *const _ as usize },
        2240usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8c4 as *const _ as usize },
        2244usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8c8 as *const _ as usize },
        2248usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8cc as *const _ as usize },
        2252usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8d0 as *const _ as usize },
        2256usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8d4 as *const _ as usize },
        2260usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8d8 as *const _ as usize },
        2264usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8dc as *const _ as usize },
        2268usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8e0 as *const _ as usize },
        2272usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8e4 as *const _ as usize },
        2276usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8e8 as *const _ as usize },
        2280usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8ec as *const _ as usize },
        2284usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8f0 as *const _ as usize },
        2288usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8f4 as *const _ as usize },
        2292usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8f8 as *const _ as usize },
        2296usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x8fc as *const _ as usize },
        2300usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x8fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x900 as *const _ as usize },
        2304usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x900)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x904 as *const _ as usize },
        2308usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x904)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x908 as *const _ as usize },
        2312usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x908)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x90c as *const _ as usize },
        2316usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x90c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x910 as *const _ as usize },
        2320usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x910)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x914 as *const _ as usize },
        2324usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x914)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x918 as *const _ as usize },
        2328usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x918)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x91c as *const _ as usize },
        2332usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x91c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x920 as *const _ as usize },
        2336usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x920)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x924 as *const _ as usize },
        2340usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x924)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x928 as *const _ as usize },
        2344usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x928)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x92c as *const _ as usize },
        2348usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x92c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x930 as *const _ as usize },
        2352usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x930)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x934 as *const _ as usize },
        2356usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x934)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x938 as *const _ as usize },
        2360usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x938)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x93c as *const _ as usize },
        2364usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x93c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x940 as *const _ as usize },
        2368usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x940)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x944 as *const _ as usize },
        2372usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x944)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x948 as *const _ as usize },
        2376usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x948)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x94c as *const _ as usize },
        2380usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x94c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x950 as *const _ as usize },
        2384usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x950)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x954 as *const _ as usize },
        2388usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x954)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x958 as *const _ as usize },
        2392usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x958)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x95c as *const _ as usize },
        2396usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x95c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x960 as *const _ as usize },
        2400usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x960)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x964 as *const _ as usize },
        2404usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x964)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x968 as *const _ as usize },
        2408usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x968)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x96c as *const _ as usize },
        2412usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x96c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x970 as *const _ as usize },
        2416usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x970)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x974 as *const _ as usize },
        2420usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x974)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x978 as *const _ as usize },
        2424usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x978)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x97c as *const _ as usize },
        2428usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x97c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x980 as *const _ as usize },
        2432usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x980)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x984 as *const _ as usize },
        2436usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x984)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x988 as *const _ as usize },
        2440usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x988)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x98c as *const _ as usize },
        2444usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x98c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x990 as *const _ as usize },
        2448usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x990)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x994 as *const _ as usize },
        2452usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x994)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x998 as *const _ as usize },
        2456usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x998)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x99c as *const _ as usize },
        2460usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x99c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9a0 as *const _ as usize },
        2464usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9a4 as *const _ as usize },
        2468usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9a8 as *const _ as usize },
        2472usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9ac as *const _ as usize },
        2476usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9b0 as *const _ as usize },
        2480usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9b4 as *const _ as usize },
        2484usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9b8 as *const _ as usize },
        2488usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9bc as *const _ as usize },
        2492usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9c0 as *const _ as usize },
        2496usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9c4 as *const _ as usize },
        2500usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9c8 as *const _ as usize },
        2504usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9cc as *const _ as usize },
        2508usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9d0 as *const _ as usize },
        2512usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9d4 as *const _ as usize },
        2516usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9d8 as *const _ as usize },
        2520usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9dc as *const _ as usize },
        2524usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9e0 as *const _ as usize },
        2528usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9e4 as *const _ as usize },
        2532usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9e8 as *const _ as usize },
        2536usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9ec as *const _ as usize },
        2540usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9f0 as *const _ as usize },
        2544usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9f4 as *const _ as usize },
        2548usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9f8 as *const _ as usize },
        2552usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x9fc as *const _ as usize },
        2556usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x9fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa00 as *const _ as usize },
        2560usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa04 as *const _ as usize },
        2564usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa08 as *const _ as usize },
        2568usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa0c as *const _ as usize },
        2572usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa10 as *const _ as usize },
        2576usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa14 as *const _ as usize },
        2580usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa18 as *const _ as usize },
        2584usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa1c as *const _ as usize },
        2588usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa20 as *const _ as usize },
        2592usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa24 as *const _ as usize },
        2596usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa28 as *const _ as usize },
        2600usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa2c as *const _ as usize },
        2604usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa30 as *const _ as usize },
        2608usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa34 as *const _ as usize },
        2612usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa38 as *const _ as usize },
        2616usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa3c as *const _ as usize },
        2620usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa40 as *const _ as usize },
        2624usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa44 as *const _ as usize },
        2628usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa48 as *const _ as usize },
        2632usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa4c as *const _ as usize },
        2636usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa50 as *const _ as usize },
        2640usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa54 as *const _ as usize },
        2644usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa58 as *const _ as usize },
        2648usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa5c as *const _ as usize },
        2652usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa60 as *const _ as usize },
        2656usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa64 as *const _ as usize },
        2660usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa68 as *const _ as usize },
        2664usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa6c as *const _ as usize },
        2668usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa70 as *const _ as usize },
        2672usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa74 as *const _ as usize },
        2676usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa78 as *const _ as usize },
        2680usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa7c as *const _ as usize },
        2684usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa80 as *const _ as usize },
        2688usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa84 as *const _ as usize },
        2692usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa88 as *const _ as usize },
        2696usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa8c as *const _ as usize },
        2700usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa90 as *const _ as usize },
        2704usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa94 as *const _ as usize },
        2708usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa98 as *const _ as usize },
        2712usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xa9c as *const _ as usize },
        2716usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xa9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xaa0 as *const _ as usize },
        2720usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xaa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xaa4 as *const _ as usize },
        2724usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xaa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xaa8 as *const _ as usize },
        2728usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xaa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xaac as *const _ as usize },
        2732usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xaac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xab0 as *const _ as usize },
        2736usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xab0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xab4 as *const _ as usize },
        2740usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xab4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xab8 as *const _ as usize },
        2744usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xab8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xabc as *const _ as usize },
        2748usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xabc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xac0 as *const _ as usize },
        2752usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xac0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xac4 as *const _ as usize },
        2756usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xac4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xac8 as *const _ as usize },
        2760usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xac8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xacc as *const _ as usize },
        2764usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xacc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xad0 as *const _ as usize },
        2768usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xad0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xad4 as *const _ as usize },
        2772usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xad4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xad8 as *const _ as usize },
        2776usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xad8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xadc as *const _ as usize },
        2780usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xadc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xae0 as *const _ as usize },
        2784usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xae0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xae4 as *const _ as usize },
        2788usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xae4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xae8 as *const _ as usize },
        2792usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xae8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xaec as *const _ as usize },
        2796usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xaec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xaf0 as *const _ as usize },
        2800usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xaf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xaf4 as *const _ as usize },
        2804usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xaf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xaf8 as *const _ as usize },
        2808usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xaf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xafc as *const _ as usize },
        2812usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xafc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb00 as *const _ as usize },
        2816usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb04 as *const _ as usize },
        2820usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb08 as *const _ as usize },
        2824usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb0c as *const _ as usize },
        2828usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb10 as *const _ as usize },
        2832usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb14 as *const _ as usize },
        2836usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb18 as *const _ as usize },
        2840usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb1c as *const _ as usize },
        2844usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb20 as *const _ as usize },
        2848usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb24 as *const _ as usize },
        2852usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb28 as *const _ as usize },
        2856usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb2c as *const _ as usize },
        2860usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb30 as *const _ as usize },
        2864usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb34 as *const _ as usize },
        2868usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb38 as *const _ as usize },
        2872usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb3c as *const _ as usize },
        2876usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb40 as *const _ as usize },
        2880usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb44 as *const _ as usize },
        2884usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb48 as *const _ as usize },
        2888usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb4c as *const _ as usize },
        2892usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb50 as *const _ as usize },
        2896usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb54 as *const _ as usize },
        2900usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb58 as *const _ as usize },
        2904usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb5c as *const _ as usize },
        2908usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb60 as *const _ as usize },
        2912usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb64 as *const _ as usize },
        2916usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb68 as *const _ as usize },
        2920usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb6c as *const _ as usize },
        2924usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb70 as *const _ as usize },
        2928usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb74 as *const _ as usize },
        2932usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb78 as *const _ as usize },
        2936usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb7c as *const _ as usize },
        2940usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb80 as *const _ as usize },
        2944usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb84 as *const _ as usize },
        2948usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb88 as *const _ as usize },
        2952usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb8c as *const _ as usize },
        2956usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb90 as *const _ as usize },
        2960usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb94 as *const _ as usize },
        2964usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb98 as *const _ as usize },
        2968usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xb9c as *const _ as usize },
        2972usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xb9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xba0 as *const _ as usize },
        2976usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xba0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xba4 as *const _ as usize },
        2980usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xba4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xba8 as *const _ as usize },
        2984usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xba8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbac as *const _ as usize },
        2988usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbb0 as *const _ as usize },
        2992usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbb4 as *const _ as usize },
        2996usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbb8 as *const _ as usize },
        3000usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbbc as *const _ as usize },
        3004usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbc0 as *const _ as usize },
        3008usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbc4 as *const _ as usize },
        3012usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbc8 as *const _ as usize },
        3016usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbcc as *const _ as usize },
        3020usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbd0 as *const _ as usize },
        3024usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbd4 as *const _ as usize },
        3028usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbd8 as *const _ as usize },
        3032usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbdc as *const _ as usize },
        3036usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbe0 as *const _ as usize },
        3040usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbe4 as *const _ as usize },
        3044usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbe8 as *const _ as usize },
        3048usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbec as *const _ as usize },
        3052usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbf0 as *const _ as usize },
        3056usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbf4 as *const _ as usize },
        3060usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbf8 as *const _ as usize },
        3064usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xbfc as *const _ as usize },
        3068usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xbfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc00 as *const _ as usize },
        3072usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc04 as *const _ as usize },
        3076usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc08 as *const _ as usize },
        3080usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc0c as *const _ as usize },
        3084usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc10 as *const _ as usize },
        3088usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc14 as *const _ as usize },
        3092usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc18 as *const _ as usize },
        3096usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc1c as *const _ as usize },
        3100usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc20 as *const _ as usize },
        3104usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc24 as *const _ as usize },
        3108usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc28 as *const _ as usize },
        3112usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc2c as *const _ as usize },
        3116usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc30 as *const _ as usize },
        3120usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc34 as *const _ as usize },
        3124usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc38 as *const _ as usize },
        3128usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc3c as *const _ as usize },
        3132usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc40 as *const _ as usize },
        3136usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc44 as *const _ as usize },
        3140usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc48 as *const _ as usize },
        3144usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc4c as *const _ as usize },
        3148usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc50 as *const _ as usize },
        3152usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc54 as *const _ as usize },
        3156usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc58 as *const _ as usize },
        3160usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc5c as *const _ as usize },
        3164usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc60 as *const _ as usize },
        3168usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc64 as *const _ as usize },
        3172usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc68 as *const _ as usize },
        3176usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc6c as *const _ as usize },
        3180usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc70 as *const _ as usize },
        3184usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc74 as *const _ as usize },
        3188usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc78 as *const _ as usize },
        3192usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc7c as *const _ as usize },
        3196usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc80 as *const _ as usize },
        3200usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc84 as *const _ as usize },
        3204usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc88 as *const _ as usize },
        3208usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc8c as *const _ as usize },
        3212usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc90 as *const _ as usize },
        3216usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc94 as *const _ as usize },
        3220usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc98 as *const _ as usize },
        3224usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xc9c as *const _ as usize },
        3228usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xc9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xca0 as *const _ as usize },
        3232usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xca0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xca4 as *const _ as usize },
        3236usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xca4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xca8 as *const _ as usize },
        3240usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xca8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcac as *const _ as usize },
        3244usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcb0 as *const _ as usize },
        3248usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcb4 as *const _ as usize },
        3252usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcb8 as *const _ as usize },
        3256usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcbc as *const _ as usize },
        3260usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcc0 as *const _ as usize },
        3264usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcc4 as *const _ as usize },
        3268usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcc8 as *const _ as usize },
        3272usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xccc as *const _ as usize },
        3276usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xccc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcd0 as *const _ as usize },
        3280usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcd4 as *const _ as usize },
        3284usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcd8 as *const _ as usize },
        3288usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcdc as *const _ as usize },
        3292usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xce0 as *const _ as usize },
        3296usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xce0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xce4 as *const _ as usize },
        3300usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xce4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xce8 as *const _ as usize },
        3304usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xce8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcec as *const _ as usize },
        3308usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcf0 as *const _ as usize },
        3312usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcf4 as *const _ as usize },
        3316usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcf8 as *const _ as usize },
        3320usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xcfc as *const _ as usize },
        3324usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xcfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd00 as *const _ as usize },
        3328usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd04 as *const _ as usize },
        3332usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd08 as *const _ as usize },
        3336usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd0c as *const _ as usize },
        3340usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd10 as *const _ as usize },
        3344usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd14 as *const _ as usize },
        3348usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd18 as *const _ as usize },
        3352usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd1c as *const _ as usize },
        3356usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd20 as *const _ as usize },
        3360usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd24 as *const _ as usize },
        3364usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd28 as *const _ as usize },
        3368usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd2c as *const _ as usize },
        3372usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd30 as *const _ as usize },
        3376usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd34 as *const _ as usize },
        3380usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd38 as *const _ as usize },
        3384usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd3c as *const _ as usize },
        3388usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd40 as *const _ as usize },
        3392usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd44 as *const _ as usize },
        3396usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd48 as *const _ as usize },
        3400usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd4c as *const _ as usize },
        3404usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd50 as *const _ as usize },
        3408usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd54 as *const _ as usize },
        3412usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd58 as *const _ as usize },
        3416usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd5c as *const _ as usize },
        3420usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd60 as *const _ as usize },
        3424usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd64 as *const _ as usize },
        3428usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd68 as *const _ as usize },
        3432usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd6c as *const _ as usize },
        3436usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd70 as *const _ as usize },
        3440usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd74 as *const _ as usize },
        3444usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd78 as *const _ as usize },
        3448usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd7c as *const _ as usize },
        3452usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd80 as *const _ as usize },
        3456usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd84 as *const _ as usize },
        3460usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd88 as *const _ as usize },
        3464usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd8c as *const _ as usize },
        3468usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd90 as *const _ as usize },
        3472usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd94 as *const _ as usize },
        3476usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd98 as *const _ as usize },
        3480usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xd9c as *const _ as usize },
        3484usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xd9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xda0 as *const _ as usize },
        3488usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xda0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xda4 as *const _ as usize },
        3492usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xda4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xda8 as *const _ as usize },
        3496usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xda8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdac as *const _ as usize },
        3500usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdb0 as *const _ as usize },
        3504usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdb4 as *const _ as usize },
        3508usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdb8 as *const _ as usize },
        3512usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdbc as *const _ as usize },
        3516usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdc0 as *const _ as usize },
        3520usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdc4 as *const _ as usize },
        3524usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdc8 as *const _ as usize },
        3528usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdcc as *const _ as usize },
        3532usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdd0 as *const _ as usize },
        3536usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdd4 as *const _ as usize },
        3540usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdd8 as *const _ as usize },
        3544usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xddc as *const _ as usize },
        3548usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xddc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xde0 as *const _ as usize },
        3552usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xde0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xde4 as *const _ as usize },
        3556usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xde4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xde8 as *const _ as usize },
        3560usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xde8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdec as *const _ as usize },
        3564usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdf0 as *const _ as usize },
        3568usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdf4 as *const _ as usize },
        3572usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdf8 as *const _ as usize },
        3576usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xdfc as *const _ as usize },
        3580usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xdfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe00 as *const _ as usize },
        3584usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe04 as *const _ as usize },
        3588usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe08 as *const _ as usize },
        3592usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe0c as *const _ as usize },
        3596usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe10 as *const _ as usize },
        3600usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe14 as *const _ as usize },
        3604usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe18 as *const _ as usize },
        3608usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe1c as *const _ as usize },
        3612usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe20 as *const _ as usize },
        3616usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe24 as *const _ as usize },
        3620usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe28 as *const _ as usize },
        3624usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe2c as *const _ as usize },
        3628usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe30 as *const _ as usize },
        3632usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe34 as *const _ as usize },
        3636usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe38 as *const _ as usize },
        3640usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe3c as *const _ as usize },
        3644usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe40 as *const _ as usize },
        3648usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe44 as *const _ as usize },
        3652usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe48 as *const _ as usize },
        3656usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe4c as *const _ as usize },
        3660usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe50 as *const _ as usize },
        3664usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe54 as *const _ as usize },
        3668usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe58 as *const _ as usize },
        3672usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe5c as *const _ as usize },
        3676usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe60 as *const _ as usize },
        3680usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe64 as *const _ as usize },
        3684usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe68 as *const _ as usize },
        3688usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe6c as *const _ as usize },
        3692usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe70 as *const _ as usize },
        3696usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe74 as *const _ as usize },
        3700usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe78 as *const _ as usize },
        3704usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe7c as *const _ as usize },
        3708usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe80 as *const _ as usize },
        3712usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe84 as *const _ as usize },
        3716usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe88 as *const _ as usize },
        3720usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe8c as *const _ as usize },
        3724usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe90 as *const _ as usize },
        3728usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe94 as *const _ as usize },
        3732usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe98 as *const _ as usize },
        3736usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xe9c as *const _ as usize },
        3740usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xe9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xea0 as *const _ as usize },
        3744usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xea0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xea4 as *const _ as usize },
        3748usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xea4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xea8 as *const _ as usize },
        3752usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xea8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xeac as *const _ as usize },
        3756usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xeac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xeb0 as *const _ as usize },
        3760usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xeb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xeb4 as *const _ as usize },
        3764usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xeb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xeb8 as *const _ as usize },
        3768usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xeb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xebc as *const _ as usize },
        3772usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xebc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xec0 as *const _ as usize },
        3776usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xec0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xec4 as *const _ as usize },
        3780usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xec4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xec8 as *const _ as usize },
        3784usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xec8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xecc as *const _ as usize },
        3788usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xecc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xed0 as *const _ as usize },
        3792usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xed0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xed4 as *const _ as usize },
        3796usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xed4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xed8 as *const _ as usize },
        3800usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xed8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xedc as *const _ as usize },
        3804usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xedc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xee0 as *const _ as usize },
        3808usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xee0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xee4 as *const _ as usize },
        3812usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xee4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xee8 as *const _ as usize },
        3816usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xee8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xeec as *const _ as usize },
        3820usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xeec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xef0 as *const _ as usize },
        3824usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xef0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xef4 as *const _ as usize },
        3828usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xef4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xef8 as *const _ as usize },
        3832usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xef8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xefc as *const _ as usize },
        3836usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xefc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf00 as *const _ as usize },
        3840usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf04 as *const _ as usize },
        3844usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf08 as *const _ as usize },
        3848usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf0c as *const _ as usize },
        3852usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf10 as *const _ as usize },
        3856usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf14 as *const _ as usize },
        3860usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf18 as *const _ as usize },
        3864usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf1c as *const _ as usize },
        3868usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf20 as *const _ as usize },
        3872usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf24 as *const _ as usize },
        3876usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf28 as *const _ as usize },
        3880usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf2c as *const _ as usize },
        3884usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf30 as *const _ as usize },
        3888usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf34 as *const _ as usize },
        3892usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf38 as *const _ as usize },
        3896usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf3c as *const _ as usize },
        3900usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf40 as *const _ as usize },
        3904usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf44 as *const _ as usize },
        3908usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf48 as *const _ as usize },
        3912usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf4c as *const _ as usize },
        3916usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf50 as *const _ as usize },
        3920usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf54 as *const _ as usize },
        3924usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf58 as *const _ as usize },
        3928usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf5c as *const _ as usize },
        3932usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf60 as *const _ as usize },
        3936usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf64 as *const _ as usize },
        3940usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf68 as *const _ as usize },
        3944usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf6c as *const _ as usize },
        3948usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf70 as *const _ as usize },
        3952usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf74 as *const _ as usize },
        3956usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf78 as *const _ as usize },
        3960usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf7c as *const _ as usize },
        3964usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf80 as *const _ as usize },
        3968usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf84 as *const _ as usize },
        3972usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf88 as *const _ as usize },
        3976usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf8c as *const _ as usize },
        3980usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf90 as *const _ as usize },
        3984usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf94 as *const _ as usize },
        3988usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf98 as *const _ as usize },
        3992usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xf9c as *const _ as usize },
        3996usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xf9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfa0 as *const _ as usize },
        4000usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfa4 as *const _ as usize },
        4004usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfa8 as *const _ as usize },
        4008usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfac as *const _ as usize },
        4012usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfb0 as *const _ as usize },
        4016usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfb4 as *const _ as usize },
        4020usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfb8 as *const _ as usize },
        4024usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfbc as *const _ as usize },
        4028usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfc0 as *const _ as usize },
        4032usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfc4 as *const _ as usize },
        4036usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfc8 as *const _ as usize },
        4040usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfcc as *const _ as usize },
        4044usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfd0 as *const _ as usize },
        4048usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfd4 as *const _ as usize },
        4052usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfd8 as *const _ as usize },
        4056usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfdc as *const _ as usize },
        4060usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfe0 as *const _ as usize },
        4064usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfe4 as *const _ as usize },
        4068usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfe8 as *const _ as usize },
        4072usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xfec as *const _ as usize },
        4076usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xfec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xff0 as *const _ as usize },
        4080usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xff0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xff4 as *const _ as usize },
        4084usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xff4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xff8 as *const _ as usize },
        4088usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xff8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).xffc as *const _ as usize },
        4092usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(xffc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1000 as *const _ as usize },
        4096usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1000)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1004 as *const _ as usize },
        4100usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1004)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1008 as *const _ as usize },
        4104usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1008)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x100c as *const _ as usize },
        4108usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x100c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1010 as *const _ as usize },
        4112usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1010)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1014 as *const _ as usize },
        4116usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1014)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1018 as *const _ as usize },
        4120usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1018)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x101c as *const _ as usize },
        4124usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x101c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1020 as *const _ as usize },
        4128usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1020)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1024 as *const _ as usize },
        4132usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1024)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1028 as *const _ as usize },
        4136usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1028)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x102c as *const _ as usize },
        4140usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x102c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1030 as *const _ as usize },
        4144usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1030)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1034 as *const _ as usize },
        4148usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1034)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1038 as *const _ as usize },
        4152usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1038)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x103c as *const _ as usize },
        4156usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x103c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1040 as *const _ as usize },
        4160usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1040)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1044 as *const _ as usize },
        4164usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1044)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1048 as *const _ as usize },
        4168usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1048)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x104c as *const _ as usize },
        4172usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x104c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1050 as *const _ as usize },
        4176usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1050)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1054 as *const _ as usize },
        4180usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1054)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1058 as *const _ as usize },
        4184usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1058)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x105c as *const _ as usize },
        4188usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x105c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1060 as *const _ as usize },
        4192usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1060)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1064 as *const _ as usize },
        4196usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1064)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1068 as *const _ as usize },
        4200usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1068)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x106c as *const _ as usize },
        4204usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x106c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1070 as *const _ as usize },
        4208usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1070)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1074 as *const _ as usize },
        4212usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1074)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1078 as *const _ as usize },
        4216usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1078)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x107c as *const _ as usize },
        4220usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x107c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1080 as *const _ as usize },
        4224usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1080)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1084 as *const _ as usize },
        4228usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1084)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1088 as *const _ as usize },
        4232usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1088)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x108c as *const _ as usize },
        4236usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x108c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1090 as *const _ as usize },
        4240usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1090)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1094 as *const _ as usize },
        4244usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1094)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1098 as *const _ as usize },
        4248usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1098)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x109c as *const _ as usize },
        4252usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x109c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10a0 as *const _ as usize },
        4256usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10a4 as *const _ as usize },
        4260usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10a8 as *const _ as usize },
        4264usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10ac as *const _ as usize },
        4268usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10b0 as *const _ as usize },
        4272usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10b4 as *const _ as usize },
        4276usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10b8 as *const _ as usize },
        4280usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10bc as *const _ as usize },
        4284usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10c0 as *const _ as usize },
        4288usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10c4 as *const _ as usize },
        4292usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10c8 as *const _ as usize },
        4296usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10cc as *const _ as usize },
        4300usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10d0 as *const _ as usize },
        4304usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10d4 as *const _ as usize },
        4308usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10d8 as *const _ as usize },
        4312usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10dc as *const _ as usize },
        4316usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10e0 as *const _ as usize },
        4320usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10e4 as *const _ as usize },
        4324usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10e8 as *const _ as usize },
        4328usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10ec as *const _ as usize },
        4332usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10f0 as *const _ as usize },
        4336usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10f4 as *const _ as usize },
        4340usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10f8 as *const _ as usize },
        4344usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x10fc as *const _ as usize },
        4348usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x10fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1100 as *const _ as usize },
        4352usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1104 as *const _ as usize },
        4356usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1108 as *const _ as usize },
        4360usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x110c as *const _ as usize },
        4364usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x110c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1110 as *const _ as usize },
        4368usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1114 as *const _ as usize },
        4372usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1118 as *const _ as usize },
        4376usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x111c as *const _ as usize },
        4380usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x111c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1120 as *const _ as usize },
        4384usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1124 as *const _ as usize },
        4388usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1128 as *const _ as usize },
        4392usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x112c as *const _ as usize },
        4396usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x112c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1130 as *const _ as usize },
        4400usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1134 as *const _ as usize },
        4404usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1138 as *const _ as usize },
        4408usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x113c as *const _ as usize },
        4412usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x113c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1140 as *const _ as usize },
        4416usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1144 as *const _ as usize },
        4420usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1148 as *const _ as usize },
        4424usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x114c as *const _ as usize },
        4428usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x114c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1150 as *const _ as usize },
        4432usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1154 as *const _ as usize },
        4436usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1158 as *const _ as usize },
        4440usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x115c as *const _ as usize },
        4444usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x115c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1160 as *const _ as usize },
        4448usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1164 as *const _ as usize },
        4452usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1168 as *const _ as usize },
        4456usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x116c as *const _ as usize },
        4460usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x116c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1170 as *const _ as usize },
        4464usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1174 as *const _ as usize },
        4468usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1178 as *const _ as usize },
        4472usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x117c as *const _ as usize },
        4476usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x117c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1180 as *const _ as usize },
        4480usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1184 as *const _ as usize },
        4484usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1188 as *const _ as usize },
        4488usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x118c as *const _ as usize },
        4492usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x118c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1190 as *const _ as usize },
        4496usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1190)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1194 as *const _ as usize },
        4500usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1194)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1198 as *const _ as usize },
        4504usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1198)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x119c as *const _ as usize },
        4508usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x119c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11a0 as *const _ as usize },
        4512usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11a4 as *const _ as usize },
        4516usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11a8 as *const _ as usize },
        4520usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11ac as *const _ as usize },
        4524usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11b0 as *const _ as usize },
        4528usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11b4 as *const _ as usize },
        4532usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11b8 as *const _ as usize },
        4536usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11bc as *const _ as usize },
        4540usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11c0 as *const _ as usize },
        4544usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11c4 as *const _ as usize },
        4548usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11c8 as *const _ as usize },
        4552usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11cc as *const _ as usize },
        4556usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11d0 as *const _ as usize },
        4560usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11d4 as *const _ as usize },
        4564usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11d8 as *const _ as usize },
        4568usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11dc as *const _ as usize },
        4572usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11e0 as *const _ as usize },
        4576usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11e4 as *const _ as usize },
        4580usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11e8 as *const _ as usize },
        4584usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11ec as *const _ as usize },
        4588usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11f0 as *const _ as usize },
        4592usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11f4 as *const _ as usize },
        4596usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11f8 as *const _ as usize },
        4600usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x11fc as *const _ as usize },
        4604usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x11fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1200 as *const _ as usize },
        4608usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1200)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1204 as *const _ as usize },
        4612usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1204)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1208 as *const _ as usize },
        4616usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1208)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x120c as *const _ as usize },
        4620usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x120c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1210 as *const _ as usize },
        4624usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1210)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1214 as *const _ as usize },
        4628usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1214)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1218 as *const _ as usize },
        4632usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1218)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x121c as *const _ as usize },
        4636usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x121c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1220 as *const _ as usize },
        4640usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1220)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1224 as *const _ as usize },
        4644usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1224)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1228 as *const _ as usize },
        4648usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1228)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x122c as *const _ as usize },
        4652usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x122c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1230 as *const _ as usize },
        4656usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1230)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1234 as *const _ as usize },
        4660usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1234)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1238 as *const _ as usize },
        4664usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1238)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x123c as *const _ as usize },
        4668usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x123c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1240 as *const _ as usize },
        4672usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1240)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1244 as *const _ as usize },
        4676usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1244)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1248 as *const _ as usize },
        4680usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1248)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x124c as *const _ as usize },
        4684usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x124c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1250 as *const _ as usize },
        4688usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1250)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1254 as *const _ as usize },
        4692usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1254)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1258 as *const _ as usize },
        4696usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1258)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x125c as *const _ as usize },
        4700usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x125c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1260 as *const _ as usize },
        4704usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1260)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1264 as *const _ as usize },
        4708usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1264)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1268 as *const _ as usize },
        4712usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1268)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x126c as *const _ as usize },
        4716usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x126c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1270 as *const _ as usize },
        4720usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1270)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1274 as *const _ as usize },
        4724usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1274)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1278 as *const _ as usize },
        4728usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1278)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x127c as *const _ as usize },
        4732usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x127c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1280 as *const _ as usize },
        4736usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1280)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1284 as *const _ as usize },
        4740usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1284)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1288 as *const _ as usize },
        4744usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1288)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x128c as *const _ as usize },
        4748usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x128c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1290 as *const _ as usize },
        4752usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1290)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1294 as *const _ as usize },
        4756usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1294)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1298 as *const _ as usize },
        4760usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1298)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x129c as *const _ as usize },
        4764usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x129c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12a0 as *const _ as usize },
        4768usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12a4 as *const _ as usize },
        4772usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12a8 as *const _ as usize },
        4776usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12ac as *const _ as usize },
        4780usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12b0 as *const _ as usize },
        4784usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12b4 as *const _ as usize },
        4788usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12b8 as *const _ as usize },
        4792usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12bc as *const _ as usize },
        4796usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12c0 as *const _ as usize },
        4800usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12c4 as *const _ as usize },
        4804usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12c8 as *const _ as usize },
        4808usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12cc as *const _ as usize },
        4812usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12d0 as *const _ as usize },
        4816usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12d4 as *const _ as usize },
        4820usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12d8 as *const _ as usize },
        4824usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12dc as *const _ as usize },
        4828usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12e0 as *const _ as usize },
        4832usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12e4 as *const _ as usize },
        4836usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12e8 as *const _ as usize },
        4840usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12ec as *const _ as usize },
        4844usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12f0 as *const _ as usize },
        4848usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12f4 as *const _ as usize },
        4852usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12f8 as *const _ as usize },
        4856usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x12fc as *const _ as usize },
        4860usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x12fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1300 as *const _ as usize },
        4864usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1300)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1304 as *const _ as usize },
        4868usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1304)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1308 as *const _ as usize },
        4872usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1308)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x130c as *const _ as usize },
        4876usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x130c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1310 as *const _ as usize },
        4880usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1310)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1314 as *const _ as usize },
        4884usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1314)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1318 as *const _ as usize },
        4888usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1318)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x131c as *const _ as usize },
        4892usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x131c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1320 as *const _ as usize },
        4896usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1320)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1324 as *const _ as usize },
        4900usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1324)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1328 as *const _ as usize },
        4904usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1328)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x132c as *const _ as usize },
        4908usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x132c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1330 as *const _ as usize },
        4912usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1330)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1334 as *const _ as usize },
        4916usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1334)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1338 as *const _ as usize },
        4920usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1338)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x133c as *const _ as usize },
        4924usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x133c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1340 as *const _ as usize },
        4928usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1340)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1344 as *const _ as usize },
        4932usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1344)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1348 as *const _ as usize },
        4936usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1348)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x134c as *const _ as usize },
        4940usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x134c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1350 as *const _ as usize },
        4944usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1350)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1354 as *const _ as usize },
        4948usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1354)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1358 as *const _ as usize },
        4952usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1358)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x135c as *const _ as usize },
        4956usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x135c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1360 as *const _ as usize },
        4960usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1360)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1364 as *const _ as usize },
        4964usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1364)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1368 as *const _ as usize },
        4968usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1368)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x136c as *const _ as usize },
        4972usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x136c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1370 as *const _ as usize },
        4976usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1370)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1374 as *const _ as usize },
        4980usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1374)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1378 as *const _ as usize },
        4984usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1378)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x137c as *const _ as usize },
        4988usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x137c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1380 as *const _ as usize },
        4992usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1380)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1384 as *const _ as usize },
        4996usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1384)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1388 as *const _ as usize },
        5000usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1388)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x138c as *const _ as usize },
        5004usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x138c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1390 as *const _ as usize },
        5008usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1390)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1394 as *const _ as usize },
        5012usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1394)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1398 as *const _ as usize },
        5016usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1398)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x139c as *const _ as usize },
        5020usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x139c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13a0 as *const _ as usize },
        5024usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13a4 as *const _ as usize },
        5028usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13a8 as *const _ as usize },
        5032usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13ac as *const _ as usize },
        5036usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13b0 as *const _ as usize },
        5040usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13b4 as *const _ as usize },
        5044usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13b8 as *const _ as usize },
        5048usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13bc as *const _ as usize },
        5052usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13c0 as *const _ as usize },
        5056usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13c4 as *const _ as usize },
        5060usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13c8 as *const _ as usize },
        5064usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13cc as *const _ as usize },
        5068usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13d0 as *const _ as usize },
        5072usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13d4 as *const _ as usize },
        5076usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13d8 as *const _ as usize },
        5080usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13dc as *const _ as usize },
        5084usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13e0 as *const _ as usize },
        5088usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13e4 as *const _ as usize },
        5092usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13e8 as *const _ as usize },
        5096usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13ec as *const _ as usize },
        5100usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13f0 as *const _ as usize },
        5104usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13f4 as *const _ as usize },
        5108usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13f8 as *const _ as usize },
        5112usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x13fc as *const _ as usize },
        5116usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x13fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1400 as *const _ as usize },
        5120usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1400)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1404 as *const _ as usize },
        5124usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1404)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1408 as *const _ as usize },
        5128usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1408)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x140c as *const _ as usize },
        5132usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x140c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1410 as *const _ as usize },
        5136usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1410)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1414 as *const _ as usize },
        5140usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1414)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1418 as *const _ as usize },
        5144usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1418)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x141c as *const _ as usize },
        5148usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x141c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1420 as *const _ as usize },
        5152usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1420)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1424 as *const _ as usize },
        5156usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1424)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1428 as *const _ as usize },
        5160usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1428)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x142c as *const _ as usize },
        5164usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x142c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1430 as *const _ as usize },
        5168usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1430)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1434 as *const _ as usize },
        5172usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1434)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1438 as *const _ as usize },
        5176usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1438)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x143c as *const _ as usize },
        5180usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x143c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1440 as *const _ as usize },
        5184usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1440)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1444 as *const _ as usize },
        5188usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1444)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1448 as *const _ as usize },
        5192usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1448)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x144c as *const _ as usize },
        5196usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x144c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1450 as *const _ as usize },
        5200usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1450)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1454 as *const _ as usize },
        5204usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1454)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1458 as *const _ as usize },
        5208usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1458)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x145c as *const _ as usize },
        5212usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x145c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1460 as *const _ as usize },
        5216usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1460)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1464 as *const _ as usize },
        5220usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1464)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1468 as *const _ as usize },
        5224usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1468)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x146c as *const _ as usize },
        5228usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x146c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1470 as *const _ as usize },
        5232usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1470)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1474 as *const _ as usize },
        5236usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1474)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1478 as *const _ as usize },
        5240usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1478)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x147c as *const _ as usize },
        5244usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x147c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1480 as *const _ as usize },
        5248usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1480)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1484 as *const _ as usize },
        5252usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1484)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1488 as *const _ as usize },
        5256usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1488)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x148c as *const _ as usize },
        5260usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x148c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1490 as *const _ as usize },
        5264usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1490)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1494 as *const _ as usize },
        5268usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1494)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1498 as *const _ as usize },
        5272usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1498)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x149c as *const _ as usize },
        5276usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x149c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14a0 as *const _ as usize },
        5280usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14a4 as *const _ as usize },
        5284usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14a8 as *const _ as usize },
        5288usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14ac as *const _ as usize },
        5292usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14b0 as *const _ as usize },
        5296usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14b4 as *const _ as usize },
        5300usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14b8 as *const _ as usize },
        5304usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14bc as *const _ as usize },
        5308usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14c0 as *const _ as usize },
        5312usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14c4 as *const _ as usize },
        5316usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14c8 as *const _ as usize },
        5320usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14cc as *const _ as usize },
        5324usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14d0 as *const _ as usize },
        5328usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14d4 as *const _ as usize },
        5332usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14d8 as *const _ as usize },
        5336usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14dc as *const _ as usize },
        5340usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14e0 as *const _ as usize },
        5344usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14e4 as *const _ as usize },
        5348usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14e8 as *const _ as usize },
        5352usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14ec as *const _ as usize },
        5356usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14f0 as *const _ as usize },
        5360usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14f4 as *const _ as usize },
        5364usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14f8 as *const _ as usize },
        5368usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x14fc as *const _ as usize },
        5372usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x14fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1500 as *const _ as usize },
        5376usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1500)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1504 as *const _ as usize },
        5380usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1504)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1508 as *const _ as usize },
        5384usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1508)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x150c as *const _ as usize },
        5388usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x150c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1510 as *const _ as usize },
        5392usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1510)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1514 as *const _ as usize },
        5396usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1514)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1518 as *const _ as usize },
        5400usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1518)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x151c as *const _ as usize },
        5404usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x151c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1520 as *const _ as usize },
        5408usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1520)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1524 as *const _ as usize },
        5412usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1524)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1528 as *const _ as usize },
        5416usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1528)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x152c as *const _ as usize },
        5420usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x152c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1530 as *const _ as usize },
        5424usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1530)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1534 as *const _ as usize },
        5428usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1534)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1538 as *const _ as usize },
        5432usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1538)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x153c as *const _ as usize },
        5436usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x153c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1540 as *const _ as usize },
        5440usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1540)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1544 as *const _ as usize },
        5444usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1544)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1548 as *const _ as usize },
        5448usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1548)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x154c as *const _ as usize },
        5452usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x154c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1550 as *const _ as usize },
        5456usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1550)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1554 as *const _ as usize },
        5460usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1554)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1558 as *const _ as usize },
        5464usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1558)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x155c as *const _ as usize },
        5468usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x155c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1560 as *const _ as usize },
        5472usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1560)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1564 as *const _ as usize },
        5476usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1564)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1568 as *const _ as usize },
        5480usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1568)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x156c as *const _ as usize },
        5484usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x156c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1570 as *const _ as usize },
        5488usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1570)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1574 as *const _ as usize },
        5492usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1574)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1578 as *const _ as usize },
        5496usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1578)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x157c as *const _ as usize },
        5500usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x157c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1580 as *const _ as usize },
        5504usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1580)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1584 as *const _ as usize },
        5508usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1584)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1588 as *const _ as usize },
        5512usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1588)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x158c as *const _ as usize },
        5516usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x158c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1590 as *const _ as usize },
        5520usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1590)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1594 as *const _ as usize },
        5524usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1594)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1598 as *const _ as usize },
        5528usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1598)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x159c as *const _ as usize },
        5532usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x159c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15a0 as *const _ as usize },
        5536usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15a4 as *const _ as usize },
        5540usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15a8 as *const _ as usize },
        5544usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15ac as *const _ as usize },
        5548usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15b0 as *const _ as usize },
        5552usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15b4 as *const _ as usize },
        5556usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15b8 as *const _ as usize },
        5560usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15bc as *const _ as usize },
        5564usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15c0 as *const _ as usize },
        5568usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15c4 as *const _ as usize },
        5572usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15c8 as *const _ as usize },
        5576usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15cc as *const _ as usize },
        5580usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15d0 as *const _ as usize },
        5584usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15d4 as *const _ as usize },
        5588usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15d8 as *const _ as usize },
        5592usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15dc as *const _ as usize },
        5596usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15e0 as *const _ as usize },
        5600usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15e4 as *const _ as usize },
        5604usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15e8 as *const _ as usize },
        5608usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15ec as *const _ as usize },
        5612usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15f0 as *const _ as usize },
        5616usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15f4 as *const _ as usize },
        5620usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15f8 as *const _ as usize },
        5624usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x15fc as *const _ as usize },
        5628usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x15fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1600 as *const _ as usize },
        5632usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1600)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1604 as *const _ as usize },
        5636usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1604)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1608 as *const _ as usize },
        5640usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1608)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x160c as *const _ as usize },
        5644usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x160c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1610 as *const _ as usize },
        5648usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1610)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1614 as *const _ as usize },
        5652usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1614)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1618 as *const _ as usize },
        5656usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1618)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x161c as *const _ as usize },
        5660usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x161c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1620 as *const _ as usize },
        5664usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1620)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1624 as *const _ as usize },
        5668usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1624)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1628 as *const _ as usize },
        5672usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1628)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x162c as *const _ as usize },
        5676usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x162c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1630 as *const _ as usize },
        5680usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1630)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1634 as *const _ as usize },
        5684usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1634)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1638 as *const _ as usize },
        5688usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1638)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x163c as *const _ as usize },
        5692usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x163c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1640 as *const _ as usize },
        5696usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1640)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1644 as *const _ as usize },
        5700usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1644)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1648 as *const _ as usize },
        5704usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1648)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x164c as *const _ as usize },
        5708usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x164c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1650 as *const _ as usize },
        5712usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1650)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1654 as *const _ as usize },
        5716usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1654)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1658 as *const _ as usize },
        5720usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1658)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x165c as *const _ as usize },
        5724usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x165c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1660 as *const _ as usize },
        5728usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1660)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1664 as *const _ as usize },
        5732usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1664)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1668 as *const _ as usize },
        5736usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1668)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x166c as *const _ as usize },
        5740usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x166c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1670 as *const _ as usize },
        5744usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1670)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1674 as *const _ as usize },
        5748usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1674)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1678 as *const _ as usize },
        5752usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1678)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x167c as *const _ as usize },
        5756usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x167c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1680 as *const _ as usize },
        5760usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1680)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1684 as *const _ as usize },
        5764usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1684)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1688 as *const _ as usize },
        5768usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1688)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x168c as *const _ as usize },
        5772usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x168c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1690 as *const _ as usize },
        5776usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1690)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1694 as *const _ as usize },
        5780usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1694)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1698 as *const _ as usize },
        5784usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1698)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x169c as *const _ as usize },
        5788usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x169c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16a0 as *const _ as usize },
        5792usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16a4 as *const _ as usize },
        5796usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16a8 as *const _ as usize },
        5800usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16ac as *const _ as usize },
        5804usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16b0 as *const _ as usize },
        5808usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16b4 as *const _ as usize },
        5812usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16b8 as *const _ as usize },
        5816usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16bc as *const _ as usize },
        5820usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16c0 as *const _ as usize },
        5824usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16c4 as *const _ as usize },
        5828usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16c8 as *const _ as usize },
        5832usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16cc as *const _ as usize },
        5836usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16d0 as *const _ as usize },
        5840usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16d4 as *const _ as usize },
        5844usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16d8 as *const _ as usize },
        5848usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16dc as *const _ as usize },
        5852usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16e0 as *const _ as usize },
        5856usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16e4 as *const _ as usize },
        5860usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16e8 as *const _ as usize },
        5864usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16ec as *const _ as usize },
        5868usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16f0 as *const _ as usize },
        5872usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16f4 as *const _ as usize },
        5876usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16f8 as *const _ as usize },
        5880usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x16fc as *const _ as usize },
        5884usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x16fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1700 as *const _ as usize },
        5888usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1700)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1704 as *const _ as usize },
        5892usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1704)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1708 as *const _ as usize },
        5896usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1708)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x170c as *const _ as usize },
        5900usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x170c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1710 as *const _ as usize },
        5904usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1710)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1714 as *const _ as usize },
        5908usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1714)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1718 as *const _ as usize },
        5912usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1718)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x171c as *const _ as usize },
        5916usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x171c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1720 as *const _ as usize },
        5920usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1720)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1724 as *const _ as usize },
        5924usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1724)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1728 as *const _ as usize },
        5928usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1728)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x172c as *const _ as usize },
        5932usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x172c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1730 as *const _ as usize },
        5936usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1730)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1734 as *const _ as usize },
        5940usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1734)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1738 as *const _ as usize },
        5944usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1738)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x173c as *const _ as usize },
        5948usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x173c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1740 as *const _ as usize },
        5952usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1740)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1744 as *const _ as usize },
        5956usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1744)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1748 as *const _ as usize },
        5960usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1748)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x174c as *const _ as usize },
        5964usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x174c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1750 as *const _ as usize },
        5968usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1750)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1754 as *const _ as usize },
        5972usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1754)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1758 as *const _ as usize },
        5976usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1758)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x175c as *const _ as usize },
        5980usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x175c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1760 as *const _ as usize },
        5984usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1760)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1764 as *const _ as usize },
        5988usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1764)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1768 as *const _ as usize },
        5992usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1768)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x176c as *const _ as usize },
        5996usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x176c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1770 as *const _ as usize },
        6000usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1770)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1774 as *const _ as usize },
        6004usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1774)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1778 as *const _ as usize },
        6008usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1778)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x177c as *const _ as usize },
        6012usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x177c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1780 as *const _ as usize },
        6016usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1780)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1784 as *const _ as usize },
        6020usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1784)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1788 as *const _ as usize },
        6024usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1788)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x178c as *const _ as usize },
        6028usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x178c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1790 as *const _ as usize },
        6032usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1790)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1794 as *const _ as usize },
        6036usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1794)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1798 as *const _ as usize },
        6040usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1798)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x179c as *const _ as usize },
        6044usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x179c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17a0 as *const _ as usize },
        6048usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17a4 as *const _ as usize },
        6052usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17a8 as *const _ as usize },
        6056usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17ac as *const _ as usize },
        6060usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17b0 as *const _ as usize },
        6064usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17b4 as *const _ as usize },
        6068usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17b8 as *const _ as usize },
        6072usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17bc as *const _ as usize },
        6076usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17c0 as *const _ as usize },
        6080usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17c4 as *const _ as usize },
        6084usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17c8 as *const _ as usize },
        6088usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17cc as *const _ as usize },
        6092usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17d0 as *const _ as usize },
        6096usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17d4 as *const _ as usize },
        6100usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17d8 as *const _ as usize },
        6104usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17dc as *const _ as usize },
        6108usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17e0 as *const _ as usize },
        6112usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17e4 as *const _ as usize },
        6116usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17e8 as *const _ as usize },
        6120usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17ec as *const _ as usize },
        6124usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17f0 as *const _ as usize },
        6128usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17f4 as *const _ as usize },
        6132usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17f8 as *const _ as usize },
        6136usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x17fc as *const _ as usize },
        6140usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x17fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1800 as *const _ as usize },
        6144usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1800)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1804 as *const _ as usize },
        6148usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1804)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1808 as *const _ as usize },
        6152usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1808)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x180c as *const _ as usize },
        6156usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x180c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1810 as *const _ as usize },
        6160usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1810)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1814 as *const _ as usize },
        6164usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1814)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1818 as *const _ as usize },
        6168usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1818)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x181c as *const _ as usize },
        6172usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x181c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1820 as *const _ as usize },
        6176usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1820)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1824 as *const _ as usize },
        6180usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1824)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1828 as *const _ as usize },
        6184usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1828)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x182c as *const _ as usize },
        6188usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x182c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1830 as *const _ as usize },
        6192usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1830)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1834 as *const _ as usize },
        6196usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1834)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1838 as *const _ as usize },
        6200usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1838)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x183c as *const _ as usize },
        6204usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x183c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1840 as *const _ as usize },
        6208usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1840)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1844 as *const _ as usize },
        6212usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1844)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1848 as *const _ as usize },
        6216usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1848)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x184c as *const _ as usize },
        6220usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x184c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1850 as *const _ as usize },
        6224usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1850)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1854 as *const _ as usize },
        6228usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1854)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1858 as *const _ as usize },
        6232usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1858)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x185c as *const _ as usize },
        6236usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x185c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1860 as *const _ as usize },
        6240usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1860)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1864 as *const _ as usize },
        6244usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1864)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1868 as *const _ as usize },
        6248usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1868)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x186c as *const _ as usize },
        6252usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x186c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1870 as *const _ as usize },
        6256usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1870)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1874 as *const _ as usize },
        6260usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1874)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1878 as *const _ as usize },
        6264usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1878)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x187c as *const _ as usize },
        6268usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x187c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1880 as *const _ as usize },
        6272usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1880)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1884 as *const _ as usize },
        6276usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1884)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1888 as *const _ as usize },
        6280usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1888)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x188c as *const _ as usize },
        6284usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x188c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1890 as *const _ as usize },
        6288usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1890)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1894 as *const _ as usize },
        6292usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1894)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1898 as *const _ as usize },
        6296usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1898)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x189c as *const _ as usize },
        6300usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x189c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18a0 as *const _ as usize },
        6304usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18a4 as *const _ as usize },
        6308usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18a8 as *const _ as usize },
        6312usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18ac as *const _ as usize },
        6316usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18b0 as *const _ as usize },
        6320usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18b4 as *const _ as usize },
        6324usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18b8 as *const _ as usize },
        6328usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18bc as *const _ as usize },
        6332usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18c0 as *const _ as usize },
        6336usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18c4 as *const _ as usize },
        6340usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18c8 as *const _ as usize },
        6344usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18cc as *const _ as usize },
        6348usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18d0 as *const _ as usize },
        6352usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18d4 as *const _ as usize },
        6356usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18d8 as *const _ as usize },
        6360usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18dc as *const _ as usize },
        6364usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18e0 as *const _ as usize },
        6368usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18e4 as *const _ as usize },
        6372usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18e8 as *const _ as usize },
        6376usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18ec as *const _ as usize },
        6380usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18f0 as *const _ as usize },
        6384usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18f4 as *const _ as usize },
        6388usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18f8 as *const _ as usize },
        6392usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x18fc as *const _ as usize },
        6396usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x18fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1900 as *const _ as usize },
        6400usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1900)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1904 as *const _ as usize },
        6404usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1904)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1908 as *const _ as usize },
        6408usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1908)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x190c as *const _ as usize },
        6412usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x190c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1910 as *const _ as usize },
        6416usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1910)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1914 as *const _ as usize },
        6420usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1914)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1918 as *const _ as usize },
        6424usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1918)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x191c as *const _ as usize },
        6428usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x191c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1920 as *const _ as usize },
        6432usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1920)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1924 as *const _ as usize },
        6436usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1924)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1928 as *const _ as usize },
        6440usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1928)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x192c as *const _ as usize },
        6444usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x192c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1930 as *const _ as usize },
        6448usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1930)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1934 as *const _ as usize },
        6452usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1934)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1938 as *const _ as usize },
        6456usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1938)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x193c as *const _ as usize },
        6460usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x193c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1940 as *const _ as usize },
        6464usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1940)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1944 as *const _ as usize },
        6468usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1944)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1948 as *const _ as usize },
        6472usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1948)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x194c as *const _ as usize },
        6476usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x194c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1950 as *const _ as usize },
        6480usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1950)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1954 as *const _ as usize },
        6484usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1954)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1958 as *const _ as usize },
        6488usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1958)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x195c as *const _ as usize },
        6492usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x195c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1960 as *const _ as usize },
        6496usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1960)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1964 as *const _ as usize },
        6500usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1964)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1968 as *const _ as usize },
        6504usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1968)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x196c as *const _ as usize },
        6508usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x196c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1970 as *const _ as usize },
        6512usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1970)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1974 as *const _ as usize },
        6516usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1974)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1978 as *const _ as usize },
        6520usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1978)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x197c as *const _ as usize },
        6524usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x197c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1980 as *const _ as usize },
        6528usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1980)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1984 as *const _ as usize },
        6532usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1984)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1988 as *const _ as usize },
        6536usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1988)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x198c as *const _ as usize },
        6540usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x198c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1990 as *const _ as usize },
        6544usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1990)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1994 as *const _ as usize },
        6548usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1994)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1998 as *const _ as usize },
        6552usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1998)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x199c as *const _ as usize },
        6556usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x199c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19a0 as *const _ as usize },
        6560usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19a4 as *const _ as usize },
        6564usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19a8 as *const _ as usize },
        6568usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19ac as *const _ as usize },
        6572usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19b0 as *const _ as usize },
        6576usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19b4 as *const _ as usize },
        6580usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19b8 as *const _ as usize },
        6584usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19bc as *const _ as usize },
        6588usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19c0 as *const _ as usize },
        6592usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19c4 as *const _ as usize },
        6596usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19c8 as *const _ as usize },
        6600usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19cc as *const _ as usize },
        6604usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19d0 as *const _ as usize },
        6608usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19d4 as *const _ as usize },
        6612usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19d8 as *const _ as usize },
        6616usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19dc as *const _ as usize },
        6620usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19e0 as *const _ as usize },
        6624usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19e4 as *const _ as usize },
        6628usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19e8 as *const _ as usize },
        6632usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19ec as *const _ as usize },
        6636usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19f0 as *const _ as usize },
        6640usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19f4 as *const _ as usize },
        6644usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19f8 as *const _ as usize },
        6648usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x19fc as *const _ as usize },
        6652usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x19fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a00 as *const _ as usize },
        6656usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a04 as *const _ as usize },
        6660usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a08 as *const _ as usize },
        6664usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a0c as *const _ as usize },
        6668usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a10 as *const _ as usize },
        6672usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a14 as *const _ as usize },
        6676usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a18 as *const _ as usize },
        6680usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a1c as *const _ as usize },
        6684usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a20 as *const _ as usize },
        6688usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a24 as *const _ as usize },
        6692usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a28 as *const _ as usize },
        6696usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a2c as *const _ as usize },
        6700usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a30 as *const _ as usize },
        6704usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a34 as *const _ as usize },
        6708usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a38 as *const _ as usize },
        6712usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a3c as *const _ as usize },
        6716usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a40 as *const _ as usize },
        6720usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a44 as *const _ as usize },
        6724usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a48 as *const _ as usize },
        6728usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a4c as *const _ as usize },
        6732usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a50 as *const _ as usize },
        6736usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a54 as *const _ as usize },
        6740usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a58 as *const _ as usize },
        6744usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a5c as *const _ as usize },
        6748usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a60 as *const _ as usize },
        6752usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a64 as *const _ as usize },
        6756usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a68 as *const _ as usize },
        6760usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a6c as *const _ as usize },
        6764usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a70 as *const _ as usize },
        6768usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a74 as *const _ as usize },
        6772usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a78 as *const _ as usize },
        6776usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a7c as *const _ as usize },
        6780usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a80 as *const _ as usize },
        6784usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a84 as *const _ as usize },
        6788usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a88 as *const _ as usize },
        6792usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a8c as *const _ as usize },
        6796usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a90 as *const _ as usize },
        6800usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a94 as *const _ as usize },
        6804usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a98 as *const _ as usize },
        6808usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1a9c as *const _ as usize },
        6812usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1a9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1aa0 as *const _ as usize },
        6816usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1aa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1aa4 as *const _ as usize },
        6820usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1aa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1aa8 as *const _ as usize },
        6824usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1aa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1aac as *const _ as usize },
        6828usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1aac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ab0 as *const _ as usize },
        6832usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ab0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ab4 as *const _ as usize },
        6836usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ab4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ab8 as *const _ as usize },
        6840usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ab8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1abc as *const _ as usize },
        6844usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1abc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ac0 as *const _ as usize },
        6848usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ac0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ac4 as *const _ as usize },
        6852usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ac4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ac8 as *const _ as usize },
        6856usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ac8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1acc as *const _ as usize },
        6860usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1acc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ad0 as *const _ as usize },
        6864usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ad0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ad4 as *const _ as usize },
        6868usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ad4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ad8 as *const _ as usize },
        6872usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ad8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1adc as *const _ as usize },
        6876usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1adc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ae0 as *const _ as usize },
        6880usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ae0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ae4 as *const _ as usize },
        6884usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ae4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ae8 as *const _ as usize },
        6888usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ae8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1aec as *const _ as usize },
        6892usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1aec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1af0 as *const _ as usize },
        6896usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1af0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1af4 as *const _ as usize },
        6900usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1af4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1af8 as *const _ as usize },
        6904usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1af8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1afc as *const _ as usize },
        6908usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1afc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b00 as *const _ as usize },
        6912usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b04 as *const _ as usize },
        6916usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b08 as *const _ as usize },
        6920usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b0c as *const _ as usize },
        6924usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b10 as *const _ as usize },
        6928usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b14 as *const _ as usize },
        6932usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b18 as *const _ as usize },
        6936usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b1c as *const _ as usize },
        6940usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b20 as *const _ as usize },
        6944usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b24 as *const _ as usize },
        6948usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b28 as *const _ as usize },
        6952usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b2c as *const _ as usize },
        6956usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b30 as *const _ as usize },
        6960usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b34 as *const _ as usize },
        6964usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b38 as *const _ as usize },
        6968usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b3c as *const _ as usize },
        6972usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b40 as *const _ as usize },
        6976usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b44 as *const _ as usize },
        6980usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b48 as *const _ as usize },
        6984usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b4c as *const _ as usize },
        6988usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b50 as *const _ as usize },
        6992usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b54 as *const _ as usize },
        6996usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b58 as *const _ as usize },
        7000usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b5c as *const _ as usize },
        7004usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b60 as *const _ as usize },
        7008usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b64 as *const _ as usize },
        7012usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b68 as *const _ as usize },
        7016usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b6c as *const _ as usize },
        7020usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b70 as *const _ as usize },
        7024usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b74 as *const _ as usize },
        7028usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b78 as *const _ as usize },
        7032usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b7c as *const _ as usize },
        7036usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b80 as *const _ as usize },
        7040usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b84 as *const _ as usize },
        7044usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b88 as *const _ as usize },
        7048usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b8c as *const _ as usize },
        7052usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b90 as *const _ as usize },
        7056usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b94 as *const _ as usize },
        7060usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b98 as *const _ as usize },
        7064usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1b9c as *const _ as usize },
        7068usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1b9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ba0 as *const _ as usize },
        7072usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ba0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ba4 as *const _ as usize },
        7076usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ba4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ba8 as *const _ as usize },
        7080usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ba8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bac as *const _ as usize },
        7084usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bb0 as *const _ as usize },
        7088usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bb4 as *const _ as usize },
        7092usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bb8 as *const _ as usize },
        7096usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bbc as *const _ as usize },
        7100usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bc0 as *const _ as usize },
        7104usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bc4 as *const _ as usize },
        7108usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bc8 as *const _ as usize },
        7112usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bcc as *const _ as usize },
        7116usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bd0 as *const _ as usize },
        7120usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bd4 as *const _ as usize },
        7124usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bd8 as *const _ as usize },
        7128usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bdc as *const _ as usize },
        7132usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1be0 as *const _ as usize },
        7136usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1be0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1be4 as *const _ as usize },
        7140usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1be4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1be8 as *const _ as usize },
        7144usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1be8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bec as *const _ as usize },
        7148usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bf0 as *const _ as usize },
        7152usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bf4 as *const _ as usize },
        7156usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bf8 as *const _ as usize },
        7160usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1bfc as *const _ as usize },
        7164usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1bfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c00 as *const _ as usize },
        7168usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c04 as *const _ as usize },
        7172usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c08 as *const _ as usize },
        7176usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c0c as *const _ as usize },
        7180usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c10 as *const _ as usize },
        7184usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c14 as *const _ as usize },
        7188usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c18 as *const _ as usize },
        7192usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c1c as *const _ as usize },
        7196usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c20 as *const _ as usize },
        7200usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c24 as *const _ as usize },
        7204usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c28 as *const _ as usize },
        7208usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c2c as *const _ as usize },
        7212usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c30 as *const _ as usize },
        7216usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c34 as *const _ as usize },
        7220usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c38 as *const _ as usize },
        7224usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c3c as *const _ as usize },
        7228usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c40 as *const _ as usize },
        7232usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c44 as *const _ as usize },
        7236usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c48 as *const _ as usize },
        7240usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c4c as *const _ as usize },
        7244usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c50 as *const _ as usize },
        7248usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c54 as *const _ as usize },
        7252usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c58 as *const _ as usize },
        7256usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c5c as *const _ as usize },
        7260usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c60 as *const _ as usize },
        7264usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c64 as *const _ as usize },
        7268usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c68 as *const _ as usize },
        7272usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c6c as *const _ as usize },
        7276usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c70 as *const _ as usize },
        7280usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c74 as *const _ as usize },
        7284usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c78 as *const _ as usize },
        7288usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c7c as *const _ as usize },
        7292usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c80 as *const _ as usize },
        7296usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c84 as *const _ as usize },
        7300usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c88 as *const _ as usize },
        7304usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c8c as *const _ as usize },
        7308usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c90 as *const _ as usize },
        7312usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c94 as *const _ as usize },
        7316usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c98 as *const _ as usize },
        7320usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1c9c as *const _ as usize },
        7324usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1c9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ca0 as *const _ as usize },
        7328usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ca0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ca4 as *const _ as usize },
        7332usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ca4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ca8 as *const _ as usize },
        7336usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ca8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cac as *const _ as usize },
        7340usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cb0 as *const _ as usize },
        7344usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cb4 as *const _ as usize },
        7348usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cb8 as *const _ as usize },
        7352usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cbc as *const _ as usize },
        7356usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cc0 as *const _ as usize },
        7360usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cc4 as *const _ as usize },
        7364usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cc8 as *const _ as usize },
        7368usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ccc as *const _ as usize },
        7372usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ccc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cd0 as *const _ as usize },
        7376usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cd4 as *const _ as usize },
        7380usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cd8 as *const _ as usize },
        7384usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cdc as *const _ as usize },
        7388usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ce0 as *const _ as usize },
        7392usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ce0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ce4 as *const _ as usize },
        7396usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ce4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ce8 as *const _ as usize },
        7400usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ce8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cec as *const _ as usize },
        7404usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cf0 as *const _ as usize },
        7408usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cf4 as *const _ as usize },
        7412usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cf8 as *const _ as usize },
        7416usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1cfc as *const _ as usize },
        7420usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1cfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d00 as *const _ as usize },
        7424usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d04 as *const _ as usize },
        7428usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d08 as *const _ as usize },
        7432usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d0c as *const _ as usize },
        7436usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d10 as *const _ as usize },
        7440usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d14 as *const _ as usize },
        7444usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d18 as *const _ as usize },
        7448usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d1c as *const _ as usize },
        7452usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d20 as *const _ as usize },
        7456usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d24 as *const _ as usize },
        7460usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d28 as *const _ as usize },
        7464usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d2c as *const _ as usize },
        7468usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d30 as *const _ as usize },
        7472usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d34 as *const _ as usize },
        7476usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d38 as *const _ as usize },
        7480usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d3c as *const _ as usize },
        7484usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d40 as *const _ as usize },
        7488usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d44 as *const _ as usize },
        7492usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d48 as *const _ as usize },
        7496usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d4c as *const _ as usize },
        7500usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d50 as *const _ as usize },
        7504usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d54 as *const _ as usize },
        7508usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d58 as *const _ as usize },
        7512usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d5c as *const _ as usize },
        7516usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d60 as *const _ as usize },
        7520usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d64 as *const _ as usize },
        7524usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d68 as *const _ as usize },
        7528usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d6c as *const _ as usize },
        7532usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d70 as *const _ as usize },
        7536usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d74 as *const _ as usize },
        7540usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d78 as *const _ as usize },
        7544usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d7c as *const _ as usize },
        7548usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d80 as *const _ as usize },
        7552usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d84 as *const _ as usize },
        7556usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d88 as *const _ as usize },
        7560usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d8c as *const _ as usize },
        7564usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d90 as *const _ as usize },
        7568usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d94 as *const _ as usize },
        7572usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d98 as *const _ as usize },
        7576usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1d9c as *const _ as usize },
        7580usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1d9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1da0 as *const _ as usize },
        7584usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1da0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1da4 as *const _ as usize },
        7588usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1da4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1da8 as *const _ as usize },
        7592usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1da8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dac as *const _ as usize },
        7596usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1db0 as *const _ as usize },
        7600usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1db0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1db4 as *const _ as usize },
        7604usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1db4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1db8 as *const _ as usize },
        7608usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1db8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dbc as *const _ as usize },
        7612usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dc0 as *const _ as usize },
        7616usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dc4 as *const _ as usize },
        7620usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dc8 as *const _ as usize },
        7624usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dcc as *const _ as usize },
        7628usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dd0 as *const _ as usize },
        7632usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dd4 as *const _ as usize },
        7636usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dd8 as *const _ as usize },
        7640usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ddc as *const _ as usize },
        7644usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ddc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1de0 as *const _ as usize },
        7648usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1de0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1de4 as *const _ as usize },
        7652usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1de4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1de8 as *const _ as usize },
        7656usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1de8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dec as *const _ as usize },
        7660usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1df0 as *const _ as usize },
        7664usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1df0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1df4 as *const _ as usize },
        7668usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1df4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1df8 as *const _ as usize },
        7672usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1df8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1dfc as *const _ as usize },
        7676usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1dfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e00 as *const _ as usize },
        7680usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e04 as *const _ as usize },
        7684usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e08 as *const _ as usize },
        7688usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e0c as *const _ as usize },
        7692usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e10 as *const _ as usize },
        7696usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e14 as *const _ as usize },
        7700usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e18 as *const _ as usize },
        7704usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e1c as *const _ as usize },
        7708usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e20 as *const _ as usize },
        7712usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e24 as *const _ as usize },
        7716usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e28 as *const _ as usize },
        7720usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e2c as *const _ as usize },
        7724usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e30 as *const _ as usize },
        7728usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e34 as *const _ as usize },
        7732usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e38 as *const _ as usize },
        7736usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e3c as *const _ as usize },
        7740usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e40 as *const _ as usize },
        7744usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e44 as *const _ as usize },
        7748usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e48 as *const _ as usize },
        7752usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e4c as *const _ as usize },
        7756usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e50 as *const _ as usize },
        7760usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e54 as *const _ as usize },
        7764usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e58 as *const _ as usize },
        7768usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e5c as *const _ as usize },
        7772usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e60 as *const _ as usize },
        7776usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e64 as *const _ as usize },
        7780usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e68 as *const _ as usize },
        7784usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e6c as *const _ as usize },
        7788usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e70 as *const _ as usize },
        7792usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e74 as *const _ as usize },
        7796usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e78 as *const _ as usize },
        7800usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e7c as *const _ as usize },
        7804usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e80 as *const _ as usize },
        7808usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e84 as *const _ as usize },
        7812usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e88 as *const _ as usize },
        7816usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e8c as *const _ as usize },
        7820usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e90 as *const _ as usize },
        7824usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e94 as *const _ as usize },
        7828usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e98 as *const _ as usize },
        7832usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1e9c as *const _ as usize },
        7836usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1e9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ea0 as *const _ as usize },
        7840usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ea0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ea4 as *const _ as usize },
        7844usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ea4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ea8 as *const _ as usize },
        7848usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ea8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1eac as *const _ as usize },
        7852usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1eac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1eb0 as *const _ as usize },
        7856usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1eb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1eb4 as *const _ as usize },
        7860usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1eb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1eb8 as *const _ as usize },
        7864usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1eb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ebc as *const _ as usize },
        7868usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ebc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ec0 as *const _ as usize },
        7872usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ec0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ec4 as *const _ as usize },
        7876usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ec4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ec8 as *const _ as usize },
        7880usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ec8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ecc as *const _ as usize },
        7884usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ecc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ed0 as *const _ as usize },
        7888usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ed0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ed4 as *const _ as usize },
        7892usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ed4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ed8 as *const _ as usize },
        7896usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ed8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1edc as *const _ as usize },
        7900usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1edc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ee0 as *const _ as usize },
        7904usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ee0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ee4 as *const _ as usize },
        7908usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ee4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ee8 as *const _ as usize },
        7912usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ee8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1eec as *const _ as usize },
        7916usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1eec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ef0 as *const _ as usize },
        7920usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ef0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ef4 as *const _ as usize },
        7924usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ef4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ef8 as *const _ as usize },
        7928usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ef8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1efc as *const _ as usize },
        7932usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1efc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f00 as *const _ as usize },
        7936usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f04 as *const _ as usize },
        7940usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f08 as *const _ as usize },
        7944usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f0c as *const _ as usize },
        7948usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f10 as *const _ as usize },
        7952usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f14 as *const _ as usize },
        7956usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f18 as *const _ as usize },
        7960usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f1c as *const _ as usize },
        7964usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f20 as *const _ as usize },
        7968usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f24 as *const _ as usize },
        7972usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f28 as *const _ as usize },
        7976usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f2c as *const _ as usize },
        7980usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f30 as *const _ as usize },
        7984usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f34 as *const _ as usize },
        7988usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f38 as *const _ as usize },
        7992usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f3c as *const _ as usize },
        7996usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f40 as *const _ as usize },
        8000usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f44 as *const _ as usize },
        8004usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f48 as *const _ as usize },
        8008usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f4c as *const _ as usize },
        8012usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f50 as *const _ as usize },
        8016usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f54 as *const _ as usize },
        8020usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f58 as *const _ as usize },
        8024usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f5c as *const _ as usize },
        8028usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f60 as *const _ as usize },
        8032usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f64 as *const _ as usize },
        8036usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f68 as *const _ as usize },
        8040usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f6c as *const _ as usize },
        8044usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f70 as *const _ as usize },
        8048usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f74 as *const _ as usize },
        8052usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f78 as *const _ as usize },
        8056usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f7c as *const _ as usize },
        8060usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f80 as *const _ as usize },
        8064usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f84 as *const _ as usize },
        8068usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f88 as *const _ as usize },
        8072usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f8c as *const _ as usize },
        8076usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f90 as *const _ as usize },
        8080usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f94 as *const _ as usize },
        8084usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f98 as *const _ as usize },
        8088usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1f9c as *const _ as usize },
        8092usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1f9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fa0 as *const _ as usize },
        8096usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fa4 as *const _ as usize },
        8100usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fa8 as *const _ as usize },
        8104usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fac as *const _ as usize },
        8108usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fb0 as *const _ as usize },
        8112usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fb4 as *const _ as usize },
        8116usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fb8 as *const _ as usize },
        8120usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fbc as *const _ as usize },
        8124usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fc0 as *const _ as usize },
        8128usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fc4 as *const _ as usize },
        8132usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fc8 as *const _ as usize },
        8136usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fcc as *const _ as usize },
        8140usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fd0 as *const _ as usize },
        8144usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fd4 as *const _ as usize },
        8148usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fd8 as *const _ as usize },
        8152usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fdc as *const _ as usize },
        8156usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fe0 as *const _ as usize },
        8160usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fe4 as *const _ as usize },
        8164usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fe8 as *const _ as usize },
        8168usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1fec as *const _ as usize },
        8172usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1fec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ff0 as *const _ as usize },
        8176usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ff0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ff4 as *const _ as usize },
        8180usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ff4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ff8 as *const _ as usize },
        8184usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ff8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x1ffc as *const _ as usize },
        8188usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x1ffc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2000 as *const _ as usize },
        8192usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2000)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2004 as *const _ as usize },
        8196usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2004)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2008 as *const _ as usize },
        8200usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2008)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x200c as *const _ as usize },
        8204usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x200c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2010 as *const _ as usize },
        8208usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2010)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2014 as *const _ as usize },
        8212usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2014)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2018 as *const _ as usize },
        8216usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2018)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x201c as *const _ as usize },
        8220usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x201c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2020 as *const _ as usize },
        8224usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2020)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2024 as *const _ as usize },
        8228usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2024)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2028 as *const _ as usize },
        8232usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2028)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x202c as *const _ as usize },
        8236usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x202c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2030 as *const _ as usize },
        8240usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2030)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2034 as *const _ as usize },
        8244usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2034)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2038 as *const _ as usize },
        8248usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2038)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x203c as *const _ as usize },
        8252usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x203c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2040 as *const _ as usize },
        8256usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2040)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2044 as *const _ as usize },
        8260usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2044)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2048 as *const _ as usize },
        8264usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2048)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x204c as *const _ as usize },
        8268usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x204c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2050 as *const _ as usize },
        8272usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2050)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2054 as *const _ as usize },
        8276usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2054)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2058 as *const _ as usize },
        8280usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2058)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x205c as *const _ as usize },
        8284usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x205c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2060 as *const _ as usize },
        8288usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2060)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2064 as *const _ as usize },
        8292usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2064)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2068 as *const _ as usize },
        8296usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2068)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x206c as *const _ as usize },
        8300usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x206c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2070 as *const _ as usize },
        8304usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2070)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2074 as *const _ as usize },
        8308usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2074)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2078 as *const _ as usize },
        8312usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2078)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x207c as *const _ as usize },
        8316usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x207c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2080 as *const _ as usize },
        8320usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2080)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2084 as *const _ as usize },
        8324usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2084)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2088 as *const _ as usize },
        8328usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2088)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x208c as *const _ as usize },
        8332usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x208c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2090 as *const _ as usize },
        8336usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2090)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2094 as *const _ as usize },
        8340usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2094)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2098 as *const _ as usize },
        8344usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2098)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x209c as *const _ as usize },
        8348usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x209c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20a0 as *const _ as usize },
        8352usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20a4 as *const _ as usize },
        8356usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20a8 as *const _ as usize },
        8360usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20ac as *const _ as usize },
        8364usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20b0 as *const _ as usize },
        8368usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20b4 as *const _ as usize },
        8372usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20b8 as *const _ as usize },
        8376usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20bc as *const _ as usize },
        8380usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20c0 as *const _ as usize },
        8384usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20c4 as *const _ as usize },
        8388usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20c8 as *const _ as usize },
        8392usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20cc as *const _ as usize },
        8396usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20d0 as *const _ as usize },
        8400usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20d4 as *const _ as usize },
        8404usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20d8 as *const _ as usize },
        8408usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20dc as *const _ as usize },
        8412usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20e0 as *const _ as usize },
        8416usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20e4 as *const _ as usize },
        8420usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20e8 as *const _ as usize },
        8424usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20ec as *const _ as usize },
        8428usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20f0 as *const _ as usize },
        8432usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20f4 as *const _ as usize },
        8436usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20f8 as *const _ as usize },
        8440usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x20fc as *const _ as usize },
        8444usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x20fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2100 as *const _ as usize },
        8448usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2104 as *const _ as usize },
        8452usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2108 as *const _ as usize },
        8456usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x210c as *const _ as usize },
        8460usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x210c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2110 as *const _ as usize },
        8464usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2114 as *const _ as usize },
        8468usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2118 as *const _ as usize },
        8472usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x211c as *const _ as usize },
        8476usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x211c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2120 as *const _ as usize },
        8480usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2124 as *const _ as usize },
        8484usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2128 as *const _ as usize },
        8488usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x212c as *const _ as usize },
        8492usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x212c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2130 as *const _ as usize },
        8496usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2134 as *const _ as usize },
        8500usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2138 as *const _ as usize },
        8504usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x213c as *const _ as usize },
        8508usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x213c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2140 as *const _ as usize },
        8512usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2144 as *const _ as usize },
        8516usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2148 as *const _ as usize },
        8520usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x214c as *const _ as usize },
        8524usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x214c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2150 as *const _ as usize },
        8528usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2154 as *const _ as usize },
        8532usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2158 as *const _ as usize },
        8536usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x215c as *const _ as usize },
        8540usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x215c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2160 as *const _ as usize },
        8544usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2164 as *const _ as usize },
        8548usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2168 as *const _ as usize },
        8552usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x216c as *const _ as usize },
        8556usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x216c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2170 as *const _ as usize },
        8560usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2174 as *const _ as usize },
        8564usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2178 as *const _ as usize },
        8568usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x217c as *const _ as usize },
        8572usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x217c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2180 as *const _ as usize },
        8576usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2184 as *const _ as usize },
        8580usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2188 as *const _ as usize },
        8584usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x218c as *const _ as usize },
        8588usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x218c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2190 as *const _ as usize },
        8592usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2190)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2194 as *const _ as usize },
        8596usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2194)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2198 as *const _ as usize },
        8600usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2198)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x219c as *const _ as usize },
        8604usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x219c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21a0 as *const _ as usize },
        8608usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21a4 as *const _ as usize },
        8612usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21a8 as *const _ as usize },
        8616usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21ac as *const _ as usize },
        8620usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21b0 as *const _ as usize },
        8624usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21b4 as *const _ as usize },
        8628usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21b8 as *const _ as usize },
        8632usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21bc as *const _ as usize },
        8636usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21c0 as *const _ as usize },
        8640usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21c4 as *const _ as usize },
        8644usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21c8 as *const _ as usize },
        8648usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21cc as *const _ as usize },
        8652usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21d0 as *const _ as usize },
        8656usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21d4 as *const _ as usize },
        8660usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21d8 as *const _ as usize },
        8664usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21dc as *const _ as usize },
        8668usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21e0 as *const _ as usize },
        8672usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21e4 as *const _ as usize },
        8676usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21e8 as *const _ as usize },
        8680usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21ec as *const _ as usize },
        8684usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21f0 as *const _ as usize },
        8688usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21f4 as *const _ as usize },
        8692usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21f8 as *const _ as usize },
        8696usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x21fc as *const _ as usize },
        8700usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x21fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2200 as *const _ as usize },
        8704usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2200)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2204 as *const _ as usize },
        8708usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2204)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2208 as *const _ as usize },
        8712usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2208)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x220c as *const _ as usize },
        8716usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x220c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2210 as *const _ as usize },
        8720usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2210)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2214 as *const _ as usize },
        8724usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2214)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2218 as *const _ as usize },
        8728usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2218)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x221c as *const _ as usize },
        8732usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x221c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2220 as *const _ as usize },
        8736usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2220)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2224 as *const _ as usize },
        8740usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2224)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2228 as *const _ as usize },
        8744usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2228)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x222c as *const _ as usize },
        8748usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x222c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2230 as *const _ as usize },
        8752usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2230)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2234 as *const _ as usize },
        8756usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2234)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2238 as *const _ as usize },
        8760usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2238)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x223c as *const _ as usize },
        8764usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x223c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2240 as *const _ as usize },
        8768usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2240)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2244 as *const _ as usize },
        8772usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2244)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2248 as *const _ as usize },
        8776usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2248)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x224c as *const _ as usize },
        8780usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x224c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2250 as *const _ as usize },
        8784usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2250)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2254 as *const _ as usize },
        8788usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2254)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2258 as *const _ as usize },
        8792usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2258)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x225c as *const _ as usize },
        8796usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x225c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2260 as *const _ as usize },
        8800usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2260)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2264 as *const _ as usize },
        8804usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2264)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2268 as *const _ as usize },
        8808usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2268)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x226c as *const _ as usize },
        8812usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x226c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2270 as *const _ as usize },
        8816usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2270)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2274 as *const _ as usize },
        8820usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2274)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2278 as *const _ as usize },
        8824usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2278)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x227c as *const _ as usize },
        8828usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x227c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2280 as *const _ as usize },
        8832usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2280)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2284 as *const _ as usize },
        8836usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2284)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2288 as *const _ as usize },
        8840usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2288)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x228c as *const _ as usize },
        8844usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x228c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2290 as *const _ as usize },
        8848usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2290)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2294 as *const _ as usize },
        8852usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2294)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2298 as *const _ as usize },
        8856usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2298)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x229c as *const _ as usize },
        8860usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x229c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22a0 as *const _ as usize },
        8864usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22a4 as *const _ as usize },
        8868usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22a8 as *const _ as usize },
        8872usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22ac as *const _ as usize },
        8876usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22b0 as *const _ as usize },
        8880usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22b4 as *const _ as usize },
        8884usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22b8 as *const _ as usize },
        8888usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22bc as *const _ as usize },
        8892usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22c0 as *const _ as usize },
        8896usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22c4 as *const _ as usize },
        8900usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22c8 as *const _ as usize },
        8904usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22cc as *const _ as usize },
        8908usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22d0 as *const _ as usize },
        8912usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22d4 as *const _ as usize },
        8916usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22d8 as *const _ as usize },
        8920usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22dc as *const _ as usize },
        8924usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22e0 as *const _ as usize },
        8928usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22e4 as *const _ as usize },
        8932usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22e8 as *const _ as usize },
        8936usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22ec as *const _ as usize },
        8940usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22f0 as *const _ as usize },
        8944usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22f4 as *const _ as usize },
        8948usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22f8 as *const _ as usize },
        8952usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x22fc as *const _ as usize },
        8956usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x22fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2300 as *const _ as usize },
        8960usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2300)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2304 as *const _ as usize },
        8964usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2304)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2308 as *const _ as usize },
        8968usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2308)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x230c as *const _ as usize },
        8972usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x230c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2310 as *const _ as usize },
        8976usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2310)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2314 as *const _ as usize },
        8980usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2314)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2318 as *const _ as usize },
        8984usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2318)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x231c as *const _ as usize },
        8988usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x231c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2320 as *const _ as usize },
        8992usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2320)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2324 as *const _ as usize },
        8996usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2324)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2328 as *const _ as usize },
        9000usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2328)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x232c as *const _ as usize },
        9004usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x232c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2330 as *const _ as usize },
        9008usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2330)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2334 as *const _ as usize },
        9012usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2334)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2338 as *const _ as usize },
        9016usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2338)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x233c as *const _ as usize },
        9020usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x233c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2340 as *const _ as usize },
        9024usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2340)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2344 as *const _ as usize },
        9028usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2344)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2348 as *const _ as usize },
        9032usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2348)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x234c as *const _ as usize },
        9036usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x234c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2350 as *const _ as usize },
        9040usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2350)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2354 as *const _ as usize },
        9044usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2354)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2358 as *const _ as usize },
        9048usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2358)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x235c as *const _ as usize },
        9052usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x235c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2360 as *const _ as usize },
        9056usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2360)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2364 as *const _ as usize },
        9060usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2364)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2368 as *const _ as usize },
        9064usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2368)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x236c as *const _ as usize },
        9068usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x236c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2370 as *const _ as usize },
        9072usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2370)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2374 as *const _ as usize },
        9076usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2374)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2378 as *const _ as usize },
        9080usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2378)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x237c as *const _ as usize },
        9084usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x237c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2380 as *const _ as usize },
        9088usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2380)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2384 as *const _ as usize },
        9092usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2384)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2388 as *const _ as usize },
        9096usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2388)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x238c as *const _ as usize },
        9100usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x238c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2390 as *const _ as usize },
        9104usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2390)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2394 as *const _ as usize },
        9108usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2394)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2398 as *const _ as usize },
        9112usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2398)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x239c as *const _ as usize },
        9116usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x239c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23a0 as *const _ as usize },
        9120usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23a4 as *const _ as usize },
        9124usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23a8 as *const _ as usize },
        9128usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23ac as *const _ as usize },
        9132usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23b0 as *const _ as usize },
        9136usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23b4 as *const _ as usize },
        9140usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23b8 as *const _ as usize },
        9144usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23bc as *const _ as usize },
        9148usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23c0 as *const _ as usize },
        9152usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23c4 as *const _ as usize },
        9156usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23c8 as *const _ as usize },
        9160usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23cc as *const _ as usize },
        9164usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23d0 as *const _ as usize },
        9168usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23d4 as *const _ as usize },
        9172usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23d8 as *const _ as usize },
        9176usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23dc as *const _ as usize },
        9180usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23e0 as *const _ as usize },
        9184usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23e4 as *const _ as usize },
        9188usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23e8 as *const _ as usize },
        9192usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23ec as *const _ as usize },
        9196usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23f0 as *const _ as usize },
        9200usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23f4 as *const _ as usize },
        9204usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23f8 as *const _ as usize },
        9208usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x23fc as *const _ as usize },
        9212usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x23fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2400 as *const _ as usize },
        9216usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2400)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2404 as *const _ as usize },
        9220usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2404)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2408 as *const _ as usize },
        9224usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2408)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x240c as *const _ as usize },
        9228usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x240c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2410 as *const _ as usize },
        9232usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2410)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2414 as *const _ as usize },
        9236usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2414)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2418 as *const _ as usize },
        9240usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2418)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x241c as *const _ as usize },
        9244usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x241c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2420 as *const _ as usize },
        9248usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2420)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2424 as *const _ as usize },
        9252usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2424)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2428 as *const _ as usize },
        9256usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2428)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x242c as *const _ as usize },
        9260usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x242c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2430 as *const _ as usize },
        9264usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2430)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2434 as *const _ as usize },
        9268usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2434)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2438 as *const _ as usize },
        9272usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2438)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x243c as *const _ as usize },
        9276usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x243c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2440 as *const _ as usize },
        9280usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2440)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2444 as *const _ as usize },
        9284usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2444)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2448 as *const _ as usize },
        9288usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2448)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x244c as *const _ as usize },
        9292usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x244c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2450 as *const _ as usize },
        9296usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2450)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2454 as *const _ as usize },
        9300usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2454)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2458 as *const _ as usize },
        9304usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2458)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x245c as *const _ as usize },
        9308usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x245c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2460 as *const _ as usize },
        9312usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2460)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2464 as *const _ as usize },
        9316usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2464)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2468 as *const _ as usize },
        9320usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2468)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x246c as *const _ as usize },
        9324usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x246c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2470 as *const _ as usize },
        9328usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2470)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2474 as *const _ as usize },
        9332usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2474)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2478 as *const _ as usize },
        9336usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2478)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x247c as *const _ as usize },
        9340usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x247c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2480 as *const _ as usize },
        9344usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2480)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2484 as *const _ as usize },
        9348usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2484)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2488 as *const _ as usize },
        9352usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2488)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x248c as *const _ as usize },
        9356usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x248c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2490 as *const _ as usize },
        9360usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2490)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2494 as *const _ as usize },
        9364usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2494)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x2498 as *const _ as usize },
        9368usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x2498)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x249c as *const _ as usize },
        9372usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x249c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24a0 as *const _ as usize },
        9376usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24a4 as *const _ as usize },
        9380usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24a8 as *const _ as usize },
        9384usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24ac as *const _ as usize },
        9388usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24b0 as *const _ as usize },
        9392usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24b4 as *const _ as usize },
        9396usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24b8 as *const _ as usize },
        9400usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24bc as *const _ as usize },
        9404usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24c0 as *const _ as usize },
        9408usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).x24c4 as *const _ as usize },
        9412usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(x24c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Match>())).match_ as *const _ as usize },
        9416usize,
        concat!(
            "Offset of field: ",
            stringify!(Match),
            "::",
            stringify!(match_)
        )
    );
}
extern "C" {
    pub static mut stc_match: *mut Match;
}
extern "C" {
    pub static mut stc_matchcam: *mut MatchCamera;
}
extern "C" {
    pub static mut stc_matchhud: *mut MatchHUD;
}
extern "C" {
    pub static mut stc_match_offscreen: *mut MatchOffscreen;
}
extern "C" {
    #[doc = " Functions"]
    pub fn CameraBox_Alloc() -> *mut CameraBox;
}
extern "C" {
    pub fn CameraBox_Destroy(cam: *mut CameraBox);
}
extern "C" {
    pub fn KOCount_Init(updateCallback: ::std::os::raw::c_int);
}
extern "C" {
    pub fn KOCount_Update(KOs: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Stage_CameraLimitInitialization();
}
extern "C" {
    pub fn Stage_BlastzoneInitialization();
}
extern "C" {
    pub fn Match_SetEndGraphic(graphic: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Match_EndImmediate();
}
extern "C" {
    pub fn Match_EndVS();
}
extern "C" {
    pub fn Match_FadeScreen(time: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Match_CheckIfTeams() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Match_CheckIfStock() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Match_SetPostMatchSFX(sfx: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Match_FreezeGame(freeze_kind: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Match_UnfreezeGame(freeze_kind: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Match_CreateHUD(ply: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Match_HideHUD();
}
extern "C" {
    pub fn Match_ShowHUD();
}
extern "C" {
    pub fn Match_ShowTimer();
}
extern "C" {
    pub fn Match_HideTimer();
}
extern "C" {
    pub fn Match_CorrectCamera();
}
extern "C" {
    pub fn Match_SetNormalCamera();
}
extern "C" {
    pub fn Match_SetFreeCamera(unk: ::std::os::raw::c_int, unk2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Match_SetZoomCamera(unk: ::std::os::raw::c_int, unk2: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Match_SetFixedCamera();
}
extern "C" {
    pub fn Match_SetDevelopCamera();
}
extern "C" {
    pub fn DevCam_AdjustRotate(
        cobj: *mut COBJ,
        wobjpos: *mut Vec3,
        rotate: *mut Vec3,
        stickX: f32,
        stickY: f32,
    );
}
extern "C" {
    pub fn DevCam_AdjustPan(cobj: *mut COBJ, stickX: f32, stickY: f32);
}
extern "C" {
    pub fn DevCam_AdjustZoom(cobj: *mut COBJ, stickY: f32);
}
extern "C" {
    pub fn ScreenFlash_Create(kind: ::std::os::raw::c_int, unk: ::std::os::raw::c_int);
}
extern "C" {
    pub fn ScreenRumble_Execute(kind: ::std::os::raw::c_int, pos: *mut Vec3);
}
extern "C" {
    pub fn Match_StoreGoCallback(gobj: *mut GOBJ, cb: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn Match_AdjustSoundOnPause(is_pause: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Match_GetPlayerHUDPos(ply: ::std::os::raw::c_int) -> *mut Vec3;
}
extern "C" {
    pub fn Match_GetCObj() -> *mut COBJ;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RstPlayer {
    pub type_: u8_,
    pub ext_id: u8_,
    pub kind: u8_,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub nametag: u8_,
    pub x5: u8_,
    pub x6: u8_,
    pub team: u8_,
    pub stock_num: u8_,
    pub hp: u8_,
    pub sd_num: u8_,
    pub fall_num: u8_,
    pub dmg_num: u16_,
    pub xe: u16_,
    pub x10: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub coins: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_int,
    pub frames_alive: ::std::os::raw::c_int,
    pub x2c: ::std::os::raw::c_int,
    pub x30: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub hits_landed: ::std::os::raw::c_int,
    pub attack_num: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4c: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub ledgegrab_num: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa4: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_RstPlayer() {
    assert_eq!(
        ::std::mem::size_of::<RstPlayer>(),
        168usize,
        concat!("Size of: ", stringify!(RstPlayer))
    );
    assert_eq!(
        ::std::mem::align_of::<RstPlayer>(),
        4usize,
        concat!("Alignment of ", stringify!(RstPlayer))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).type_ as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).ext_id as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(ext_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).kind as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).nametag as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(nametag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x5 as *const _ as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x6 as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).team as *const _ as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(team)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).stock_num as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(stock_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).hp as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(hp)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).sd_num as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(sd_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).fall_num as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(fall_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).dmg_num as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(dmg_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).xe as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(xe)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x10 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x14 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x18 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).coins as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(coins)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x20 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x24 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).frames_alive as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(frames_alive)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x2c as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x30 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x34 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).hits_landed as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(hits_landed)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).attack_num as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(attack_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x40 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x44 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x48 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x4c as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x50 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x54 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x58 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x5c as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x60 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x64 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x68 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x6c as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x70 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x74 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x78 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x7c as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x80 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x84 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x88 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).ledgegrab_num as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(ledgegrab_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x90 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x94 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x98 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).x9c as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).xa0 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstPlayer>())).xa4 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(RstPlayer),
            "::",
            stringify!(xa4)
        )
    );
}
impl RstPlayer {
    #[inline]
    pub fn costume(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 6u8) as u8) }
    }
    #[inline]
    pub fn set_costume(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 6u8, val as u64)
        }
    }
    #[inline]
    pub fn is_rumble(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_rumble(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn is_stamina(&self) -> u8_ {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_is_stamina(&mut self, val: u8_) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        costume: u8_,
        is_rumble: u8_,
        is_stamina: u8_,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 6u8, {
            let costume: u8 = unsafe { ::std::mem::transmute(costume) };
            costume as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let is_rumble: u8 = unsafe { ::std::mem::transmute(is_rumble) };
            is_rumble as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let is_stamina: u8 = unsafe { ::std::mem::transmute(is_stamina) };
            is_stamina as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RstInit {
    pub x0: ::std::os::raw::c_int,
    pub end_kind: u8_,
    pub x5: u8_,
    pub match_kind: u8_,
    pub match_frames: ::std::os::raw::c_int,
    pub xc: u8_,
    pub winner_num: u8_,
    pub placings: [u8_; 4usize],
    pub x10: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: u8_,
    pub x21: u8_,
    pub x22: u8_,
    pub x23: u8_,
    pub x24: ::std::os::raw::c_int,
    pub x28: ::std::os::raw::c_int,
    pub x2c: ::std::os::raw::c_int,
    pub x30: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3c: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4c: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub players: [RstPlayer; 6usize],
}
#[test]
fn bindgen_test_layout_RstInit() {
    assert_eq!(
        ::std::mem::size_of::<RstInit>(),
        1096usize,
        concat!("Size of: ", stringify!(RstInit))
    );
    assert_eq!(
        ::std::mem::align_of::<RstInit>(),
        4usize,
        concat!("Alignment of ", stringify!(RstInit))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).end_kind as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(end_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x5 as *const _ as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).match_kind as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(match_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).match_frames as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(match_frames)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).winner_num as *const _ as usize },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(winner_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).placings as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(placings)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x10 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x14 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x18 as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x1c as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x20 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x21 as *const _ as usize },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x21)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x22 as *const _ as usize },
        38usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x22)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x23 as *const _ as usize },
        39usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x23)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x24 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x28 as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x2c as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x30 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x34 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x38 as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x3c as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x40 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x44 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x48 as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x4c as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).x50 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<RstInit>())).players as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(RstInit),
            "::",
            stringify!(players)
        )
    );
}
pub const HEAP_KIND_HEAPKIND_UNK0: HEAP_KIND = 0;
pub const HEAP_KIND_HEAPKIND_UNK1: HEAP_KIND = 1;
pub const HEAP_KIND_HEAPKIND_UNK2: HEAP_KIND = 2;
pub const HEAP_KIND_HEAPKIND_UNK3: HEAP_KIND = 3;
pub const HEAP_KIND_HEAPKIND_UNK4: HEAP_KIND = 4;
pub type HEAP_KIND = ::std::os::raw::c_uint;
pub const MINOR_KIND_MNRKIND_TITLE: MINOR_KIND = 0;
pub const MINOR_KIND_MNRKIND_MNMA: MINOR_KIND = 1;
pub const MINOR_KIND_MNRKIND_MATCH: MINOR_KIND = 2;
pub const MINOR_KIND_MNRKIND_SUDDEATH: MINOR_KIND = 3;
pub const MINOR_KIND_MNRKIND_TRAIN: MINOR_KIND = 4;
pub const MINOR_KIND_MNRKIND_RST: MINOR_KIND = 5;
pub const MINOR_KIND_MNRKIND_X6: MINOR_KIND = 6;
pub const MINOR_KIND_MNRKIND_DB: MINOR_KIND = 7;
pub const MINOR_KIND_MNRKIND_CSS: MINOR_KIND = 8;
pub const MINOR_KIND_MNRKIND_SSS: MINOR_KIND = 9;
pub const MINOR_KIND_MNRKIND_XA: MINOR_KIND = 10;
pub const MINOR_KIND_MNRKIND_TYGAL: MINOR_KIND = 11;
pub const MINOR_KIND_MNRKIND_TYLOT: MINOR_KIND = 12;
pub const MINOR_KIND_MNRKIND_TYCOL: MINOR_KIND = 13;
pub const MINOR_KIND_MNRKIND_ADVSPLSH: MINOR_KIND = 14;
pub const MINOR_KIND_MNRKIND_TYFALL: MINOR_KIND = 15;
pub const MINOR_KIND_MNRKIND_ADVCGRT: MINOR_KIND = 16;
pub const MINOR_KIND_MNRKIND_VI1: MINOR_KIND = 17;
pub const MINOR_KIND_MNRKIND_VI2: MINOR_KIND = 18;
pub const MINOR_KIND_MNRKIND_VI3: MINOR_KIND = 19;
pub const MINOR_KIND_MNRKIND_VI4: MINOR_KIND = 20;
pub const MINOR_KIND_MNRKIND_VI5: MINOR_KIND = 21;
pub const MINOR_KIND_MNRKIND_VI6: MINOR_KIND = 22;
pub const MINOR_KIND_MNRKIND_VI7: MINOR_KIND = 23;
pub const MINOR_KIND_MNRKIND_VI8: MINOR_KIND = 24;
pub const MINOR_KIND_MNRKIND_VI9: MINOR_KIND = 25;
pub const MINOR_KIND_MNRKIND_VI10: MINOR_KIND = 26;
pub const MINOR_KIND_MNRKIND_VI11: MINOR_KIND = 27;
pub const MINOR_KIND_MNRKIND_OP: MINOR_KIND = 28;
pub const MINOR_KIND_MNRKIND_1PENDMV: MINOR_KIND = 29;
pub const MINOR_KIND_MNRKIND_HOWMV: MINOR_KIND = 30;
pub const MINOR_KIND_MNRKIND_OMAKE: MINOR_KIND = 31;
pub const MINOR_KIND_MNRKIND_CLSCSPLSH: MINOR_KIND = 32;
pub const MINOR_KIND_MNRKIND_ALSPLSH: MINOR_KIND = 33;
pub const MINOR_KIND_MNRKIND_GMOV: MINOR_KIND = 34;
pub const MINOR_KIND_MNRKIND_SOON: MINOR_KIND = 35;
pub const MINOR_KIND_MNRKIND_TOSETUP: MINOR_KIND = 36;
pub const MINOR_KIND_MNRKIND_TOBRCK: MINOR_KIND = 37;
pub const MINOR_KIND_MNRKIND_TOUNK: MINOR_KIND = 38;
pub const MINOR_KIND_MNRKIND_SPCLMSG: MINOR_KIND = 39;
pub const MINOR_KIND_MNRKIND_PROG: MINOR_KIND = 40;
pub const MINOR_KIND_MNRKIND_CHLG: MINOR_KIND = 41;
pub const MINOR_KIND_MNRKIND_CARD: MINOR_KIND = 42;
pub const MINOR_KIND_MNRKIND_STAFF: MINOR_KIND = 43;
pub const MINOR_KIND_MNRKIND_CAMWARN: MINOR_KIND = 44;
pub const MINOR_KIND_MNRKIND_NULL: MINOR_KIND = 45;
pub const MINOR_KIND_MNRKIND_SMSHDWNCSS: MINOR_KIND = 46;
pub type MINOR_KIND = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MajorScene {
    pub is_preload: u8_,
    pub major_id: u8_,
    pub onLoad: *mut ::std::os::raw::c_void,
    pub onExit: *mut ::std::os::raw::c_void,
    pub onBoot: *mut ::std::os::raw::c_void,
    pub MinorScene: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_MajorScene() {
    assert_eq!(
        ::std::mem::size_of::<MajorScene>(),
        40usize,
        concat!("Size of: ", stringify!(MajorScene))
    );
    assert_eq!(
        ::std::mem::align_of::<MajorScene>(),
        8usize,
        concat!("Alignment of ", stringify!(MajorScene))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MajorScene>())).is_preload as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MajorScene),
            "::",
            stringify!(is_preload)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MajorScene>())).major_id as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(MajorScene),
            "::",
            stringify!(major_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MajorScene>())).onLoad as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MajorScene),
            "::",
            stringify!(onLoad)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MajorScene>())).onExit as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MajorScene),
            "::",
            stringify!(onExit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MajorScene>())).onBoot as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MajorScene),
            "::",
            stringify!(onBoot)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MajorScene>())).MinorScene as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MajorScene),
            "::",
            stringify!(MinorScene)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MinorScene {
    pub minor_id: u8_,
    pub heap_kind: u8_,
    pub minor_prep: *mut ::std::os::raw::c_void,
    pub minor_decide: *mut ::std::os::raw::c_void,
    pub minor_kind: u8_,
    pub load_data: *mut ::std::os::raw::c_void,
    pub unload_data: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_MinorScene() {
    assert_eq!(
        ::std::mem::size_of::<MinorScene>(),
        48usize,
        concat!("Size of: ", stringify!(MinorScene))
    );
    assert_eq!(
        ::std::mem::align_of::<MinorScene>(),
        8usize,
        concat!("Alignment of ", stringify!(MinorScene))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MinorScene>())).minor_id as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MinorScene),
            "::",
            stringify!(minor_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MinorScene>())).heap_kind as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(MinorScene),
            "::",
            stringify!(heap_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MinorScene>())).minor_prep as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MinorScene),
            "::",
            stringify!(minor_prep)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MinorScene>())).minor_decide as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MinorScene),
            "::",
            stringify!(minor_decide)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MinorScene>())).minor_kind as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MinorScene),
            "::",
            stringify!(minor_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MinorScene>())).load_data as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MinorScene),
            "::",
            stringify!(load_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MinorScene>())).unload_data as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MinorScene),
            "::",
            stringify!(unload_data)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ScDataVS {
    pub x8: u8_,
    pub x9: u8_,
    pub xa: u8_,
    pub xc: ::std::os::raw::c_int,
    pub match_init: MatchInit,
}
#[test]
fn bindgen_test_layout_ScDataVS() {
    assert_eq!(
        ::std::mem::size_of::<ScDataVS>(),
        352usize,
        concat!("Size of: ", stringify!(ScDataVS))
    );
    assert_eq!(
        ::std::mem::align_of::<ScDataVS>(),
        8usize,
        concat!("Alignment of ", stringify!(ScDataVS))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScDataVS>())).x8 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ScDataVS),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScDataVS>())).x9 as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(ScDataVS),
            "::",
            stringify!(x9)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScDataVS>())).xa as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(ScDataVS),
            "::",
            stringify!(xa)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScDataVS>())).xc as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(ScDataVS),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScDataVS>())).match_init as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ScDataVS),
            "::",
            stringify!(match_init)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ScDataRst {
    pub x0: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub x8: ::std::os::raw::c_int,
    pub xc: ::std::os::raw::c_int,
    pub rst_init: RstInit,
}
#[test]
fn bindgen_test_layout_ScDataRst() {
    assert_eq!(
        ::std::mem::size_of::<ScDataRst>(),
        1112usize,
        concat!("Size of: ", stringify!(ScDataRst))
    );
    assert_eq!(
        ::std::mem::align_of::<ScDataRst>(),
        4usize,
        concat!("Alignment of ", stringify!(ScDataRst))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScDataRst>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ScDataRst),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScDataRst>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(ScDataRst),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScDataRst>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ScDataRst),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScDataRst>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(ScDataRst),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ScDataRst>())).rst_init as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ScDataRst),
            "::",
            stringify!(rst_init)
        )
    );
}
extern "C" {
    pub fn Scene_EnterMajor(major_id: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CSS_DecideNext(minor_scene: *mut MinorScene, css_data: *mut ScDataVS);
}
extern "C" {
    pub fn CSS_ResetKOStars();
}
extern "C" {
    pub fn CSS_InitMajorData(major_data: *mut ScDataVS);
}
extern "C" {
    pub fn CSS_InitMinorData(
        minor_scene: *mut MinorScene,
        major_data: *mut ScDataVS,
        css_kind: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SSS_InitMinorData(minor_scene: *mut MinorScene, major_data: *mut ScDataVS);
}
extern "C" {
    pub fn Match_InitMinorData(
        minor_scene: *mut MinorScene,
        major_data: *mut ScDataVS,
        init_cb: *mut ::std::os::raw::c_void,
        startmelee_cb: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Match_SetNametags(match_init: *mut MatchInit);
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CSSBackup {
    pub fighter_prev: u8_,
    pub x1: u8_,
    pub fighter: u8_,
    pub costume: u8_,
    pub nametag: u8_,
    pub event: u8_,
    pub port: u8_,
    pub x7: u8_,
    pub x8: u8_,
    pub x9: u8_,
    pub xA: u8_,
}
#[test]
fn bindgen_test_layout_CSSBackup() {
    assert_eq!(
        ::std::mem::size_of::<CSSBackup>(),
        11usize,
        concat!("Size of: ", stringify!(CSSBackup))
    );
    assert_eq!(
        ::std::mem::align_of::<CSSBackup>(),
        1usize,
        concat!("Alignment of ", stringify!(CSSBackup))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).fighter_prev as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(fighter_prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).x1 as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(x1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).fighter as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(fighter)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).costume as *const _ as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(costume)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).nametag as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(nametag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).event as *const _ as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(event)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).port as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(port)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).x7 as *const _ as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(x7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).x9 as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(x9)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSBackup>())).xA as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSBackup),
            "::",
            stringify!(xA)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MnSelectChrDataTable {
    pub cobj: *mut COBJDesc,
    pub lobj1: *mut ::std::os::raw::c_void,
    pub lobj2: *mut ::std::os::raw::c_void,
    pub fog: *mut ::std::os::raw::c_void,
    pub bg: JOBJAnimSet,
    pub cursor: JOBJAnimSet,
    pub puck: JOBJAnimSet,
    pub vsmenu: JOBJAnimSet,
    pub start: JOBJAnimSet,
    pub camdoor: JOBJAnimSet,
    pub solomenu: JOBJAnimSet,
    pub solooption: JOBJAnimSet,
    pub cpudoor: JOBJAnimSet,
}
#[test]
fn bindgen_test_layout_MnSelectChrDataTable() {
    assert_eq!(
        ::std::mem::size_of::<MnSelectChrDataTable>(),
        320usize,
        concat!("Size of: ", stringify!(MnSelectChrDataTable))
    );
    assert_eq!(
        ::std::mem::align_of::<MnSelectChrDataTable>(),
        8usize,
        concat!("Alignment of ", stringify!(MnSelectChrDataTable))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).cobj as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(cobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).lobj1 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(lobj1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).lobj2 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(lobj2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).fog as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(fog)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).bg as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(bg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).cursor as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(cursor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).puck as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(puck)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).vsmenu as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(vsmenu)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).start as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).camdoor as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(camdoor)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).solomenu as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(solomenu)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).solooption as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(solooption)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSelectChrDataTable>())).cpudoor as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSelectChrDataTable),
            "::",
            stringify!(cpudoor)
        )
    );
}
pub const CSSCursorState_SLCHRCUR_POINT: CSSCursorState = 0;
pub const CSSCursorState_SLCHRCUR_HOLD: CSSCursorState = 1;
pub const CSSCursorState_SLCHRCUR_OPEN: CSSCursorState = 2;
pub const CSSCursorState_SLCHRCUR_HIDDEN: CSSCursorState = 3;
pub type CSSCursorState = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CSSCursor {
    pub gobj: *mut GOBJ,
    pub port: u8_,
    pub state: u8_,
    pub puck: u8_,
    pub x7: u8_,
    pub x8: u16_,
    pub exit_timer: u16_,
    pub pos: Vec2,
}
#[test]
fn bindgen_test_layout_CSSCursor() {
    assert_eq!(
        ::std::mem::size_of::<CSSCursor>(),
        24usize,
        concat!("Size of: ", stringify!(CSSCursor))
    );
    assert_eq!(
        ::std::mem::align_of::<CSSCursor>(),
        8usize,
        concat!("Alignment of ", stringify!(CSSCursor))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSCursor>())).gobj as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSCursor),
            "::",
            stringify!(gobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSCursor>())).port as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSCursor),
            "::",
            stringify!(port)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSCursor>())).state as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSCursor),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSCursor>())).puck as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSCursor),
            "::",
            stringify!(puck)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSCursor>())).x7 as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSCursor),
            "::",
            stringify!(x7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSCursor>())).x8 as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSCursor),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSCursor>())).exit_timer as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSCursor),
            "::",
            stringify!(exit_timer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSCursor>())).pos as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSCursor),
            "::",
            stringify!(pos)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CSSPuck {
    pub gobj: *mut GOBJ,
    pub port: u8_,
    pub state: u8_,
    pub held: u8_,
    pub anim_timer: u8_,
    pub pos_proj: Vec2,
    pub pos_correct: Vec2,
}
#[test]
fn bindgen_test_layout_CSSPuck() {
    assert_eq!(
        ::std::mem::size_of::<CSSPuck>(),
        32usize,
        concat!("Size of: ", stringify!(CSSPuck))
    );
    assert_eq!(
        ::std::mem::align_of::<CSSPuck>(),
        8usize,
        concat!("Alignment of ", stringify!(CSSPuck))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSPuck>())).gobj as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSPuck),
            "::",
            stringify!(gobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSPuck>())).port as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSPuck),
            "::",
            stringify!(port)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSPuck>())).state as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSPuck),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSPuck>())).held as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSPuck),
            "::",
            stringify!(held)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSPuck>())).anim_timer as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSPuck),
            "::",
            stringify!(anim_timer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSPuck>())).pos_proj as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSPuck),
            "::",
            stringify!(pos_proj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CSSPuck>())).pos_correct as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(CSSPuck),
            "::",
            stringify!(pos_correct)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MnSlChrIcon {
    pub ft_hudindex: u8_,
    pub ft_kind: u8_,
    pub state: u8_,
    pub anim_timer: u8_,
    pub joint_id: u8_,
    pub joint2_id: u8_,
    pub sfx: ::std::os::raw::c_int,
    pub bound_l: f32,
    pub bound_r: f32,
    pub bound_u: f32,
    pub bound_d: f32,
}
#[test]
fn bindgen_test_layout_MnSlChrIcon() {
    assert_eq!(
        ::std::mem::size_of::<MnSlChrIcon>(),
        28usize,
        concat!("Size of: ", stringify!(MnSlChrIcon))
    );
    assert_eq!(
        ::std::mem::align_of::<MnSlChrIcon>(),
        4usize,
        concat!("Alignment of ", stringify!(MnSlChrIcon))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).ft_hudindex as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(ft_hudindex)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).ft_kind as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(ft_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).state as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).anim_timer as *const _ as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(anim_timer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).joint_id as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(joint_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).joint2_id as *const _ as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(joint2_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).sfx as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(sfx)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).bound_l as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(bound_l)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).bound_r as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(bound_r)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).bound_u as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(bound_u)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrIcon>())).bound_d as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrIcon),
            "::",
            stringify!(bound_d)
        )
    );
}
pub const DoorState_DOOR_HMN: DoorState = 0;
pub const DoorState_DOOR_CPU: DoorState = 1;
pub const DoorState_DOOR_UNK: DoorState = 2;
pub const DoorState_DOOR_CLOSED: DoorState = 3;
pub type DoorState = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MnSlChrDoor {
    pub x0: u8_,
    pub csp_joint: u8_,
    pub x2: u8_,
    pub joint_id: u8_,
    pub x4: u8_,
    pub x5: u8_,
    pub x6: u8_,
    pub cpuslider_joint: u8_,
    pub slider2_joint: u8_,
    pub x9: u8_,
    pub dooranim_timer: u8_,
    pub state: u8_,
    pub xc: u8_,
    pub costume: u8_,
    pub sel_icon: u8_,
    pub xf: u8_,
    pub x10: u8_,
    pub slideranim_timer: u8_,
    pub x12: u8_,
    pub x13: u8_,
    pub button_l: f32,
    pub button_t: f32,
    pub button_u: f32,
    pub button_d: f32,
}
#[test]
fn bindgen_test_layout_MnSlChrDoor() {
    assert_eq!(
        ::std::mem::size_of::<MnSlChrDoor>(),
        36usize,
        concat!("Size of: ", stringify!(MnSlChrDoor))
    );
    assert_eq!(
        ::std::mem::align_of::<MnSlChrDoor>(),
        4usize,
        concat!("Alignment of ", stringify!(MnSlChrDoor))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).csp_joint as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(csp_joint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).x2 as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(x2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).joint_id as *const _ as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(joint_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).x5 as *const _ as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(x5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).x6 as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(x6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).cpuslider_joint as *const _ as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(cpuslider_joint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).slider2_joint as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(slider2_joint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).x9 as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(x9)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).dooranim_timer as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(dooranim_timer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).state as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).costume as *const _ as usize },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(costume)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).sel_icon as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(sel_icon)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).xf as *const _ as usize },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(xf)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).x10 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).slideranim_timer as *const _ as usize },
        17usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(slideranim_timer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).x12 as *const _ as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(x12)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).x13 as *const _ as usize },
        19usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(x13)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).button_l as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(button_l)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).button_t as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(button_t)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).button_u as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(button_u)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrDoor>())).button_d as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrDoor),
            "::",
            stringify!(button_d)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MnSlChrTagData {
    pub name: *mut Text,
    pub namelist: *mut Text,
    pub x8: f32,
    pub scroll_amt: f32,
    pub scroll_force: f32,
    pub timer: ::std::os::raw::c_int,
    pub next_tag: u8_,
    pub port: u8_,
    pub state: u8_,
    pub use_tag: u8_,
}
#[test]
fn bindgen_test_layout_MnSlChrTagData() {
    assert_eq!(
        ::std::mem::size_of::<MnSlChrTagData>(),
        40usize,
        concat!("Size of: ", stringify!(MnSlChrTagData))
    );
    assert_eq!(
        ::std::mem::align_of::<MnSlChrTagData>(),
        8usize,
        concat!("Alignment of ", stringify!(MnSlChrTagData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTagData>())).name as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTagData),
            "::",
            stringify!(name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTagData>())).namelist as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTagData),
            "::",
            stringify!(namelist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTagData>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTagData),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTagData>())).scroll_amt as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTagData),
            "::",
            stringify!(scroll_amt)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTagData>())).scroll_force as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTagData),
            "::",
            stringify!(scroll_force)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTagData>())).timer as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTagData),
            "::",
            stringify!(timer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTagData>())).next_tag as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTagData),
            "::",
            stringify!(next_tag)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTagData>())).port as *const _ as usize },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTagData),
            "::",
            stringify!(port)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTagData>())).state as *const _ as usize },
        34usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTagData),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTagData>())).use_tag as *const _ as usize },
        35usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTagData),
            "::",
            stringify!(use_tag)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MnSlChrTag {
    pub tag_data: *mut MnSlChrTagData,
    pub x4: u8_,
    pub list_joint: u8_,
    pub name_joint: u8_,
    pub x7: u8_,
    pub kostartext_joint: u8_,
    pub x9: u8_,
    pub xa: u8_,
    pub xb: u8_,
}
#[test]
fn bindgen_test_layout_MnSlChrTag() {
    assert_eq!(
        ::std::mem::size_of::<MnSlChrTag>(),
        16usize,
        concat!("Size of: ", stringify!(MnSlChrTag))
    );
    assert_eq!(
        ::std::mem::align_of::<MnSlChrTag>(),
        8usize,
        concat!("Alignment of ", stringify!(MnSlChrTag))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTag>())).tag_data as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTag),
            "::",
            stringify!(tag_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTag>())).x4 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTag),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTag>())).list_joint as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTag),
            "::",
            stringify!(list_joint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTag>())).name_joint as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTag),
            "::",
            stringify!(name_joint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTag>())).x7 as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTag),
            "::",
            stringify!(x7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTag>())).kostartext_joint as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTag),
            "::",
            stringify!(kostartext_joint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTag>())).x9 as *const _ as usize },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTag),
            "::",
            stringify!(x9)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTag>())).xa as *const _ as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTag),
            "::",
            stringify!(xa)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrTag>())).xb as *const _ as usize },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrTag),
            "::",
            stringify!(xb)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MnSlChrKOStar {
    pub text: *mut Text,
    pub x4: f32,
    pub joint: u8_,
    pub xc: ::std::os::raw::c_int,
    pub x10: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_MnSlChrKOStar() {
    assert_eq!(
        ::std::mem::size_of::<MnSlChrKOStar>(),
        40usize,
        concat!("Size of: ", stringify!(MnSlChrKOStar))
    );
    assert_eq!(
        ::std::mem::align_of::<MnSlChrKOStar>(),
        8usize,
        concat!("Alignment of ", stringify!(MnSlChrKOStar))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrKOStar>())).text as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrKOStar),
            "::",
            stringify!(text)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrKOStar>())).x4 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrKOStar),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrKOStar>())).joint as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrKOStar),
            "::",
            stringify!(joint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrKOStar>())).xc as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrKOStar),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrKOStar>())).x10 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrKOStar),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrKOStar>())).x14 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrKOStar),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrKOStar>())).x18 as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrKOStar),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrKOStar>())).x1c as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrKOStar),
            "::",
            stringify!(x1c)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct MnSlChrData {
    pub GaWName: [u8_; 28usize],
    pub x1C: [u8_; 192usize],
    pub icons: [MnSlChrIcon; 26usize],
    pub doors: [MnSlChrDoor; 4usize],
    pub tags: [MnSlChrTag; 4usize],
    pub x474: u8_,
    pub x475: u8_,
    pub x476: u8_,
    pub x477: u8_,
    pub x478: u8_,
    pub x479: u8_,
    pub x47a: u8_,
    pub x47b: u8_,
    pub x47c: u8_,
    pub x47d: u8_,
    pub x47e: u8_,
    pub x47f: u8_,
    pub x480: u8_,
    pub x481: u8_,
    pub x482: u8_,
    pub x483: u8_,
    pub x484: [u8_; 64usize],
    pub ko_stars: [MnSlChrKOStar; 4usize],
}
#[test]
fn bindgen_test_layout_MnSlChrData() {
    assert_eq!(
        ::std::mem::size_of::<MnSlChrData>(),
        1400usize,
        concat!("Size of: ", stringify!(MnSlChrData))
    );
    assert_eq!(
        ::std::mem::align_of::<MnSlChrData>(),
        8usize,
        concat!("Alignment of ", stringify!(MnSlChrData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).GaWName as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(GaWName)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x1C as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x1C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).icons as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(icons)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).doors as *const _ as usize },
        948usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(doors)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).tags as *const _ as usize },
        1096usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(tags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x474 as *const _ as usize },
        1160usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x474)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x475 as *const _ as usize },
        1161usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x475)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x476 as *const _ as usize },
        1162usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x476)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x477 as *const _ as usize },
        1163usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x477)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x478 as *const _ as usize },
        1164usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x478)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x479 as *const _ as usize },
        1165usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x479)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x47a as *const _ as usize },
        1166usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x47a)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x47b as *const _ as usize },
        1167usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x47b)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x47c as *const _ as usize },
        1168usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x47c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x47d as *const _ as usize },
        1169usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x47d)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x47e as *const _ as usize },
        1170usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x47e)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x47f as *const _ as usize },
        1171usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x47f)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x480 as *const _ as usize },
        1172usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x480)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x481 as *const _ as usize },
        1173usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x481)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x482 as *const _ as usize },
        1174usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x482)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x483 as *const _ as usize },
        1175usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x483)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).x484 as *const _ as usize },
        1176usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(x484)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MnSlChrData>())).ko_stars as *const _ as usize },
        1240usize,
        concat!(
            "Offset of field: ",
            stringify!(MnSlChrData),
            "::",
            stringify!(ko_stars)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct VSMinorData {
    pub x0: u16_,
    pub css_kind: u8_,
    pub exit_kind: u8_,
    pub ko_data: *mut ::std::os::raw::c_void,
    pub vs_data: ScDataVS,
}
#[test]
fn bindgen_test_layout_VSMinorData() {
    assert_eq!(
        ::std::mem::size_of::<VSMinorData>(),
        368usize,
        concat!("Size of: ", stringify!(VSMinorData))
    );
    assert_eq!(
        ::std::mem::align_of::<VSMinorData>(),
        8usize,
        concat!("Alignment of ", stringify!(VSMinorData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<VSMinorData>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(VSMinorData),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<VSMinorData>())).css_kind as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(VSMinorData),
            "::",
            stringify!(css_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<VSMinorData>())).exit_kind as *const _ as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(VSMinorData),
            "::",
            stringify!(exit_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<VSMinorData>())).ko_data as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(VSMinorData),
            "::",
            stringify!(ko_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<VSMinorData>())).vs_data as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(VSMinorData),
            "::",
            stringify!(vs_data)
        )
    );
}
extern "C" {
    pub static mut stc_css_data: *mut MnSlChrData;
}
extern "C" {
    pub static mut stc_css_minorscene: *mut *mut VSMinorData;
}
extern "C" {
    pub static mut stc_css_regtagnum: *mut u8_;
}
extern "C" {
    pub static mut stc_css_49b0: *mut u8_;
}
extern "C" {
    pub static mut stc_css_49a7: *mut u8_;
}
extern "C" {
    pub static mut stc_css_49a8: *mut u8_;
}
extern "C" {
    pub static mut stc_css_archive: *mut *mut ArchiveInfo;
}
extern "C" {
    pub static mut stc_css_menuarchive: *mut *mut ArchiveInfo;
}
extern "C" {
    pub static mut stc_css_49ac: *mut u8_;
}
extern "C" {
    pub static mut stc_css_menugobj: *mut *mut GOBJ;
}
extern "C" {
    pub static mut stc_css_menumodel: *mut *mut JOBJ;
}
extern "C" {
    pub static mut stc_css_cursors: *mut *mut CSSCursor;
}
extern "C" {
    pub static mut stc_css_pucks: *mut *mut CSSPuck;
}
extern "C" {
    pub static mut stc_css_hmnport: *mut u8_;
}
extern "C" {
    pub static mut stc_css_cpuport: *mut u8_;
}
extern "C" {
    pub static mut stc_css_delay: *mut u8_;
}
extern "C" {
    pub static mut stc_css_maxply: *mut u8_;
}
extern "C" {
    pub static mut stc_css_singeplyport: *mut u8_;
}
extern "C" {
    pub static mut stc_css_49f0: *mut u8_;
}
extern "C" {
    pub static mut stc_css_49c0: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_css_49c4: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_css_49b8: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_css_49bc: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_css_bgtimer: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_css_hasreleasedb: *mut u8_;
}
extern "C" {
    pub static mut stc_css_exitkind: *mut u8_;
}
extern "C" {
    pub static mut stc_css_49a9: *mut u8_;
}
extern "C" {
    pub static mut stc_css_datatable: *mut *mut MnSelectChrDataTable;
}
extern "C" {
    pub static mut stc_css_cobjdesc: *mut *mut COBJDesc;
}
extern "C" {
    pub static mut stc_css_camgobj: *mut *mut GOBJ;
}
extern "C" {
    pub static mut stc_css_pad: *mut HSD_Pad;
}
extern "C" {
    pub static mut stc_css_unkarr: *mut u8_;
}
extern "C" {
    #[doc = " Functions"]
    pub fn MainMenu_CamRotateThink(gobj: *mut GOBJ);
}
extern "C" {
    pub fn CSS_GetNametagRumble(player: ::std::os::raw::c_int, tag: u8_) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn CSS_InitPlayerData(player: *mut PlayerData);
}
extern "C" {
    pub fn CSS_CameraRotateThink(gobj: *mut GOBJ);
}
extern "C" {
    pub fn CSS_MenuModelThink(gobj: *mut GOBJ);
}
extern "C" {
    pub fn CSS_CursorThink(gobj: *mut GOBJ);
}
extern "C" {
    pub fn CSS_PuckThink(gobj: *mut GOBJ);
}
extern "C" {
    pub fn CSS_TagThink(gobj: *mut GOBJ);
}
extern "C" {
    pub fn CSS_UpdateRulesText();
}
extern "C" {
    pub fn CSS_UpdateKOStars(ply: ::std::os::raw::c_int, unk: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CSS_StartThink(gobj: *mut GOBJ);
}
extern "C" {
    pub fn CSS_GetHandicapValue(
        ply: ::std::os::raw::c_int,
        nametag_id: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn CSS_SetModeTexture(css_kind: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CSS_ReturnPuck(ply: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn CSS_SetRandomFighter(
        ply: ::std::os::raw::c_int,
        unk: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn CSS_UpdateCSP(ply: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CSS_GetCostumeNum(ext_id: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn CSS_PlayFighterName(ext_id: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CSS_CostumeChange(port: ::std::os::raw::c_int, button_down: ::std::os::raw::c_int);
}
extern "C" {
    pub fn CSS_UpdateCSPTexture(
        port: ::std::os::raw::c_int,
        costume: ::std::os::raw::c_int,
        is_none: ::std::os::raw::c_int,
    );
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DevText {
    pub x0: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub x8: ::std::os::raw::c_int,
    pub xc: ::std::os::raw::c_int,
    pub bg_color: GXColor,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_char,
    pub x25: ::std::os::raw::c_char,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub x27: ::std::os::raw::c_char,
    pub x28: ::std::os::raw::c_int,
    pub x2c: ::std::os::raw::c_int,
    pub next: *mut DevText,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3c: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4c: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_DevText() {
    assert_eq!(
        ::std::mem::size_of::<DevText>(),
        104usize,
        concat!("Size of: ", stringify!(DevText))
    );
    assert_eq!(
        ::std::mem::align_of::<DevText>(),
        8usize,
        concat!("Alignment of ", stringify!(DevText))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).bg_color as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(bg_color)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x14 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x18 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x1c as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x20 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x24 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x25 as *const _ as usize },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x25)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x27 as *const _ as usize },
        39usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x27)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x28 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x2c as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).next as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x34 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x38 as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x3c as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x40 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x44 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x48 as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x4c as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x50 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x54 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x58 as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<DevText>())).x5c as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(DevText),
            "::",
            stringify!(x5c)
        )
    );
}
impl DevText {
    #[inline]
    pub fn show_text(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_text(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn show_background(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_background(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn show_cursor(&self) -> ::std::os::raw::c_char {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_show_cursor(&mut self, val: ::std::os::raw::c_char) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        show_text: ::std::os::raw::c_char,
        show_background: ::std::os::raw::c_char,
        show_cursor: ::std::os::raw::c_char,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let show_text: u8 = unsafe { ::std::mem::transmute(show_text) };
            show_text as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let show_background: u8 = unsafe { ::std::mem::transmute(show_background) };
            show_background as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let show_cursor: u8 = unsafe { ::std::mem::transmute(show_cursor) };
            show_cursor as u64
        });
        __bindgen_bitfield_unit
    }
}
extern "C" {
    #[doc = " Functions"]
    pub fn DevelopText_CreateDataTable(
        unk1: ::std::os::raw::c_int,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        alloc: *mut ::std::os::raw::c_void,
    ) -> *mut DevText;
}
extern "C" {
    pub fn DevelopText_Activate(unk: *mut ::std::os::raw::c_void, text: *mut DevText);
}
extern "C" {
    pub fn DevelopText_AddString(text: *mut DevText, ...);
}
extern "C" {
    pub fn DevelopText_EraseAllText(text: *mut DevText);
}
extern "C" {
    pub fn DevelopText_StoreBGColor(text: *mut DevText, RGBA: *mut u8_);
}
extern "C" {
    pub fn DevelopText_HideText(text: *mut DevText);
}
extern "C" {
    pub fn DevelopText_HideBG(text: *mut DevText);
}
extern "C" {
    pub fn DevelopText_StoreTextScale(text: *mut DevText, x: f32, y: f32);
}
extern "C" {
    pub fn Develop_DrawSphere(
        size: f32,
        pos1: *mut Vec3,
        pos2: *mut Vec2,
        diffuse: *mut GXColor,
        ambient: *mut GXColor,
    );
}
extern "C" {
    pub static mut stc_dblevel: *mut ::std::os::raw::c_int;
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HSD_ObjAllocData {
    pub flags: u32_,
    pub freehead: *mut ::std::os::raw::c_void,
    pub used: u32_,
    pub free: u32_,
    pub peak: u32_,
    pub num_limit: u32_,
    pub heap_limit_size: u32_,
    pub heap_limit_num: u32_,
    pub size: u32_,
    pub align: u32_,
    pub next: *mut HSD_ObjAllocData,
}
#[test]
fn bindgen_test_layout_HSD_ObjAllocData() {
    assert_eq!(
        ::std::mem::size_of::<HSD_ObjAllocData>(),
        56usize,
        concat!("Size of: ", stringify!(HSD_ObjAllocData))
    );
    assert_eq!(
        ::std::mem::align_of::<HSD_ObjAllocData>(),
        8usize,
        concat!("Alignment of ", stringify!(HSD_ObjAllocData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_ObjAllocData>())).flags as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_ObjAllocData>())).freehead as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(freehead)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_ObjAllocData>())).used as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(used)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_ObjAllocData>())).free as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(free)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_ObjAllocData>())).peak as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(peak)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_ObjAllocData>())).num_limit as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(num_limit)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<HSD_ObjAllocData>())).heap_limit_size as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(heap_limit_size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_ObjAllocData>())).heap_limit_num as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(heap_limit_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_ObjAllocData>())).size as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_ObjAllocData>())).align as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(align)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_ObjAllocData>())).next as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_ObjAllocData),
            "::",
            stringify!(next)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HSD_Material {
    pub ambient: GXColor,
    pub diffuse: GXColor,
    pub specular: GXColor,
    pub alpha: f32,
    pub shininess: f32,
}
#[test]
fn bindgen_test_layout_HSD_Material() {
    assert_eq!(
        ::std::mem::size_of::<HSD_Material>(),
        20usize,
        concat!("Size of: ", stringify!(HSD_Material))
    );
    assert_eq!(
        ::std::mem::align_of::<HSD_Material>(),
        4usize,
        concat!("Alignment of ", stringify!(HSD_Material))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Material>())).ambient as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Material),
            "::",
            stringify!(ambient)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Material>())).diffuse as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Material),
            "::",
            stringify!(diffuse)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Material>())).specular as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Material),
            "::",
            stringify!(specular)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Material>())).alpha as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Material),
            "::",
            stringify!(alpha)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Material>())).shininess as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Material),
            "::",
            stringify!(shininess)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HSD_Pad {
    pub held: ::std::os::raw::c_int,
    pub heldPrev: ::std::os::raw::c_int,
    pub down: ::std::os::raw::c_int,
    pub rapidFire: ::std::os::raw::c_int,
    pub up: ::std::os::raw::c_int,
    pub rapidTimer: ::std::os::raw::c_int,
    pub stickX: s8,
    pub stickY: s8,
    pub substickX: s8,
    pub substickY: s8,
    pub triggerLeft: u8_,
    pub triggerRight: u8_,
    pub fstickX: f32,
    pub fstickY: f32,
    pub fsubstickX: f32,
    pub fsubstickY: f32,
    pub ftriggerLeft: f32,
    pub ftriggerRight: f32,
    pub x38: f32,
    pub x3c: f32,
    pub x40: u8_,
    pub status: u8_,
}
#[test]
fn bindgen_test_layout_HSD_Pad() {
    assert_eq!(
        ::std::mem::size_of::<HSD_Pad>(),
        68usize,
        concat!("Size of: ", stringify!(HSD_Pad))
    );
    assert_eq!(
        ::std::mem::align_of::<HSD_Pad>(),
        4usize,
        concat!("Alignment of ", stringify!(HSD_Pad))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).held as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(held)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).heldPrev as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(heldPrev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).down as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(down)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).rapidFire as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(rapidFire)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).up as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(up)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).rapidTimer as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(rapidTimer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).stickX as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(stickX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).stickY as *const _ as usize },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(stickY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).substickX as *const _ as usize },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(substickX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).substickY as *const _ as usize },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(substickY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).triggerLeft as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(triggerLeft)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).triggerRight as *const _ as usize },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(triggerRight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).fstickX as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(fstickX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).fstickY as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(fstickY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).fsubstickX as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(fsubstickX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).fsubstickY as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(fsubstickY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).ftriggerLeft as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(ftriggerLeft)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).ftriggerRight as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(ftriggerRight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).x38 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).x3c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).x40 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pad>())).status as *const _ as usize },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pad),
            "::",
            stringify!(status)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HSD_Pads {
    pub pad: [HSD_Pad; 4usize],
}
#[test]
fn bindgen_test_layout_HSD_Pads() {
    assert_eq!(
        ::std::mem::size_of::<HSD_Pads>(),
        272usize,
        concat!("Size of: ", stringify!(HSD_Pads))
    );
    assert_eq!(
        ::std::mem::align_of::<HSD_Pads>(),
        4usize,
        concat!("Alignment of ", stringify!(HSD_Pads))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Pads>())).pad as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Pads),
            "::",
            stringify!(pad)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HSD_Update {
    pub sys_frames_pre: u32_,
    pub sys_frames_post: u32_,
    pub engine_frames: u32_,
    pub change_scene: u32_,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 4usize], u8>,
    pub checkPause: ::std::option::Option<unsafe extern "C" fn() -> ::std::os::raw::c_int>,
    pub checkAdvance: ::std::option::Option<unsafe extern "C" fn() -> ::std::os::raw::c_int>,
    pub x1c: u32_,
    pub x20: u32_,
    pub x24: u32_,
    pub x28: u32_,
    pub x2c: u32_,
    pub onFrame: ::std::option::Option<unsafe extern "C" fn()>,
}
#[test]
fn bindgen_test_layout_HSD_Update() {
    assert_eq!(
        ::std::mem::size_of::<HSD_Update>(),
        72usize,
        concat!("Size of: ", stringify!(HSD_Update))
    );
    assert_eq!(
        ::std::mem::align_of::<HSD_Update>(),
        8usize,
        concat!("Alignment of ", stringify!(HSD_Update))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).sys_frames_pre as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(sys_frames_pre)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).sys_frames_post as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(sys_frames_post)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).engine_frames as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(engine_frames)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).change_scene as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(change_scene)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).checkPause as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(checkPause)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).checkAdvance as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(checkAdvance)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).x1c as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).x20 as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).x24 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).x28 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).x2c as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(x2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_Update>())).onFrame as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_Update),
            "::",
            stringify!(onFrame)
        )
    );
}
impl HSD_Update {
    #[inline]
    pub fn flag1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn pause_game(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_pause_game(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn pause_develop(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_pause_develop(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag9(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(8usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag9(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(8usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag10(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(9usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag10(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(9usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag11(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(10usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag11(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(10usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag12(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(11usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag12(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(11usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag13(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(12usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag13(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(12usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag14(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(13usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag14(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(13usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn pause_game_prev(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(14usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_pause_game_prev(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(14usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn pause_develop_prev(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(15usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_pause_develop_prev(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(15usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag17(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(16usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag17(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(16usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag18(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(17usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag18(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(17usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag19(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(18usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag19(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(18usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag20(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(19usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag20(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(19usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag21(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(20usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag21(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(20usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag22(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(21usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag22(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(21usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag23(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(22usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag23(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(22usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn advance(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(23usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_advance(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(23usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag24(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(24usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag24(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(24usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag25(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(25usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag25(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(25usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag26(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(26usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag26(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(26usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag27(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(27usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag27(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(27usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag28(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(28usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag28(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(28usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag29(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(29usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag29(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(29usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag30(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(30usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag30(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(30usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn advance_prev(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(31usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_advance_prev(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(31usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        flag1: ::std::os::raw::c_uchar,
        flag2: ::std::os::raw::c_uchar,
        flag3: ::std::os::raw::c_uchar,
        flag4: ::std::os::raw::c_uchar,
        flag5: ::std::os::raw::c_uchar,
        flag6: ::std::os::raw::c_uchar,
        pause_game: ::std::os::raw::c_uchar,
        pause_develop: ::std::os::raw::c_uchar,
        flag9: ::std::os::raw::c_uchar,
        flag10: ::std::os::raw::c_uchar,
        flag11: ::std::os::raw::c_uchar,
        flag12: ::std::os::raw::c_uchar,
        flag13: ::std::os::raw::c_uchar,
        flag14: ::std::os::raw::c_uchar,
        pause_game_prev: ::std::os::raw::c_uchar,
        pause_develop_prev: ::std::os::raw::c_uchar,
        flag17: ::std::os::raw::c_uchar,
        flag18: ::std::os::raw::c_uchar,
        flag19: ::std::os::raw::c_uchar,
        flag20: ::std::os::raw::c_uchar,
        flag21: ::std::os::raw::c_uchar,
        flag22: ::std::os::raw::c_uchar,
        flag23: ::std::os::raw::c_uchar,
        advance: ::std::os::raw::c_uchar,
        flag24: ::std::os::raw::c_uchar,
        flag25: ::std::os::raw::c_uchar,
        flag26: ::std::os::raw::c_uchar,
        flag27: ::std::os::raw::c_uchar,
        flag28: ::std::os::raw::c_uchar,
        flag29: ::std::os::raw::c_uchar,
        flag30: ::std::os::raw::c_uchar,
        advance_prev: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 4usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 4usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let flag1: u8 = unsafe { ::std::mem::transmute(flag1) };
            flag1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let flag2: u8 = unsafe { ::std::mem::transmute(flag2) };
            flag2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let flag3: u8 = unsafe { ::std::mem::transmute(flag3) };
            flag3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let flag4: u8 = unsafe { ::std::mem::transmute(flag4) };
            flag4 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let flag5: u8 = unsafe { ::std::mem::transmute(flag5) };
            flag5 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let flag6: u8 = unsafe { ::std::mem::transmute(flag6) };
            flag6 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let pause_game: u8 = unsafe { ::std::mem::transmute(pause_game) };
            pause_game as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let pause_develop: u8 = unsafe { ::std::mem::transmute(pause_develop) };
            pause_develop as u64
        });
        __bindgen_bitfield_unit.set(8usize, 1u8, {
            let flag9: u8 = unsafe { ::std::mem::transmute(flag9) };
            flag9 as u64
        });
        __bindgen_bitfield_unit.set(9usize, 1u8, {
            let flag10: u8 = unsafe { ::std::mem::transmute(flag10) };
            flag10 as u64
        });
        __bindgen_bitfield_unit.set(10usize, 1u8, {
            let flag11: u8 = unsafe { ::std::mem::transmute(flag11) };
            flag11 as u64
        });
        __bindgen_bitfield_unit.set(11usize, 1u8, {
            let flag12: u8 = unsafe { ::std::mem::transmute(flag12) };
            flag12 as u64
        });
        __bindgen_bitfield_unit.set(12usize, 1u8, {
            let flag13: u8 = unsafe { ::std::mem::transmute(flag13) };
            flag13 as u64
        });
        __bindgen_bitfield_unit.set(13usize, 1u8, {
            let flag14: u8 = unsafe { ::std::mem::transmute(flag14) };
            flag14 as u64
        });
        __bindgen_bitfield_unit.set(14usize, 1u8, {
            let pause_game_prev: u8 = unsafe { ::std::mem::transmute(pause_game_prev) };
            pause_game_prev as u64
        });
        __bindgen_bitfield_unit.set(15usize, 1u8, {
            let pause_develop_prev: u8 = unsafe { ::std::mem::transmute(pause_develop_prev) };
            pause_develop_prev as u64
        });
        __bindgen_bitfield_unit.set(16usize, 1u8, {
            let flag17: u8 = unsafe { ::std::mem::transmute(flag17) };
            flag17 as u64
        });
        __bindgen_bitfield_unit.set(17usize, 1u8, {
            let flag18: u8 = unsafe { ::std::mem::transmute(flag18) };
            flag18 as u64
        });
        __bindgen_bitfield_unit.set(18usize, 1u8, {
            let flag19: u8 = unsafe { ::std::mem::transmute(flag19) };
            flag19 as u64
        });
        __bindgen_bitfield_unit.set(19usize, 1u8, {
            let flag20: u8 = unsafe { ::std::mem::transmute(flag20) };
            flag20 as u64
        });
        __bindgen_bitfield_unit.set(20usize, 1u8, {
            let flag21: u8 = unsafe { ::std::mem::transmute(flag21) };
            flag21 as u64
        });
        __bindgen_bitfield_unit.set(21usize, 1u8, {
            let flag22: u8 = unsafe { ::std::mem::transmute(flag22) };
            flag22 as u64
        });
        __bindgen_bitfield_unit.set(22usize, 1u8, {
            let flag23: u8 = unsafe { ::std::mem::transmute(flag23) };
            flag23 as u64
        });
        __bindgen_bitfield_unit.set(23usize, 1u8, {
            let advance: u8 = unsafe { ::std::mem::transmute(advance) };
            advance as u64
        });
        __bindgen_bitfield_unit.set(24usize, 1u8, {
            let flag24: u8 = unsafe { ::std::mem::transmute(flag24) };
            flag24 as u64
        });
        __bindgen_bitfield_unit.set(25usize, 1u8, {
            let flag25: u8 = unsafe { ::std::mem::transmute(flag25) };
            flag25 as u64
        });
        __bindgen_bitfield_unit.set(26usize, 1u8, {
            let flag26: u8 = unsafe { ::std::mem::transmute(flag26) };
            flag26 as u64
        });
        __bindgen_bitfield_unit.set(27usize, 1u8, {
            let flag27: u8 = unsafe { ::std::mem::transmute(flag27) };
            flag27 as u64
        });
        __bindgen_bitfield_unit.set(28usize, 1u8, {
            let flag28: u8 = unsafe { ::std::mem::transmute(flag28) };
            flag28 as u64
        });
        __bindgen_bitfield_unit.set(29usize, 1u8, {
            let flag29: u8 = unsafe { ::std::mem::transmute(flag29) };
            flag29 as u64
        });
        __bindgen_bitfield_unit.set(30usize, 1u8, {
            let flag30: u8 = unsafe { ::std::mem::transmute(flag30) };
            flag30 as u64
        });
        __bindgen_bitfield_unit.set(31usize, 1u8, {
            let advance_prev: u8 = unsafe { ::std::mem::transmute(advance_prev) };
            advance_prev as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HSD_VI {
    pub x0: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub is_prog: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_HSD_VI() {
    assert_eq!(
        ::std::mem::size_of::<HSD_VI>(),
        12usize,
        concat!("Size of: ", stringify!(HSD_VI))
    );
    assert_eq!(
        ::std::mem::align_of::<HSD_VI>(),
        4usize,
        concat!("Alignment of ", stringify!(HSD_VI))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_VI>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_VI),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_VI>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_VI),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<HSD_VI>())).is_prog as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(HSD_VI),
            "::",
            stringify!(is_prog)
        )
    );
}
extern "C" {
    pub static mut stc_HSD_VI: *mut HSD_VI;
}
extern "C" {
    #[doc = " Functions"]
    pub fn HSD_Randi(max: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn HSD_Randf() -> f32;
}
extern "C" {
    pub fn HSD_MemAlloc(size: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn HSD_Free(ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn HSD_ObjAlloc(obj_def: *mut HSD_ObjAllocData) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn HSD_ObjFree(obj_def: *mut HSD_ObjAllocData, obj: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn HSD_ImageDescCopyFromEFB(
        image_desc: *mut _HSD_ImageDesc,
        left: ::std::os::raw::c_int,
        top: ::std::os::raw::c_int,
        z_flag: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GX_AllocImageData(
        image_desc: *mut _HSD_ImageDesc,
        width: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        fmt: ::std::os::raw::c_int,
        size: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn GXTexModeSync();
}
extern "C" {
    pub fn GXPixModeSync();
}
extern "C" {
    pub fn GXInvalidateTexAll();
}
extern "C" {
    pub fn Pad_GetRapidHeld(pad: ::std::os::raw::c_int) -> u64_;
}
pub const MEX_GETDATA_MXDT_FTINTNUM: MEX_GETDATA = 0;
pub const MEX_GETDATA_MXDT_FTEXTNUM: MEX_GETDATA = 1;
pub const MEX_GETDATA_MXDT_FTICONNUM: MEX_GETDATA = 2;
pub const MEX_GETDATA_MXDT_FTICONDATA: MEX_GETDATA = 3;
pub const MEX_GETDATA_MXDT_GRINTNUM: MEX_GETDATA = 4;
pub const MEX_GETDATA_MXDT_GREXTNUM: MEX_GETDATA = 5;
pub const MEX_GETDATA_MXDT_GRICONNUM: MEX_GETDATA = 6;
pub const MEX_GETDATA_MXDT_GRICONDATA: MEX_GETDATA = 7;
pub type MEX_GETDATA = ::std::os::raw::c_uint;
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PRIM {
    pub data: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_PRIM() {
    assert_eq!(
        ::std::mem::size_of::<PRIM>(),
        8usize,
        concat!("Size of: ", stringify!(PRIM))
    );
    assert_eq!(
        ::std::mem::align_of::<PRIM>(),
        8usize,
        concat!("Alignment of ", stringify!(PRIM))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PRIM>())).data as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(PRIM),
            "::",
            stringify!(data)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Translation {
    pub frame: f32,
    pub value: f32,
}
#[test]
fn bindgen_test_layout_Translation() {
    assert_eq!(
        ::std::mem::size_of::<Translation>(),
        8usize,
        concat!("Size of: ", stringify!(Translation))
    );
    assert_eq!(
        ::std::mem::align_of::<Translation>(),
        4usize,
        concat!("Alignment of ", stringify!(Translation))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Translation>())).frame as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Translation),
            "::",
            stringify!(frame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Translation>())).value as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Translation),
            "::",
            stringify!(value)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MEXPlaylist {
    pub bgm: u16_,
    pub chance: u16_,
}
#[test]
fn bindgen_test_layout_MEXPlaylist() {
    assert_eq!(
        ::std::mem::size_of::<MEXPlaylist>(),
        4usize,
        concat!("Size of: ", stringify!(MEXPlaylist))
    );
    assert_eq!(
        ::std::mem::align_of::<MEXPlaylist>(),
        2usize,
        concat!("Alignment of ", stringify!(MEXPlaylist))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MEXPlaylist>())).bgm as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MEXPlaylist),
            "::",
            stringify!(bgm)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MEXPlaylist>())).chance as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(MEXPlaylist),
            "::",
            stringify!(chance)
        )
    );
}
extern "C" {
    #[doc = " Functions"]
    pub fn MEX_LoadRelArchive(
        file: *mut ::std::os::raw::c_char,
        functions: *mut ::std::os::raw::c_void,
        symbol: *mut ::std::os::raw::c_char,
    ) -> *mut ArchiveInfo;
}
extern "C" {
    pub fn MEX_IndexFighterItem(
        fighter_kind: ::std::os::raw::c_int,
        itemdata: *mut ::std::os::raw::c_void,
        item_id: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SpawnMEXEffect(
        effectID: ::std::os::raw::c_int,
        fighter: ::std::os::raw::c_int,
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn MEX_GetItemExtID(
        gobj: *mut GOBJ,
        item_id: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MEX_GetFtItemID(
        ft_kind: ::std::os::raw::c_int,
        item_id: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MEX_GetGrItemID(item_id: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn SFX_PlayStageSFX(sfx_id: ::std::os::raw::c_int);
}
extern "C" {
    pub fn calloc(size: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn PRIM_NEW(
        vert_count: ::std::os::raw::c_int,
        params1: ::std::os::raw::c_int,
        params2: ::std::os::raw::c_int,
    ) -> *mut PRIM;
}
extern "C" {
    pub fn PRIM_CLOSE();
}
extern "C" {
    pub fn MEX_GetPlaylist() -> *mut MEXPlaylist;
}
extern "C" {
    pub fn MEX_GetStageItemExtID(item_id: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn KirbyStateChange(
        fighter: *mut GOBJ,
        state: ::std::os::raw::c_int,
        startFrame: f32,
        animSpeed: f32,
        animBlend: f32,
    );
}
extern "C" {
    pub fn MEX_GetKirbyCpData(copy_id: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn MEX_GetCopyItemExtID(
        copy_id: ::std::os::raw::c_int,
        item_id: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn MEX_GetData(index: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    #[doc = " Functions"]
    pub fn atan(in_: f32) -> f32;
}
extern "C" {
    pub fn atan2(y: f32, x: f32) -> f32;
}
extern "C" {
    pub fn sin(x: f32) -> f32;
}
extern "C" {
    pub fn cos(x: f32) -> f32;
}
extern "C" {
    pub fn MTXLookAt(dest: *mut Mtx, eye: *mut Vec3, up: *mut Vec3, target: *mut Vec3);
}
extern "C" {
    pub fn VECNormalize(src: *mut Vec3, dest: *mut Vec3);
}
extern "C" {
    pub fn VECAdd(a: *mut Vec3, b: *mut Vec3, ab: *mut Vec3);
}
extern "C" {
    pub fn VECSubtract(a: *mut Vec3, b: *mut Vec3, a_b: *mut Vec3);
}
extern "C" {
    pub fn VECMultAndAdd(a: *mut Vec3, b: *mut Vec3);
}
extern "C" {
    pub fn VECDotProduct(a: *mut Vec3, b: *mut Vec3) -> f32;
}
extern "C" {
    pub fn VECCrossProduct(a: *mut Vec3, b: *mut Vec3, axb: *mut Vec3);
}
extern "C" {
    pub fn MTXQuat(dest: *mut Vec4, m: *mut Mtx);
}
extern "C" {
    pub fn HSD_MtxGetRotation(m: *mut Mtx, dest: *mut Vec3);
}
extern "C" {
    pub fn MatToQuat(m: *mut Mtx, dest: *mut Vec3);
}
extern "C" {
    pub fn sqrtf(num: f32) -> f32;
}
extern "C" {
    pub fn MTXRotRad(m: *mut [f32; 4usize], axis: ::std::os::raw::c_char, rad: f32_);
}
pub type va_list = __builtin_va_list;
pub type __gnuc_va_list = __builtin_va_list;
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OSInfo {
    pub gameName: [::std::os::raw::c_char; 4usize],
    pub company: [::std::os::raw::c_char; 2usize],
    pub disk_id: u8_,
    pub disk_version: u8_,
    pub is_audiostream: u8_,
    pub streambuffer_size: u8_,
    pub xc: ::std::os::raw::c_int,
    pub x10: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub dvd_magicword: ::std::os::raw::c_int,
    pub boot_magicword: ::std::os::raw::c_int,
    pub sys_version: ::std::os::raw::c_int,
    pub mem_size: ::std::os::raw::c_int,
    pub console_type: ::std::os::raw::c_int,
    pub arena_lo: ::std::os::raw::c_int,
    pub arena_hi: ::std::os::raw::c_int,
    pub fst: *mut ::std::os::raw::c_void,
    pub fst_maxsize: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4C: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5C: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6C: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7C: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8C: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9C: ::std::os::raw::c_int,
    pub xA0: ::std::os::raw::c_int,
    pub xA4: ::std::os::raw::c_int,
    pub xA8: ::std::os::raw::c_int,
    pub xAC: ::std::os::raw::c_int,
    pub xB0: ::std::os::raw::c_int,
    pub xB4: ::std::os::raw::c_int,
    pub xB8: ::std::os::raw::c_int,
    pub xBC: ::std::os::raw::c_int,
    pub xC0: ::std::os::raw::c_int,
    pub xC4: ::std::os::raw::c_int,
    pub xC8: ::std::os::raw::c_int,
    pub tv_mode: ::std::os::raw::c_int,
    pub aram_size: ::std::os::raw::c_int,
    pub xD4: ::std::os::raw::c_int,
    pub xD8: ::std::os::raw::c_int,
    pub xDC: ::std::os::raw::c_int,
    pub xE0: ::std::os::raw::c_int,
    pub curr_osthread: ::std::os::raw::c_int,
    pub xE8: ::std::os::raw::c_int,
    pub xEC: ::std::os::raw::c_int,
    pub simulated_memsize: ::std::os::raw::c_int,
    pub dvd_BI2: *mut ::std::os::raw::c_void,
    pub bus_clock: ::std::os::raw::c_int,
    pub cpu_clock: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_OSInfo() {
    assert_eq!(
        ::std::mem::size_of::<OSInfo>(),
        264usize,
        concat!("Size of: ", stringify!(OSInfo))
    );
    assert_eq!(
        ::std::mem::align_of::<OSInfo>(),
        8usize,
        concat!("Alignment of ", stringify!(OSInfo))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).gameName as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(gameName)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).company as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(company)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).disk_id as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(disk_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).disk_version as *const _ as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(disk_version)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).is_audiostream as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(is_audiostream)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).streambuffer_size as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(streambuffer_size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x10 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x14 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x18 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).dvd_magicword as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(dvd_magicword)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).boot_magicword as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(boot_magicword)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).sys_version as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(sys_version)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).mem_size as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(mem_size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).console_type as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(console_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).arena_lo as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(arena_lo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).arena_hi as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(arena_hi)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).fst as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(fst)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).fst_maxsize as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(fst_maxsize)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x40 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x44 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x48 as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x4C as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x4C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x50 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x54 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x58 as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x5C as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x5C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x60 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x64 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x68 as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x6C as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x6C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x70 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x74 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x78 as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x7C as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x7C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x80 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x84 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x88 as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x8C as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x8C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x90 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x94 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x98 as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).x9C as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(x9C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xA0 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xA0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xA4 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xA4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xA8 as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xA8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xAC as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xAC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xB0 as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xB0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xB4 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xB4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xB8 as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xB8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xBC as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xBC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xC0 as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xC0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xC4 as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xC4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xC8 as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xC8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).tv_mode as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(tv_mode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).aram_size as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(aram_size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xD4 as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xD4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xD8 as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xD8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xDC as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xDC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xE0 as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xE0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).curr_osthread as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(curr_osthread)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xE8 as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xE8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).xEC as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(xEC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).simulated_memsize as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(simulated_memsize)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).dvd_BI2 as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(dvd_BI2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).bus_clock as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(bus_clock)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSInfo>())).cpu_clock as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(OSInfo),
            "::",
            stringify!(cpu_clock)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OSCalendarTime {
    pub sec: ::std::os::raw::c_int,
    pub min: ::std::os::raw::c_int,
    pub hour: ::std::os::raw::c_int,
    pub mday: ::std::os::raw::c_int,
    pub mon: ::std::os::raw::c_int,
    pub year: ::std::os::raw::c_int,
    pub wday: ::std::os::raw::c_int,
    pub yday: ::std::os::raw::c_int,
    pub msec: ::std::os::raw::c_int,
    pub usec: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_OSCalendarTime() {
    assert_eq!(
        ::std::mem::size_of::<OSCalendarTime>(),
        40usize,
        concat!("Size of: ", stringify!(OSCalendarTime))
    );
    assert_eq!(
        ::std::mem::align_of::<OSCalendarTime>(),
        4usize,
        concat!("Alignment of ", stringify!(OSCalendarTime))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSCalendarTime>())).sec as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(OSCalendarTime),
            "::",
            stringify!(sec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSCalendarTime>())).min as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(OSCalendarTime),
            "::",
            stringify!(min)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSCalendarTime>())).hour as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(OSCalendarTime),
            "::",
            stringify!(hour)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSCalendarTime>())).mday as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(OSCalendarTime),
            "::",
            stringify!(mday)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSCalendarTime>())).mon as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(OSCalendarTime),
            "::",
            stringify!(mon)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSCalendarTime>())).year as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(OSCalendarTime),
            "::",
            stringify!(year)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSCalendarTime>())).wday as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(OSCalendarTime),
            "::",
            stringify!(wday)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSCalendarTime>())).yday as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(OSCalendarTime),
            "::",
            stringify!(yday)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSCalendarTime>())).msec as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(OSCalendarTime),
            "::",
            stringify!(msec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<OSCalendarTime>())).usec as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(OSCalendarTime),
            "::",
            stringify!(usec)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CARDStat {
    pub fileName: [::std::os::raw::c_char; 32usize],
    pub length: u32_,
    pub time: u32_,
    pub gameName: [u8_; 4usize],
    pub company: [u8_; 2usize],
    pub bannerFormat: u8_,
    pub iconAddr: u32_,
    pub iconFormat: u16_,
    pub iconSpeed: u16_,
    pub commentAddr: u32_,
    pub offsetBanner: u32_,
    pub offsetBannerTlut: u32_,
    pub offsetIcon: [u32_; 8usize],
    pub offsetIconTlut: u32_,
    pub offsetData: u32_,
}
#[test]
fn bindgen_test_layout_CARDStat() {
    assert_eq!(
        ::std::mem::size_of::<CARDStat>(),
        108usize,
        concat!("Size of: ", stringify!(CARDStat))
    );
    assert_eq!(
        ::std::mem::align_of::<CARDStat>(),
        4usize,
        concat!("Alignment of ", stringify!(CARDStat))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).fileName as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(fileName)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).length as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(length)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).time as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(time)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).gameName as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(gameName)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).company as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(company)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).bannerFormat as *const _ as usize },
        46usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(bannerFormat)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).iconAddr as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(iconAddr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).iconFormat as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(iconFormat)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).iconSpeed as *const _ as usize },
        54usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(iconSpeed)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).commentAddr as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(commentAddr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).offsetBanner as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(offsetBanner)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).offsetBannerTlut as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(offsetBannerTlut)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).offsetIcon as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(offsetIcon)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).offsetIconTlut as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(offsetIconTlut)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDStat>())).offsetData as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDStat),
            "::",
            stringify!(offsetData)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CARDFileInfo {
    pub chan: s32,
    pub fileNo: s32,
    pub offset: s32,
    pub length: s32,
    pub iBlock: u16_,
    pub __padding: u16_,
}
#[test]
fn bindgen_test_layout_CARDFileInfo() {
    assert_eq!(
        ::std::mem::size_of::<CARDFileInfo>(),
        20usize,
        concat!("Size of: ", stringify!(CARDFileInfo))
    );
    assert_eq!(
        ::std::mem::align_of::<CARDFileInfo>(),
        4usize,
        concat!("Alignment of ", stringify!(CARDFileInfo))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDFileInfo>())).chan as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDFileInfo),
            "::",
            stringify!(chan)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDFileInfo>())).fileNo as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDFileInfo),
            "::",
            stringify!(fileNo)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDFileInfo>())).offset as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDFileInfo),
            "::",
            stringify!(offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDFileInfo>())).length as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDFileInfo),
            "::",
            stringify!(length)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDFileInfo>())).iBlock as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDFileInfo),
            "::",
            stringify!(iBlock)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CARDFileInfo>())).__padding as *const _ as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(CARDFileInfo),
            "::",
            stringify!(__padding)
        )
    );
}
#[repr(C)]
#[repr(align(2))]
#[derive(Debug, Copy, Clone)]
pub struct RGB565 {
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 2usize], u8>,
}
#[test]
fn bindgen_test_layout_RGB565() {
    assert_eq!(
        ::std::mem::size_of::<RGB565>(),
        2usize,
        concat!("Size of: ", stringify!(RGB565))
    );
    assert_eq!(
        ::std::mem::align_of::<RGB565>(),
        2usize,
        concat!("Alignment of ", stringify!(RGB565))
    );
}
impl RGB565 {
    #[inline]
    pub fn r(&self) -> ::std::os::raw::c_ushort {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 5u8) as u16) }
    }
    #[inline]
    pub fn set_r(&mut self, val: ::std::os::raw::c_ushort) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 5u8, val as u64)
        }
    }
    #[inline]
    pub fn g(&self) -> ::std::os::raw::c_ushort {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 6u8) as u16) }
    }
    #[inline]
    pub fn set_g(&mut self, val: ::std::os::raw::c_ushort) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 6u8, val as u64)
        }
    }
    #[inline]
    pub fn b(&self) -> ::std::os::raw::c_ushort {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(11usize, 5u8) as u16) }
    }
    #[inline]
    pub fn set_b(&mut self, val: ::std::os::raw::c_ushort) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_1.set(11usize, 5u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        r: ::std::os::raw::c_ushort,
        g: ::std::os::raw::c_ushort,
        b: ::std::os::raw::c_ushort,
    ) -> __BindgenBitfieldUnit<[u8; 2usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 2usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 5u8, {
            let r: u16 = unsafe { ::std::mem::transmute(r) };
            r as u64
        });
        __bindgen_bitfield_unit.set(5usize, 6u8, {
            let g: u16 = unsafe { ::std::mem::transmute(g) };
            g as u64
        });
        __bindgen_bitfield_unit.set(11usize, 5u8, {
            let b: u16 = unsafe { ::std::mem::transmute(b) };
            b as u64
        });
        __bindgen_bitfield_unit
    }
}
extern "C" {
    pub static mut os_info: *mut OSInfo;
}
extern "C" {
    #[doc = " OS Library"]
    pub fn OSGetTick() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OSGetTime() -> u64_;
}
extern "C" {
    pub fn OSTicksToCalendarTime(time: u64_, td: *mut OSCalendarTime);
}
extern "C" {
    pub fn OSReport(arg1: *mut ::std::os::raw::c_char, ...);
}
extern "C" {
    pub fn __assert(
        file: *mut ::std::os::raw::c_char,
        line: ::std::os::raw::c_int,
        assert: *mut ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn OSCheckHeap(heap: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn OSGetConsoleType() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn memcpy(
        dest: *mut ::std::os::raw::c_void,
        source: *mut ::std::os::raw::c_void,
        size: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn memset(
        dest: *mut ::std::os::raw::c_void,
        fill: ::std::os::raw::c_int,
        size: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn CARDGetStatus(chan: s32, fileNo: s32, stat: *mut CARDStat) -> s32;
}
extern "C" {
    pub fn CARDMountAsync(
        chan: s32,
        workArea: *mut ::std::os::raw::c_void,
        detachCallback: *mut ::std::os::raw::c_void,
        attachCallback: *mut ::std::os::raw::c_void,
    ) -> s32;
}
extern "C" {
    pub fn CARDUnmount(chan: s32) -> s32;
}
extern "C" {
    pub fn CARDOpen(
        chan: s32,
        fileName: *mut ::std::os::raw::c_char,
        fileInfo: *mut CARDFileInfo,
    ) -> s32;
}
extern "C" {
    pub fn CARDClose(fileInfo: *mut CARDFileInfo) -> s32;
}
extern "C" {
    pub fn CARDProbeEx(chan: s32, memSize: *mut s32, sectorSize: *mut s32) -> s32;
}
extern "C" {
    pub fn CARDCheckAsync(chan: s32, callback: *mut ::std::os::raw::c_void) -> s32;
}
extern "C" {
    pub fn CARDFreeBlocks(chan: s32, byteNotUsed: *mut s32, filesNotUsed: *mut s32) -> s32;
}
extern "C" {
    pub fn CARDDeleteAsync(
        chan: s32,
        fileName: *mut ::std::os::raw::c_char,
        callback: *mut ::std::os::raw::c_void,
    ) -> s32;
}
extern "C" {
    pub fn CARDCreateAsync(
        chan: s32,
        fileName: *mut ::std::os::raw::c_char,
        size: u32_,
        fileInfo: *mut CARDFileInfo,
        callback: *mut ::std::os::raw::c_void,
    ) -> s32;
}
extern "C" {
    pub fn CARDSetStatusAsync(
        chan: s32,
        fileNo: s32,
        stat: *mut CARDStat,
        callback: *mut ::std::os::raw::c_void,
    ) -> s32;
}
extern "C" {
    pub fn CARDRead(
        fileInfo: *mut CARDFileInfo,
        buf: *mut ::std::os::raw::c_void,
        length: s32,
        offset: s32,
    ) -> s32;
}
extern "C" {
    pub fn DCFlushRange(startAddr: *mut ::std::os::raw::c_void, nBytes: u32_);
}
extern "C" {
    pub fn TRK_FlushCache(startAddr: *mut ::std::os::raw::c_void, nBytes: u32_);
}
extern "C" {
    pub fn memcmp(
        buf1: *mut ::std::os::raw::c_void,
        buf2: *mut ::std::os::raw::c_void,
        nBytes: u32_,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GXGetTexBufferSize(
        width: u16_,
        height: u16_,
        format: u32_,
        mipmap: ::std::os::raw::c_int,
        max_lod: u8_,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GXSetDrawDone();
}
extern "C" {
    pub fn GXWaitDrawDone();
}
extern "C" {
    pub fn blr();
}
extern "C" {
    pub fn blr2();
}
extern "C" {
    #[doc = " HSD Library"]
    pub fn HSD_GetHeapID() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn HSD_SetHeapID(heap: ::std::os::raw::c_int);
}
extern "C" {
    pub fn sprintf(
        s: *mut ::std::os::raw::c_char,
        format: *const ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn _vsprintf(
        str_: *mut ::std::os::raw::c_char,
        unk: ::std::os::raw::c_int,
        format: *const ::std::os::raw::c_char,
        arg: *mut __va_list_tag,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn strlen(str_: *mut ::std::os::raw::c_char) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn strchr(
        str_: *mut ::std::os::raw::c_char,
        c: ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn strcmp(
        str1: *mut ::std::os::raw::c_char,
        str2: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn strncmp(
        str1: *mut ::std::os::raw::c_char,
        str2: *mut ::std::os::raw::c_char,
        size: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn strcpy(
        dest: *mut ::std::os::raw::c_char,
        src: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn strncpy(
        dest: *mut ::std::os::raw::c_char,
        src: *mut ::std::os::raw::c_char,
        size: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn strtoul(
        str_: *const ::std::os::raw::c_char,
        endptr: *mut *mut ::std::os::raw::c_char,
        base: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_ulong;
}
extern "C" {
    pub fn strcat(
        s: *mut ::std::os::raw::c_char,
        append: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn SFX_Play(sfxID: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SFX_PlayRaw(
        sfx: ::std::os::raw::c_int,
        volume: ::std::os::raw::c_int,
        pan: ::std::os::raw::c_int,
        unk: ::std::os::raw::c_int,
        unk2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn SFX_PlayCommon(sfxID: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SFX_PlayCrowd(sfxID: ::std::os::raw::c_int);
}
extern "C" {
    pub fn SFX_StopCrowd();
}
extern "C" {
    pub fn SFX_StopAllFighterSFX(fighter_data: *mut FighterData);
}
extern "C" {
    pub fn Music_Play(hpsID: ::std::os::raw::c_int);
}
extern "C" {
    pub fn DevelopMode_ResetCursorXY(
        text: *mut DevText,
        x: ::std::os::raw::c_int,
        y: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Develop_UpdateMatchHotkeys();
}
extern "C" {
    pub fn Wind_Create(pos: *mut Vec3, radius: ::std::os::raw::c_int, x: f32, y: f32, z: f32);
}
extern "C" {
    pub fn Wind_StageCreate(
        pos: *mut Vec3,
        duration: ::std::os::raw::c_int,
        radius: f32,
        lifetime: f32,
        angle: f32,
    );
}
extern "C" {
    pub fn Wind_FighterCreate(
        pos: *mut Vec3,
        duration: ::std::os::raw::c_int,
        radius: f32,
        lifetime: f32,
        angle: f32,
    );
}
extern "C" {
    pub fn Pause_CheckStatus(type_: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct itData {
    pub x0: ::std::os::raw::c_int,
    pub param_ext: *mut f32,
    pub archive: *mut ::std::os::raw::c_void,
    pub animFlags: *mut ::std::os::raw::c_void,
    pub animDynamics: *mut ::std::os::raw::c_void,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1C: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_int,
    pub x28: ::std::os::raw::c_int,
    pub dynamics: ::std::os::raw::c_int,
    pub hurtbox: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3C: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub coll: ::std::os::raw::c_int,
    pub items: *mut ::std::os::raw::c_int,
    pub x4C: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub boneLookup: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_itData() {
    assert_eq!(
        ::std::mem::size_of::<itData>(),
        120usize,
        concat!("Size of: ", stringify!(itData))
    );
    assert_eq!(
        ::std::mem::align_of::<itData>(),
        8usize,
        concat!("Alignment of ", stringify!(itData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).param_ext as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(param_ext)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).archive as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(archive)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).animFlags as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(animFlags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).animDynamics as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(animDynamics)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x14 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x18 as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x1C as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x1C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x20 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x24 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x28 as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).dynamics as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(dynamics)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).hurtbox as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(hurtbox)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x34 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x38 as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x3C as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x3C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x40 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).coll as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(coll)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).items as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(items)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x4C as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x4C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x50 as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).x54 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itData>())).boneLookup as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(itData),
            "::",
            stringify!(boneLookup)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct itCommonAttr {
    pub flags1: ::std::os::raw::c_char,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub flags4: ::std::os::raw::c_char,
    pub x4: ::std::os::raw::c_int,
    pub x8: ::std::os::raw::c_int,
    pub spinVelocity: f32,
    pub fallSpeed: f32,
    pub maxFallSpeed: f32,
    pub x18: f32,
    pub x1C: f32,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_int,
    pub x28: ::std::os::raw::c_int,
    pub x2c: ::std::os::raw::c_int,
    pub x30: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3c: ::std::os::raw::c_int,
    pub ecb_top: f32,
    pub ecb_bot: f32,
    pub ecb_right: f32,
    pub ecb_left: f32,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8c: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_itCommonAttr() {
    assert_eq!(
        ::std::mem::size_of::<itCommonAttr>(),
        160usize,
        concat!("Size of: ", stringify!(itCommonAttr))
    );
    assert_eq!(
        ::std::mem::align_of::<itCommonAttr>(),
        4usize,
        concat!("Alignment of ", stringify!(itCommonAttr))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).flags1 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(flags1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).flags4 as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(flags4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).spinVelocity as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(spinVelocity)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).fallSpeed as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(fallSpeed)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).maxFallSpeed as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(maxFallSpeed)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x18 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x1C as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x1C)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x20 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x24 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x28 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x2c as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x30 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x34 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x38 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x3c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).ecb_top as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(ecb_top)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).ecb_bot as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(ecb_bot)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).ecb_right as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(ecb_right)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).ecb_left as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(ecb_left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x50 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x54 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x58 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x5c as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x60 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x64 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x68 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x6c as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x70 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x74 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x78 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x7c as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x80 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x84 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x88 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x8c as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x90 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x94 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x98 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itCommonAttr>())).x9c as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(itCommonAttr),
            "::",
            stringify!(x9c)
        )
    );
}
impl itCommonAttr {
    #[inline]
    pub fn x1_1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x1_1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x1_2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x1_2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x1_3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x1_3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x1_4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x1_4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x1_5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x1_5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn cam_kind(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 2u8) as u8) }
    }
    #[inline]
    pub fn set_cam_kind(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 2u8, val as u64)
        }
    }
    #[inline]
    pub fn x1_8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x1_8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        x1_1: ::std::os::raw::c_uchar,
        x1_2: ::std::os::raw::c_uchar,
        x1_3: ::std::os::raw::c_uchar,
        x1_4: ::std::os::raw::c_uchar,
        x1_5: ::std::os::raw::c_uchar,
        cam_kind: ::std::os::raw::c_uchar,
        x1_8: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x1_1: u8 = unsafe { ::std::mem::transmute(x1_1) };
            x1_1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x1_2: u8 = unsafe { ::std::mem::transmute(x1_2) };
            x1_2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let x1_3: u8 = unsafe { ::std::mem::transmute(x1_3) };
            x1_3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let x1_4: u8 = unsafe { ::std::mem::transmute(x1_4) };
            x1_4 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let x1_5: u8 = unsafe { ::std::mem::transmute(x1_5) };
            x1_5 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 2u8, {
            let cam_kind: u8 = unsafe { ::std::mem::transmute(cam_kind) };
            cam_kind as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let x1_8: u8 = unsafe { ::std::mem::transmute(x1_8) };
            x1_8 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ItemState {
    pub state: ::std::os::raw::c_int,
    pub animCallback: *mut ::std::os::raw::c_void,
    pub physCallback: *mut ::std::os::raw::c_void,
    pub collCallback: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_ItemState() {
    assert_eq!(
        ::std::mem::size_of::<ItemState>(),
        32usize,
        concat!("Size of: ", stringify!(ItemState))
    );
    assert_eq!(
        ::std::mem::align_of::<ItemState>(),
        8usize,
        concat!("Alignment of ", stringify!(ItemState))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemState>())).state as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemState),
            "::",
            stringify!(state)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemState>())).animCallback as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemState),
            "::",
            stringify!(animCallback)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemState>())).physCallback as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemState),
            "::",
            stringify!(physCallback)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemState>())).collCallback as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemState),
            "::",
            stringify!(collCallback)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SpawnItem {
    pub parent_gobj: *mut GOBJ,
    pub parent_gobj2: *mut GOBJ,
    pub it_kind: ::std::os::raw::c_int,
    pub hold_kind: ::std::os::raw::c_int,
    pub unk2: ::std::os::raw::c_int,
    pub pos: Vec3,
    pub pos2: Vec3,
    pub vel: Vec3,
    pub facing_direction: f32,
    pub damage: ::std::os::raw::c_short,
    pub unk5: ::std::os::raw::c_short,
    pub unk6: ::std::os::raw::c_int,
    pub unk7: ::std::os::raw::c_char,
    pub is_spin: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_SpawnItem() {
    assert_eq!(
        ::std::mem::size_of::<SpawnItem>(),
        88usize,
        concat!("Size of: ", stringify!(SpawnItem))
    );
    assert_eq!(
        ::std::mem::align_of::<SpawnItem>(),
        8usize,
        concat!("Alignment of ", stringify!(SpawnItem))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).parent_gobj as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(parent_gobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).parent_gobj2 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(parent_gobj2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).it_kind as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(it_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).hold_kind as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(hold_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).unk2 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(unk2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).pos as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).pos2 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(pos2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).vel as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(vel)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).facing_direction as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(facing_direction)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).damage as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(damage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).unk5 as *const _ as usize },
        70usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(unk5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).unk6 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(unk6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).unk7 as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(unk7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SpawnItem>())).is_spin as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(SpawnItem),
            "::",
            stringify!(is_spin)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct itHit {
    pub active: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub dmg: ::std::os::raw::c_int,
    pub dmg_f: f32,
    pub offset: Vec3,
    pub size: f32,
    pub angle: ::std::os::raw::c_int,
    pub kb_growth: ::std::os::raw::c_int,
    pub wdsk: ::std::os::raw::c_int,
    pub kb: ::std::os::raw::c_int,
    pub attribute: ::std::os::raw::c_int,
    pub shield_dmg: ::std::os::raw::c_int,
    pub hitsound_severity: ::std::os::raw::c_int,
    pub hitsound_kind: ::std::os::raw::c_int,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub x41: ::std::os::raw::c_char,
    pub _bitfield_2: __BindgenBitfieldUnit<[u8; 2usize], u8>,
    pub x44: ::std::os::raw::c_int,
    pub bone: *mut JOBJ,
    pub pos: Vec3,
    pub pos_prev: Vec3,
    pub pos_coll: Vec3,
    pub coll_distance: f32,
    pub victim: *mut GOBJ,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8c: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa4: ::std::os::raw::c_int,
    pub xa8: ::std::os::raw::c_int,
    pub xac: ::std::os::raw::c_int,
    pub xb0: ::std::os::raw::c_int,
    pub xb4: ::std::os::raw::c_int,
    pub xb8: ::std::os::raw::c_int,
    pub xbc: ::std::os::raw::c_int,
    pub xc0: ::std::os::raw::c_int,
    pub xc4: ::std::os::raw::c_int,
    pub xc8: ::std::os::raw::c_int,
    pub xcc: ::std::os::raw::c_int,
    pub xd0: ::std::os::raw::c_int,
    pub xd4: ::std::os::raw::c_int,
    pub xd8: ::std::os::raw::c_int,
    pub xdc: ::std::os::raw::c_int,
    pub xe0: ::std::os::raw::c_int,
    pub xe4: ::std::os::raw::c_int,
    pub xe8: ::std::os::raw::c_int,
    pub xec: ::std::os::raw::c_int,
    pub xf0: ::std::os::raw::c_int,
    pub xf4: ::std::os::raw::c_int,
    pub xf8: ::std::os::raw::c_int,
    pub xfc: ::std::os::raw::c_int,
    pub x100: ::std::os::raw::c_int,
    pub x104: ::std::os::raw::c_int,
    pub x108: ::std::os::raw::c_int,
    pub x10c: ::std::os::raw::c_int,
    pub x110: ::std::os::raw::c_int,
    pub x114: ::std::os::raw::c_int,
    pub x118: ::std::os::raw::c_int,
    pub x11c: ::std::os::raw::c_int,
    pub x120: ::std::os::raw::c_int,
    pub x124: ::std::os::raw::c_int,
    pub x128: ::std::os::raw::c_int,
    pub x12c: ::std::os::raw::c_int,
    pub x130: ::std::os::raw::c_int,
    pub x134: ::std::os::raw::c_int,
    pub x138: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_itHit() {
    assert_eq!(
        ::std::mem::size_of::<itHit>(),
        328usize,
        concat!("Size of: ", stringify!(itHit))
    );
    assert_eq!(
        ::std::mem::align_of::<itHit>(),
        8usize,
        concat!("Alignment of ", stringify!(itHit))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).active as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(active)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x4 as *const _ as usize },
        4usize,
        concat!("Offset of field: ", stringify!(itHit), "::", stringify!(x4))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).dmg as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(dmg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).dmg_f as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(dmg_f)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).offset as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).size as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).angle as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(angle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).kb_growth as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(kb_growth)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).wdsk as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(wdsk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).kb as *const _ as usize },
        44usize,
        concat!("Offset of field: ", stringify!(itHit), "::", stringify!(kb))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).attribute as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(attribute)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).shield_dmg as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(shield_dmg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).hitsound_severity as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(hitsound_severity)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).hitsound_kind as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(hitsound_kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x41 as *const _ as usize },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x41)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x44 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).bone as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(bone)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).pos as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).pos_prev as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(pos_prev)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).pos_coll as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(pos_coll)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).coll_distance as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(coll_distance)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).victim as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(victim)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x78 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x7c as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x80 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x84 as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x88 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x8c as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x90 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x94 as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x98 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x9c as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xa0 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xa4 as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xa8 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xac as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xb0 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xb4 as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xb8 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xbc as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xc0 as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xc4 as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xc8 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xcc as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xd0 as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xd4 as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xd8 as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xdc as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xe0 as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xe4 as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xe8 as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xec as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xf0 as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xf4 as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xf8 as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).xfc as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(xfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x100 as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x104 as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x108 as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x10c as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x10c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x110 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x114 as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x118 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x11c as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x11c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x120 as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x124 as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x128 as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x12c as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x12c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x130 as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x134 as *const _ as usize },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<itHit>())).x138 as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(itHit),
            "::",
            stringify!(x138)
        )
    );
}
impl itHit {
    #[inline]
    pub fn x401(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x401(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x402(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x402(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hit_air(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hit_air(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hit_ground(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hit_ground(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x405(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x405(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x406(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x406(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x407(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x407(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x408(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x408(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        x401: ::std::os::raw::c_uchar,
        x402: ::std::os::raw::c_uchar,
        hit_air: ::std::os::raw::c_uchar,
        hit_ground: ::std::os::raw::c_uchar,
        x405: ::std::os::raw::c_uchar,
        x406: ::std::os::raw::c_uchar,
        x407: ::std::os::raw::c_uchar,
        x408: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x401: u8 = unsafe { ::std::mem::transmute(x401) };
            x401 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x402: u8 = unsafe { ::std::mem::transmute(x402) };
            x402 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let hit_air: u8 = unsafe { ::std::mem::transmute(hit_air) };
            hit_air as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let hit_ground: u8 = unsafe { ::std::mem::transmute(hit_ground) };
            hit_ground as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let x405: u8 = unsafe { ::std::mem::transmute(x405) };
            x405 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let x406: u8 = unsafe { ::std::mem::transmute(x406) };
            x406 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let x407: u8 = unsafe { ::std::mem::transmute(x407) };
            x407 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let x408: u8 = unsafe { ::std::mem::transmute(x408) };
            x408 as u64
        });
        __bindgen_bitfield_unit
    }
    #[inline]
    pub fn x421(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x421(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x422(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x422(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hit_facing(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hit_facing(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x424(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x424(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn no_hurt(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_no_hurt(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn no_reflect(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_no_reflect(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x427(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x427(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x428(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x428(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x431(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(8usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x431(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(8usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x432(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(9usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x432(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(9usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn hit_all(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(10usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_hit_all(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(10usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x434(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(11usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x434(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(11usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x435(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(12usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x435(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(12usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x436(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(13usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x436(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(13usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x437(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(14usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x437(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(14usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn x438(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(15usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_x438(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(15usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_2(
        x421: ::std::os::raw::c_uchar,
        x422: ::std::os::raw::c_uchar,
        hit_facing: ::std::os::raw::c_uchar,
        x424: ::std::os::raw::c_uchar,
        no_hurt: ::std::os::raw::c_uchar,
        no_reflect: ::std::os::raw::c_uchar,
        x427: ::std::os::raw::c_uchar,
        x428: ::std::os::raw::c_uchar,
        x431: ::std::os::raw::c_uchar,
        x432: ::std::os::raw::c_uchar,
        hit_all: ::std::os::raw::c_uchar,
        x434: ::std::os::raw::c_uchar,
        x435: ::std::os::raw::c_uchar,
        x436: ::std::os::raw::c_uchar,
        x437: ::std::os::raw::c_uchar,
        x438: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 2usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 2usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let x421: u8 = unsafe { ::std::mem::transmute(x421) };
            x421 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let x422: u8 = unsafe { ::std::mem::transmute(x422) };
            x422 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let hit_facing: u8 = unsafe { ::std::mem::transmute(hit_facing) };
            hit_facing as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let x424: u8 = unsafe { ::std::mem::transmute(x424) };
            x424 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let no_hurt: u8 = unsafe { ::std::mem::transmute(no_hurt) };
            no_hurt as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let no_reflect: u8 = unsafe { ::std::mem::transmute(no_reflect) };
            no_reflect as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let x427: u8 = unsafe { ::std::mem::transmute(x427) };
            x427 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let x428: u8 = unsafe { ::std::mem::transmute(x428) };
            x428 as u64
        });
        __bindgen_bitfield_unit.set(8usize, 1u8, {
            let x431: u8 = unsafe { ::std::mem::transmute(x431) };
            x431 as u64
        });
        __bindgen_bitfield_unit.set(9usize, 1u8, {
            let x432: u8 = unsafe { ::std::mem::transmute(x432) };
            x432 as u64
        });
        __bindgen_bitfield_unit.set(10usize, 1u8, {
            let hit_all: u8 = unsafe { ::std::mem::transmute(hit_all) };
            hit_all as u64
        });
        __bindgen_bitfield_unit.set(11usize, 1u8, {
            let x434: u8 = unsafe { ::std::mem::transmute(x434) };
            x434 as u64
        });
        __bindgen_bitfield_unit.set(12usize, 1u8, {
            let x435: u8 = unsafe { ::std::mem::transmute(x435) };
            x435 as u64
        });
        __bindgen_bitfield_unit.set(13usize, 1u8, {
            let x436: u8 = unsafe { ::std::mem::transmute(x436) };
            x436 as u64
        });
        __bindgen_bitfield_unit.set(14usize, 1u8, {
            let x437: u8 = unsafe { ::std::mem::transmute(x437) };
            x437 as u64
        });
        __bindgen_bitfield_unit.set(15usize, 1u8, {
            let x438: u8 = unsafe { ::std::mem::transmute(x438) };
            x438 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ItemData {
    pub x0: ::std::os::raw::c_int,
    pub item: *mut GOBJ,
    pub x8: ::std::os::raw::c_int,
    pub spawnType: ::std::os::raw::c_int,
    pub itemID: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub stateID: ::std::os::raw::c_int,
    pub x28: ::std::os::raw::c_int,
    pub facing_direction: f32,
    pub x30: ::std::os::raw::c_int,
    pub spinUnk: f32,
    pub scale: f32,
    pub x3c: ::std::os::raw::c_int,
    pub self_vel: Vec3,
    pub pos: Vec3,
    pub unkVel: Vec3,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub nudgeVel: Vec3,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8c: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa4: ::std::os::raw::c_int,
    pub xa8: ::std::os::raw::c_int,
    pub xac: ::std::os::raw::c_int,
    pub xb0: ::std::os::raw::c_int,
    pub xb4: ::std::os::raw::c_int,
    pub it_cb: *mut ::std::os::raw::c_void,
    pub itemStates: *mut ItemState,
    pub isRotate: ::std::os::raw::c_int,
    pub itData: *mut itData,
    pub joint: *mut JOBJ,
    pub itemAttributes: *mut itCommonAttr,
    pub xd0: ::std::os::raw::c_int,
    pub xd4: ::std::os::raw::c_int,
    pub xd8: ::std::os::raw::c_int,
    pub xdc: ::std::os::raw::c_int,
    pub xe0: ::std::os::raw::c_int,
    pub xe4: ::std::os::raw::c_int,
    pub xe8: ::std::os::raw::c_int,
    pub xec: ::std::os::raw::c_int,
    pub xf0: ::std::os::raw::c_int,
    pub xf4: ::std::os::raw::c_int,
    pub xf8: ::std::os::raw::c_int,
    pub xfc: ::std::os::raw::c_int,
    pub x100: ::std::os::raw::c_int,
    pub x104: ::std::os::raw::c_int,
    pub x108: ::std::os::raw::c_int,
    pub x10c: ::std::os::raw::c_int,
    pub x110: ::std::os::raw::c_int,
    pub x114: ::std::os::raw::c_int,
    pub x118: ::std::os::raw::c_int,
    pub x11c: ::std::os::raw::c_int,
    pub x120: ::std::os::raw::c_int,
    pub x124: ::std::os::raw::c_int,
    pub x128: ::std::os::raw::c_int,
    pub x12c: ::std::os::raw::c_int,
    pub x130: ::std::os::raw::c_int,
    pub x134: ::std::os::raw::c_int,
    pub x138: ::std::os::raw::c_int,
    pub x13c: ::std::os::raw::c_int,
    pub x140: ::std::os::raw::c_int,
    pub x144: ::std::os::raw::c_int,
    pub x148: ::std::os::raw::c_int,
    pub x14c: ::std::os::raw::c_int,
    pub x150: ::std::os::raw::c_int,
    pub x154: ::std::os::raw::c_int,
    pub x158: ::std::os::raw::c_int,
    pub x15c: ::std::os::raw::c_int,
    pub x160: ::std::os::raw::c_int,
    pub x164: ::std::os::raw::c_int,
    pub x168: ::std::os::raw::c_int,
    pub x16c: ::std::os::raw::c_int,
    pub x170: ::std::os::raw::c_int,
    pub x174: ::std::os::raw::c_int,
    pub x178: ::std::os::raw::c_int,
    pub x17c: ::std::os::raw::c_int,
    pub x180: ::std::os::raw::c_int,
    pub x184: ::std::os::raw::c_int,
    pub x188: ::std::os::raw::c_int,
    pub x18c: ::std::os::raw::c_int,
    pub x190: ::std::os::raw::c_int,
    pub x194: ::std::os::raw::c_int,
    pub x198: ::std::os::raw::c_int,
    pub x19c: ::std::os::raw::c_int,
    pub x1a0: ::std::os::raw::c_int,
    pub x1a4: ::std::os::raw::c_int,
    pub x1a8: ::std::os::raw::c_int,
    pub x1ac: ::std::os::raw::c_int,
    pub x1b0: ::std::os::raw::c_int,
    pub x1b4: ::std::os::raw::c_int,
    pub x1b8: ::std::os::raw::c_int,
    pub x1bc: ::std::os::raw::c_int,
    pub x1c0: ::std::os::raw::c_int,
    pub x1c4: ::std::os::raw::c_int,
    pub x1c8: ::std::os::raw::c_int,
    pub x1cc: ::std::os::raw::c_int,
    pub x1d0: ::std::os::raw::c_int,
    pub x1d4: ::std::os::raw::c_int,
    pub x1d8: ::std::os::raw::c_int,
    pub x1dc: ::std::os::raw::c_int,
    pub x1e0: ::std::os::raw::c_int,
    pub x1e4: ::std::os::raw::c_int,
    pub x1e8: ::std::os::raw::c_int,
    pub x1ec: ::std::os::raw::c_int,
    pub x1f0: ::std::os::raw::c_int,
    pub x1f4: ::std::os::raw::c_int,
    pub x1f8: ::std::os::raw::c_int,
    pub x1fc: ::std::os::raw::c_int,
    pub x200: ::std::os::raw::c_int,
    pub x204: ::std::os::raw::c_int,
    pub x208: ::std::os::raw::c_int,
    pub x20c: ::std::os::raw::c_int,
    pub x210: ::std::os::raw::c_int,
    pub x214: ::std::os::raw::c_int,
    pub x218: ::std::os::raw::c_int,
    pub x21c: ::std::os::raw::c_int,
    pub x220: ::std::os::raw::c_int,
    pub x224: ::std::os::raw::c_int,
    pub x228: ::std::os::raw::c_int,
    pub x22c: ::std::os::raw::c_int,
    pub x230: ::std::os::raw::c_int,
    pub x234: ::std::os::raw::c_int,
    pub x238: ::std::os::raw::c_int,
    pub x23c: ::std::os::raw::c_int,
    pub x240: ::std::os::raw::c_int,
    pub x244: ::std::os::raw::c_int,
    pub x248: ::std::os::raw::c_int,
    pub x24c: ::std::os::raw::c_int,
    pub x250: ::std::os::raw::c_int,
    pub x254: ::std::os::raw::c_int,
    pub x258: ::std::os::raw::c_int,
    pub x25c: ::std::os::raw::c_int,
    pub x260: ::std::os::raw::c_int,
    pub x264: ::std::os::raw::c_int,
    pub x268: ::std::os::raw::c_int,
    pub x26c: ::std::os::raw::c_int,
    pub x270: ::std::os::raw::c_int,
    pub x274: ::std::os::raw::c_int,
    pub x278: ::std::os::raw::c_int,
    pub x27c: ::std::os::raw::c_int,
    pub x280: ::std::os::raw::c_int,
    pub x284: ::std::os::raw::c_int,
    pub x288: ::std::os::raw::c_int,
    pub x28c: ::std::os::raw::c_int,
    pub x290: ::std::os::raw::c_int,
    pub x294: ::std::os::raw::c_int,
    pub x298: ::std::os::raw::c_int,
    pub x29c: ::std::os::raw::c_int,
    pub x2a0: ::std::os::raw::c_int,
    pub x2a4: ::std::os::raw::c_int,
    pub x2a8: ::std::os::raw::c_int,
    pub x2ac: ::std::os::raw::c_int,
    pub x2b0: ::std::os::raw::c_int,
    pub x2b4: ::std::os::raw::c_int,
    pub x2b8: ::std::os::raw::c_int,
    pub x2bc: ::std::os::raw::c_int,
    pub x2c0: ::std::os::raw::c_int,
    pub x2c4: ::std::os::raw::c_int,
    pub x2c8: ::std::os::raw::c_int,
    pub x2cc: ::std::os::raw::c_int,
    pub x2d0: ::std::os::raw::c_int,
    pub x2d4: ::std::os::raw::c_int,
    pub x2d8: ::std::os::raw::c_int,
    pub x2dc: ::std::os::raw::c_int,
    pub x2e0: ::std::os::raw::c_int,
    pub x2e4: ::std::os::raw::c_int,
    pub x2e8: ::std::os::raw::c_int,
    pub x2ec: ::std::os::raw::c_int,
    pub x2f0: ::std::os::raw::c_int,
    pub x2f4: ::std::os::raw::c_int,
    pub x2f8: ::std::os::raw::c_int,
    pub x2fc: ::std::os::raw::c_int,
    pub x300: ::std::os::raw::c_int,
    pub x304: ::std::os::raw::c_int,
    pub x308: ::std::os::raw::c_int,
    pub x30c: ::std::os::raw::c_int,
    pub x310: ::std::os::raw::c_int,
    pub x314: ::std::os::raw::c_int,
    pub x318: ::std::os::raw::c_int,
    pub x31c: ::std::os::raw::c_int,
    pub x320: ::std::os::raw::c_int,
    pub x324: ::std::os::raw::c_int,
    pub x328: ::std::os::raw::c_int,
    pub x32c: ::std::os::raw::c_int,
    pub x330: ::std::os::raw::c_int,
    pub x334: ::std::os::raw::c_int,
    pub x338: ::std::os::raw::c_int,
    pub x33c: ::std::os::raw::c_int,
    pub x340: ::std::os::raw::c_int,
    pub x344: ::std::os::raw::c_int,
    pub x348: ::std::os::raw::c_int,
    pub x34c: ::std::os::raw::c_int,
    pub x350: ::std::os::raw::c_int,
    pub x354: ::std::os::raw::c_int,
    pub x358: ::std::os::raw::c_int,
    pub x35c: ::std::os::raw::c_int,
    pub x360: ::std::os::raw::c_int,
    pub x364: ::std::os::raw::c_int,
    pub x368: ::std::os::raw::c_int,
    pub x36c: ::std::os::raw::c_int,
    pub x370: ::std::os::raw::c_int,
    pub x374: ::std::os::raw::c_int,
    pub coll_data: CollData,
    pub fighter: *mut FighterData,
    pub x51c: ::std::os::raw::c_int,
    pub camerabox: *mut CameraBox,
    pub x524: ::std::os::raw::c_int,
    pub x528: ::std::os::raw::c_int,
    pub script_parse: *mut ::std::os::raw::c_int,
    pub x530: ::std::os::raw::c_int,
    pub x534: ::std::os::raw::c_int,
    pub x538: ::std::os::raw::c_int,
    pub x53c: ::std::os::raw::c_int,
    pub x540: ::std::os::raw::c_int,
    pub x544: ::std::os::raw::c_int,
    pub color: ColorOverlay,
    pub x5c8: ::std::os::raw::c_int,
    pub x5cc: ::std::os::raw::c_int,
    pub x5d0: ::std::os::raw::c_int,
    pub hitbox: [itHit; 4usize],
    pub xac4: ::std::os::raw::c_int,
    pub xac8: ::std::os::raw::c_int,
    pub hurt_status: ::std::os::raw::c_int,
    pub xad0: ::std::os::raw::c_int,
    pub xad4: ::std::os::raw::c_int,
    pub xad8: ::std::os::raw::c_int,
    pub xadc: ::std::os::raw::c_int,
    pub xae0: ::std::os::raw::c_int,
    pub xae4: ::std::os::raw::c_int,
    pub xae8: ::std::os::raw::c_int,
    pub xaec: ::std::os::raw::c_int,
    pub xaf0: ::std::os::raw::c_int,
    pub xaf4: ::std::os::raw::c_int,
    pub xaf8: ::std::os::raw::c_int,
    pub xafc: ::std::os::raw::c_int,
    pub xb00: ::std::os::raw::c_int,
    pub xb04: ::std::os::raw::c_int,
    pub xb08: ::std::os::raw::c_int,
    pub xb0c: ::std::os::raw::c_int,
    pub xb10: ::std::os::raw::c_int,
    pub xb14: ::std::os::raw::c_int,
    pub xb18: ::std::os::raw::c_int,
    pub xb1c: ::std::os::raw::c_int,
    pub xb20: ::std::os::raw::c_int,
    pub xb24: ::std::os::raw::c_int,
    pub xb28: ::std::os::raw::c_int,
    pub xb2c: ::std::os::raw::c_int,
    pub xb30: ::std::os::raw::c_int,
    pub xb34: ::std::os::raw::c_int,
    pub xb38: ::std::os::raw::c_int,
    pub xb3c: ::std::os::raw::c_int,
    pub xb40: ::std::os::raw::c_int,
    pub xb44: ::std::os::raw::c_int,
    pub xb48: ::std::os::raw::c_int,
    pub xb4c: ::std::os::raw::c_int,
    pub xb50: ::std::os::raw::c_int,
    pub xb54: ::std::os::raw::c_int,
    pub xb58: ::std::os::raw::c_int,
    pub xb5c: ::std::os::raw::c_int,
    pub xb60: ::std::os::raw::c_int,
    pub xb64: ::std::os::raw::c_int,
    pub xb68: ::std::os::raw::c_int,
    pub xb6c: ::std::os::raw::c_int,
    pub xb70: ::std::os::raw::c_int,
    pub xb74: ::std::os::raw::c_int,
    pub xb78: ::std::os::raw::c_int,
    pub xb7c: ::std::os::raw::c_int,
    pub xb80: ::std::os::raw::c_int,
    pub xb84: ::std::os::raw::c_int,
    pub xb88: ::std::os::raw::c_int,
    pub xb8c: ::std::os::raw::c_int,
    pub xb90: ::std::os::raw::c_int,
    pub xb94: ::std::os::raw::c_int,
    pub xb98: ::std::os::raw::c_int,
    pub xb9c: ::std::os::raw::c_int,
    pub xba0: ::std::os::raw::c_int,
    pub xba4: ::std::os::raw::c_int,
    pub xba8: ::std::os::raw::c_int,
    pub xbac: ::std::os::raw::c_int,
    pub xbb0: ::std::os::raw::c_int,
    pub xbb4: ::std::os::raw::c_int,
    pub xbb8: ::std::os::raw::c_int,
    pub xbbc: ::std::os::raw::c_int,
    pub xbc0: ::std::os::raw::c_int,
    pub xbc4: ::std::os::raw::c_int,
    pub xbc8: ::std::os::raw::c_int,
    pub xbcc: ::std::os::raw::c_int,
    pub xbd0: ::std::os::raw::c_int,
    pub xbd4: ::std::os::raw::c_int,
    pub xbd8: ::std::os::raw::c_int,
    pub xbdc: ::std::os::raw::c_int,
    pub xbe0: ::std::os::raw::c_int,
    pub xbe4: ::std::os::raw::c_int,
    pub xbe8: ::std::os::raw::c_int,
    pub xbec: ::std::os::raw::c_int,
    pub xbf0: ::std::os::raw::c_int,
    pub xbf4: ::std::os::raw::c_int,
    pub xbf8: ::std::os::raw::c_int,
    pub xbfc: ::std::os::raw::c_int,
    pub xc00: ::std::os::raw::c_int,
    pub xc04: ::std::os::raw::c_int,
    pub xc08: ::std::os::raw::c_int,
    pub xc0c: ::std::os::raw::c_int,
    pub xc10: ::std::os::raw::c_int,
    pub xc14: ::std::os::raw::c_int,
    pub xc18: ::std::os::raw::c_int,
    pub ecb_top: f32,
    pub ecb_bottom: f32,
    pub ecb_right: f32,
    pub ecb_left: f32,
    pub xc2c: ::std::os::raw::c_int,
    pub xc30: ::std::os::raw::c_int,
    pub xc34: ::std::os::raw::c_int,
    pub xc38: ::std::os::raw::c_int,
    pub xc3c: ::std::os::raw::c_int,
    pub xc40: ::std::os::raw::c_int,
    pub xc44: ::std::os::raw::c_int,
    pub xc48: ::std::os::raw::c_int,
    pub xc4c: ::std::os::raw::c_int,
    pub xc50: ::std::os::raw::c_int,
    pub xc54: ::std::os::raw::c_int,
    pub xc58: ::std::os::raw::c_int,
    pub xc5c: ::std::os::raw::c_int,
    pub xc60: ::std::os::raw::c_int,
    pub xc64: ::std::os::raw::c_int,
    pub xc68: ::std::os::raw::c_int,
    pub xc6c: ::std::os::raw::c_int,
    pub xc70: ::std::os::raw::c_int,
    pub xc74: ::std::os::raw::c_int,
    pub xc78: ::std::os::raw::c_int,
    pub xc7c: ::std::os::raw::c_int,
    pub xc80: ::std::os::raw::c_int,
    pub xc84: ::std::os::raw::c_int,
    pub xc88: ::std::os::raw::c_int,
    pub xc8c: ::std::os::raw::c_int,
    pub xc90: ::std::os::raw::c_int,
    pub xc94: ::std::os::raw::c_int,
    pub xc98: ::std::os::raw::c_int,
    pub dmg_total: ::std::os::raw::c_int,
    pub dmg_recent: ::std::os::raw::c_int,
    pub xca4: ::std::os::raw::c_int,
    pub xca8: ::std::os::raw::c_int,
    pub dmg_angle: ::std::os::raw::c_int,
    pub xcb0: ::std::os::raw::c_int,
    pub xcb4: ::std::os::raw::c_int,
    pub xcb8: ::std::os::raw::c_int,
    pub xcbc: ::std::os::raw::c_int,
    pub xcc0: ::std::os::raw::c_int,
    pub xcc4: ::std::os::raw::c_int,
    pub dmg_kb: f32,
    pub dmg_direction: f32,
    pub xcd0: ::std::os::raw::c_int,
    pub xcd4: ::std::os::raw::c_int,
    pub xcd8: ::std::os::raw::c_int,
    pub xcdc: ::std::os::raw::c_int,
    pub xce0: ::std::os::raw::c_int,
    pub xce4: ::std::os::raw::c_int,
    pub xce8: ::std::os::raw::c_int,
    pub dmgsource_fighter: *mut GOBJ,
    pub dmgsource_item: *mut GOBJ,
    pub xcf4: ::std::os::raw::c_int,
    pub xcf8: ::std::os::raw::c_int,
    pub xcfc: ::std::os::raw::c_int,
    pub grabbedFighter: *mut GOBJ,
    pub xd04: ::std::os::raw::c_int,
    pub xd08: ::std::os::raw::c_int,
    pub xd0c: ::std::os::raw::c_int,
    pub xd10: ::std::os::raw::c_int,
    pub cb: ItemData__bindgen_ty_1,
    pub rotateSpeed: f32,
    pub xd40: ::std::os::raw::c_int,
    pub lifetime: f32,
    pub xd48: ::std::os::raw::c_int,
    pub xd4c: ::std::os::raw::c_int,
    pub xd50: ::std::os::raw::c_int,
    pub xd54: ::std::os::raw::c_int,
    pub xd58: ::std::os::raw::c_int,
    pub xd5c: ::std::os::raw::c_int,
    pub xd60: ::std::os::raw::c_int,
    pub xd64: ::std::os::raw::c_int,
    pub xd68: ::std::os::raw::c_int,
    pub xd6c: ::std::os::raw::c_int,
    pub xd70: ::std::os::raw::c_int,
    pub xd74: ::std::os::raw::c_int,
    pub xd78: ::std::os::raw::c_int,
    pub xd7c: ::std::os::raw::c_int,
    pub xd80: ::std::os::raw::c_int,
    pub xd84: ::std::os::raw::c_int,
    pub xd88: ::std::os::raw::c_int,
    pub xd8c: ::std::os::raw::c_int,
    pub xd90: ::std::os::raw::c_int,
    pub xd94: ::std::os::raw::c_int,
    pub xd98: ::std::os::raw::c_int,
    pub xd9c: ::std::os::raw::c_int,
    pub xda0: ::std::os::raw::c_int,
    pub xda4: ::std::os::raw::c_int,
    pub xda8: ::std::os::raw::c_char,
    pub xda9: ::std::os::raw::c_char,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize], u8>,
    pub xdab: ::std::os::raw::c_char,
    pub scriptFlag1: ::std::os::raw::c_int,
    pub scriptFlag2: ::std::os::raw::c_int,
    pub scriptFlag3: ::std::os::raw::c_int,
    pub xdb8: ::std::os::raw::c_int,
    pub scriptFlag4: ::std::os::raw::c_int,
    pub xdc0: ::std::os::raw::c_int,
    pub xdc4: ::std::os::raw::c_int,
    pub _bitfield_2: __BindgenBitfieldUnit<[u8; 8usize], u16>,
    pub xdd0: ::std::os::raw::c_int,
    pub itemVar1: ::std::os::raw::c_int,
    pub itemVar2: ::std::os::raw::c_int,
    pub itemVar3: ::std::os::raw::c_int,
    pub itemVar4: ::std::os::raw::c_int,
    pub itemVar5: ::std::os::raw::c_int,
    pub itemVar6: ::std::os::raw::c_int,
    pub itemVar7: ::std::os::raw::c_int,
    pub itemVar8: ::std::os::raw::c_int,
    pub itemVar9: ::std::os::raw::c_int,
    pub itemVar10: ::std::os::raw::c_int,
    pub itemVar11: ::std::os::raw::c_int,
    pub itemVar12: ::std::os::raw::c_int,
    pub xe04: ::std::os::raw::c_int,
    pub xe08: ::std::os::raw::c_int,
    pub xe0c: ::std::os::raw::c_int,
    pub xe10: ::std::os::raw::c_int,
    pub xe14: ::std::os::raw::c_int,
    pub xe18: ::std::os::raw::c_int,
    pub xe1c: ::std::os::raw::c_int,
    pub xe20: ::std::os::raw::c_int,
    pub xe24: ::std::os::raw::c_int,
    pub xe28: ::std::os::raw::c_int,
    pub xe2c: ::std::os::raw::c_int,
    pub xe30: ::std::os::raw::c_int,
    pub xe34: ::std::os::raw::c_int,
    pub xe38: ::std::os::raw::c_int,
    pub xe3c: ::std::os::raw::c_int,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ItemData__bindgen_ty_1 {
    pub anim: ::std::option::Option<unsafe extern "C" fn(item: *mut GOBJ)>,
    pub phys: ::std::option::Option<unsafe extern "C" fn(item: *mut GOBJ)>,
    pub coll: ::std::option::Option<unsafe extern "C" fn(item: *mut GOBJ)>,
    pub accessory: ::std::option::Option<unsafe extern "C" fn(item: *mut GOBJ)>,
    pub xd24: *mut ::std::os::raw::c_void,
    pub xd28: *mut ::std::os::raw::c_void,
    pub xd2c: *mut ::std::os::raw::c_void,
    pub jumped_on: *mut ::std::os::raw::c_void,
    pub grabFt_onIt: *mut ::std::os::raw::c_void,
    pub grabFt_onFt: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_ItemData__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<ItemData__bindgen_ty_1>(),
        80usize,
        concat!("Size of: ", stringify!(ItemData__bindgen_ty_1))
    );
    assert_eq!(
        ::std::mem::align_of::<ItemData__bindgen_ty_1>(),
        8usize,
        concat!("Alignment of ", stringify!(ItemData__bindgen_ty_1))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData__bindgen_ty_1>())).anim as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData__bindgen_ty_1),
            "::",
            stringify!(anim)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData__bindgen_ty_1>())).phys as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData__bindgen_ty_1),
            "::",
            stringify!(phys)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData__bindgen_ty_1>())).coll as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData__bindgen_ty_1),
            "::",
            stringify!(coll)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<ItemData__bindgen_ty_1>())).accessory as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData__bindgen_ty_1),
            "::",
            stringify!(accessory)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData__bindgen_ty_1>())).xd24 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData__bindgen_ty_1),
            "::",
            stringify!(xd24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData__bindgen_ty_1>())).xd28 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData__bindgen_ty_1),
            "::",
            stringify!(xd28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData__bindgen_ty_1>())).xd2c as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData__bindgen_ty_1),
            "::",
            stringify!(xd2c)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<ItemData__bindgen_ty_1>())).jumped_on as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData__bindgen_ty_1),
            "::",
            stringify!(jumped_on)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<ItemData__bindgen_ty_1>())).grabFt_onIt as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData__bindgen_ty_1),
            "::",
            stringify!(grabFt_onIt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<ItemData__bindgen_ty_1>())).grabFt_onFt as *const _ as usize
        },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData__bindgen_ty_1),
            "::",
            stringify!(grabFt_onFt)
        )
    );
}
#[test]
fn bindgen_test_layout_ItemData() {
    assert_eq!(
        ::std::mem::size_of::<ItemData>(),
        3872usize,
        concat!("Size of: ", stringify!(ItemData))
    );
    assert_eq!(
        ::std::mem::align_of::<ItemData>(),
        8usize,
        concat!("Alignment of ", stringify!(ItemData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).item as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(item)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).spawnType as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(spawnType)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemID as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x14 as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x18 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1c as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x20 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).stateID as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(stateID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x28 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).facing_direction as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(facing_direction)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x30 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).spinUnk as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(spinUnk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).scale as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x3c as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).self_vel as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(self_vel)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).pos as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(pos)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).unkVel as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(unkVel)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x64 as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x68 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x6c as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).nudgeVel as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(nudgeVel)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x7c as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x80 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x84 as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x88 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x8c as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x90 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x94 as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x98 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x9c as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xa0 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xa4 as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xa8 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xac as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb0 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb4 as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).it_cb as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(it_cb)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemStates as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemStates)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).isRotate as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(isRotate)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itData as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itData)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).joint as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(joint)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemAttributes as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemAttributes)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd0 as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd4 as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd8 as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xdc as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe0 as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe4 as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe8 as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xec as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xf0 as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xf4 as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xf8 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xfc as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x100 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x104 as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x108 as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x10c as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x10c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x110 as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x114 as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x118 as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x11c as *const _ as usize },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x11c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x120 as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x124 as *const _ as usize },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x128 as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x12c as *const _ as usize },
        332usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x12c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x130 as *const _ as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x134 as *const _ as usize },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x138 as *const _ as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x13c as *const _ as usize },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x13c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x140 as *const _ as usize },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x144 as *const _ as usize },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x148 as *const _ as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x14c as *const _ as usize },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x14c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x150 as *const _ as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x154 as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x158 as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x15c as *const _ as usize },
        380usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x15c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x160 as *const _ as usize },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x164 as *const _ as usize },
        388usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x168 as *const _ as usize },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x16c as *const _ as usize },
        396usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x16c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x170 as *const _ as usize },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x174 as *const _ as usize },
        404usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x178 as *const _ as usize },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x17c as *const _ as usize },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x17c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x180 as *const _ as usize },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x184 as *const _ as usize },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x188 as *const _ as usize },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x18c as *const _ as usize },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x18c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x190 as *const _ as usize },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x190)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x194 as *const _ as usize },
        436usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x194)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x198 as *const _ as usize },
        440usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x198)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x19c as *const _ as usize },
        444usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x19c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1a0 as *const _ as usize },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1a4 as *const _ as usize },
        452usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1a8 as *const _ as usize },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1ac as *const _ as usize },
        460usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1b0 as *const _ as usize },
        464usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1b4 as *const _ as usize },
        468usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1b8 as *const _ as usize },
        472usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1bc as *const _ as usize },
        476usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1c0 as *const _ as usize },
        480usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1c4 as *const _ as usize },
        484usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1c8 as *const _ as usize },
        488usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1cc as *const _ as usize },
        492usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1d0 as *const _ as usize },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1d4 as *const _ as usize },
        500usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1d8 as *const _ as usize },
        504usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1dc as *const _ as usize },
        508usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1e0 as *const _ as usize },
        512usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1e4 as *const _ as usize },
        516usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1e8 as *const _ as usize },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1ec as *const _ as usize },
        524usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1f0 as *const _ as usize },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1f4 as *const _ as usize },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1f8 as *const _ as usize },
        536usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x1fc as *const _ as usize },
        540usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x1fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x200 as *const _ as usize },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x200)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x204 as *const _ as usize },
        548usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x204)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x208 as *const _ as usize },
        552usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x208)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x20c as *const _ as usize },
        556usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x20c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x210 as *const _ as usize },
        560usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x210)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x214 as *const _ as usize },
        564usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x214)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x218 as *const _ as usize },
        568usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x218)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x21c as *const _ as usize },
        572usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x21c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x220 as *const _ as usize },
        576usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x220)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x224 as *const _ as usize },
        580usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x224)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x228 as *const _ as usize },
        584usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x228)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x22c as *const _ as usize },
        588usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x22c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x230 as *const _ as usize },
        592usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x230)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x234 as *const _ as usize },
        596usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x234)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x238 as *const _ as usize },
        600usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x238)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x23c as *const _ as usize },
        604usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x23c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x240 as *const _ as usize },
        608usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x240)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x244 as *const _ as usize },
        612usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x244)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x248 as *const _ as usize },
        616usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x248)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x24c as *const _ as usize },
        620usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x24c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x250 as *const _ as usize },
        624usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x250)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x254 as *const _ as usize },
        628usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x254)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x258 as *const _ as usize },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x258)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x25c as *const _ as usize },
        636usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x25c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x260 as *const _ as usize },
        640usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x260)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x264 as *const _ as usize },
        644usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x264)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x268 as *const _ as usize },
        648usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x268)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x26c as *const _ as usize },
        652usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x26c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x270 as *const _ as usize },
        656usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x270)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x274 as *const _ as usize },
        660usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x274)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x278 as *const _ as usize },
        664usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x278)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x27c as *const _ as usize },
        668usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x27c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x280 as *const _ as usize },
        672usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x280)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x284 as *const _ as usize },
        676usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x284)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x288 as *const _ as usize },
        680usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x288)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x28c as *const _ as usize },
        684usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x28c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x290 as *const _ as usize },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x290)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x294 as *const _ as usize },
        692usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x294)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x298 as *const _ as usize },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x298)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x29c as *const _ as usize },
        700usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x29c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2a0 as *const _ as usize },
        704usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2a4 as *const _ as usize },
        708usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2a8 as *const _ as usize },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2ac as *const _ as usize },
        716usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2b0 as *const _ as usize },
        720usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2b4 as *const _ as usize },
        724usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2b8 as *const _ as usize },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2bc as *const _ as usize },
        732usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2c0 as *const _ as usize },
        736usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2c4 as *const _ as usize },
        740usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2c8 as *const _ as usize },
        744usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2cc as *const _ as usize },
        748usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2d0 as *const _ as usize },
        752usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2d4 as *const _ as usize },
        756usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2d8 as *const _ as usize },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2dc as *const _ as usize },
        764usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2e0 as *const _ as usize },
        768usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2e4 as *const _ as usize },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2e8 as *const _ as usize },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2ec as *const _ as usize },
        780usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2f0 as *const _ as usize },
        784usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2f4 as *const _ as usize },
        788usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2f8 as *const _ as usize },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x2fc as *const _ as usize },
        796usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x2fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x300 as *const _ as usize },
        800usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x300)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x304 as *const _ as usize },
        804usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x304)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x308 as *const _ as usize },
        808usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x308)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x30c as *const _ as usize },
        812usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x30c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x310 as *const _ as usize },
        816usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x310)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x314 as *const _ as usize },
        820usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x314)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x318 as *const _ as usize },
        824usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x318)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x31c as *const _ as usize },
        828usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x31c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x320 as *const _ as usize },
        832usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x320)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x324 as *const _ as usize },
        836usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x324)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x328 as *const _ as usize },
        840usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x328)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x32c as *const _ as usize },
        844usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x32c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x330 as *const _ as usize },
        848usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x330)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x334 as *const _ as usize },
        852usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x334)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x338 as *const _ as usize },
        856usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x338)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x33c as *const _ as usize },
        860usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x33c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x340 as *const _ as usize },
        864usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x340)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x344 as *const _ as usize },
        868usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x344)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x348 as *const _ as usize },
        872usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x348)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x34c as *const _ as usize },
        876usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x34c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x350 as *const _ as usize },
        880usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x350)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x354 as *const _ as usize },
        884usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x354)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x358 as *const _ as usize },
        888usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x358)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x35c as *const _ as usize },
        892usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x35c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x360 as *const _ as usize },
        896usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x360)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x364 as *const _ as usize },
        900usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x364)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x368 as *const _ as usize },
        904usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x368)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x36c as *const _ as usize },
        908usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x36c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x370 as *const _ as usize },
        912usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x370)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x374 as *const _ as usize },
        916usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x374)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).coll_data as *const _ as usize },
        920usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(coll_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).fighter as *const _ as usize },
        1376usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(fighter)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x51c as *const _ as usize },
        1384usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x51c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).camerabox as *const _ as usize },
        1392usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(camerabox)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x524 as *const _ as usize },
        1400usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x524)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x528 as *const _ as usize },
        1404usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x528)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).script_parse as *const _ as usize },
        1408usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(script_parse)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x530 as *const _ as usize },
        1416usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x530)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x534 as *const _ as usize },
        1420usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x534)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x538 as *const _ as usize },
        1424usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x538)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x53c as *const _ as usize },
        1428usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x53c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x540 as *const _ as usize },
        1432usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x540)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x544 as *const _ as usize },
        1436usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x544)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).color as *const _ as usize },
        1440usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(color)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x5c8 as *const _ as usize },
        1592usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x5c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x5cc as *const _ as usize },
        1596usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x5cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).x5d0 as *const _ as usize },
        1600usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(x5d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).hitbox as *const _ as usize },
        1608usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(hitbox)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xac4 as *const _ as usize },
        2920usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xac4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xac8 as *const _ as usize },
        2924usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xac8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).hurt_status as *const _ as usize },
        2928usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(hurt_status)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xad0 as *const _ as usize },
        2932usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xad0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xad4 as *const _ as usize },
        2936usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xad4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xad8 as *const _ as usize },
        2940usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xad8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xadc as *const _ as usize },
        2944usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xadc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xae0 as *const _ as usize },
        2948usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xae0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xae4 as *const _ as usize },
        2952usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xae4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xae8 as *const _ as usize },
        2956usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xae8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xaec as *const _ as usize },
        2960usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xaec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xaf0 as *const _ as usize },
        2964usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xaf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xaf4 as *const _ as usize },
        2968usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xaf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xaf8 as *const _ as usize },
        2972usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xaf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xafc as *const _ as usize },
        2976usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xafc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb00 as *const _ as usize },
        2980usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb04 as *const _ as usize },
        2984usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb08 as *const _ as usize },
        2988usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb0c as *const _ as usize },
        2992usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb10 as *const _ as usize },
        2996usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb14 as *const _ as usize },
        3000usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb18 as *const _ as usize },
        3004usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb1c as *const _ as usize },
        3008usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb20 as *const _ as usize },
        3012usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb24 as *const _ as usize },
        3016usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb28 as *const _ as usize },
        3020usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb2c as *const _ as usize },
        3024usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb30 as *const _ as usize },
        3028usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb34 as *const _ as usize },
        3032usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb38 as *const _ as usize },
        3036usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb3c as *const _ as usize },
        3040usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb40 as *const _ as usize },
        3044usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb44 as *const _ as usize },
        3048usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb48 as *const _ as usize },
        3052usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb4c as *const _ as usize },
        3056usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb50 as *const _ as usize },
        3060usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb54 as *const _ as usize },
        3064usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb58 as *const _ as usize },
        3068usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb5c as *const _ as usize },
        3072usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb60 as *const _ as usize },
        3076usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb64 as *const _ as usize },
        3080usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb68 as *const _ as usize },
        3084usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb6c as *const _ as usize },
        3088usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb70 as *const _ as usize },
        3092usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb74 as *const _ as usize },
        3096usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb78 as *const _ as usize },
        3100usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb7c as *const _ as usize },
        3104usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb80 as *const _ as usize },
        3108usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb84 as *const _ as usize },
        3112usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb88 as *const _ as usize },
        3116usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb8c as *const _ as usize },
        3120usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb90 as *const _ as usize },
        3124usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb94 as *const _ as usize },
        3128usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb98 as *const _ as usize },
        3132usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xb9c as *const _ as usize },
        3136usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xb9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xba0 as *const _ as usize },
        3140usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xba0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xba4 as *const _ as usize },
        3144usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xba4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xba8 as *const _ as usize },
        3148usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xba8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbac as *const _ as usize },
        3152usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbb0 as *const _ as usize },
        3156usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbb4 as *const _ as usize },
        3160usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbb8 as *const _ as usize },
        3164usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbbc as *const _ as usize },
        3168usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbc0 as *const _ as usize },
        3172usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbc4 as *const _ as usize },
        3176usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbc8 as *const _ as usize },
        3180usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbcc as *const _ as usize },
        3184usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbd0 as *const _ as usize },
        3188usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbd4 as *const _ as usize },
        3192usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbd8 as *const _ as usize },
        3196usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbdc as *const _ as usize },
        3200usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbe0 as *const _ as usize },
        3204usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbe4 as *const _ as usize },
        3208usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbe8 as *const _ as usize },
        3212usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbec as *const _ as usize },
        3216usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbf0 as *const _ as usize },
        3220usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbf4 as *const _ as usize },
        3224usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbf8 as *const _ as usize },
        3228usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xbfc as *const _ as usize },
        3232usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xbfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc00 as *const _ as usize },
        3236usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc00)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc04 as *const _ as usize },
        3240usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc08 as *const _ as usize },
        3244usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc0c as *const _ as usize },
        3248usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc10 as *const _ as usize },
        3252usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc14 as *const _ as usize },
        3256usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc18 as *const _ as usize },
        3260usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).ecb_top as *const _ as usize },
        3264usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(ecb_top)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).ecb_bottom as *const _ as usize },
        3268usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(ecb_bottom)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).ecb_right as *const _ as usize },
        3272usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(ecb_right)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).ecb_left as *const _ as usize },
        3276usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(ecb_left)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc2c as *const _ as usize },
        3280usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc30 as *const _ as usize },
        3284usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc34 as *const _ as usize },
        3288usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc38 as *const _ as usize },
        3292usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc3c as *const _ as usize },
        3296usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc40 as *const _ as usize },
        3300usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc44 as *const _ as usize },
        3304usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc48 as *const _ as usize },
        3308usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc4c as *const _ as usize },
        3312usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc50 as *const _ as usize },
        3316usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc54 as *const _ as usize },
        3320usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc58 as *const _ as usize },
        3324usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc5c as *const _ as usize },
        3328usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc60 as *const _ as usize },
        3332usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc64 as *const _ as usize },
        3336usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc68 as *const _ as usize },
        3340usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc6c as *const _ as usize },
        3344usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc70 as *const _ as usize },
        3348usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc74 as *const _ as usize },
        3352usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc78 as *const _ as usize },
        3356usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc7c as *const _ as usize },
        3360usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc80 as *const _ as usize },
        3364usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc84 as *const _ as usize },
        3368usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc88 as *const _ as usize },
        3372usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc8c as *const _ as usize },
        3376usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc90 as *const _ as usize },
        3380usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc94 as *const _ as usize },
        3384usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xc98 as *const _ as usize },
        3388usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xc98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).dmg_total as *const _ as usize },
        3392usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(dmg_total)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).dmg_recent as *const _ as usize },
        3396usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(dmg_recent)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xca4 as *const _ as usize },
        3400usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xca4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xca8 as *const _ as usize },
        3404usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xca8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).dmg_angle as *const _ as usize },
        3408usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(dmg_angle)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcb0 as *const _ as usize },
        3412usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcb4 as *const _ as usize },
        3416usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcb8 as *const _ as usize },
        3420usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcbc as *const _ as usize },
        3424usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcc0 as *const _ as usize },
        3428usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcc4 as *const _ as usize },
        3432usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).dmg_kb as *const _ as usize },
        3436usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(dmg_kb)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).dmg_direction as *const _ as usize },
        3440usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(dmg_direction)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcd0 as *const _ as usize },
        3444usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcd4 as *const _ as usize },
        3448usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcd8 as *const _ as usize },
        3452usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcdc as *const _ as usize },
        3456usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xce0 as *const _ as usize },
        3460usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xce0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xce4 as *const _ as usize },
        3464usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xce4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xce8 as *const _ as usize },
        3468usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xce8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).dmgsource_fighter as *const _ as usize },
        3472usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(dmgsource_fighter)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).dmgsource_item as *const _ as usize },
        3480usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(dmgsource_item)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcf4 as *const _ as usize },
        3488usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcf8 as *const _ as usize },
        3492usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xcfc as *const _ as usize },
        3496usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xcfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).grabbedFighter as *const _ as usize },
        3504usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(grabbedFighter)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd04 as *const _ as usize },
        3512usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd08 as *const _ as usize },
        3516usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd0c as *const _ as usize },
        3520usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd10 as *const _ as usize },
        3524usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).cb as *const _ as usize },
        3528usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(cb)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).rotateSpeed as *const _ as usize },
        3608usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(rotateSpeed)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd40 as *const _ as usize },
        3612usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).lifetime as *const _ as usize },
        3616usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(lifetime)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd48 as *const _ as usize },
        3620usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd4c as *const _ as usize },
        3624usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd50 as *const _ as usize },
        3628usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd54 as *const _ as usize },
        3632usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd58 as *const _ as usize },
        3636usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd5c as *const _ as usize },
        3640usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd60 as *const _ as usize },
        3644usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd64 as *const _ as usize },
        3648usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd68 as *const _ as usize },
        3652usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd6c as *const _ as usize },
        3656usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd70 as *const _ as usize },
        3660usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd74 as *const _ as usize },
        3664usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd78 as *const _ as usize },
        3668usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd7c as *const _ as usize },
        3672usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd80 as *const _ as usize },
        3676usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd84 as *const _ as usize },
        3680usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd88 as *const _ as usize },
        3684usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd8c as *const _ as usize },
        3688usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd90 as *const _ as usize },
        3692usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd94 as *const _ as usize },
        3696usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd98 as *const _ as usize },
        3700usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xd9c as *const _ as usize },
        3704usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xd9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xda0 as *const _ as usize },
        3708usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xda0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xda4 as *const _ as usize },
        3712usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xda4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xda8 as *const _ as usize },
        3716usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xda8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xda9 as *const _ as usize },
        3717usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xda9)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xdab as *const _ as usize },
        3719usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xdab)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).scriptFlag1 as *const _ as usize },
        3720usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(scriptFlag1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).scriptFlag2 as *const _ as usize },
        3724usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(scriptFlag2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).scriptFlag3 as *const _ as usize },
        3728usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(scriptFlag3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xdb8 as *const _ as usize },
        3732usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xdb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).scriptFlag4 as *const _ as usize },
        3736usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(scriptFlag4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xdc0 as *const _ as usize },
        3740usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xdc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xdc4 as *const _ as usize },
        3744usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xdc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xdd0 as *const _ as usize },
        3756usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xdd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar1 as *const _ as usize },
        3760usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar2 as *const _ as usize },
        3764usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar3 as *const _ as usize },
        3768usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar4 as *const _ as usize },
        3772usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar5 as *const _ as usize },
        3776usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar6 as *const _ as usize },
        3780usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar7 as *const _ as usize },
        3784usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar8 as *const _ as usize },
        3788usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar9 as *const _ as usize },
        3792usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar9)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar10 as *const _ as usize },
        3796usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar11 as *const _ as usize },
        3800usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar11)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).itemVar12 as *const _ as usize },
        3804usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(itemVar12)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe04 as *const _ as usize },
        3808usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe04)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe08 as *const _ as usize },
        3812usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe08)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe0c as *const _ as usize },
        3816usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe0c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe10 as *const _ as usize },
        3820usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe14 as *const _ as usize },
        3824usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe18 as *const _ as usize },
        3828usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe1c as *const _ as usize },
        3832usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe1c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe20 as *const _ as usize },
        3836usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe24 as *const _ as usize },
        3840usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe28 as *const _ as usize },
        3844usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe2c as *const _ as usize },
        3848usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe30 as *const _ as usize },
        3852usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe34 as *const _ as usize },
        3856usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe38 as *const _ as usize },
        3860usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<ItemData>())).xe3c as *const _ as usize },
        3864usize,
        concat!(
            "Offset of field: ",
            stringify!(ItemData),
            "::",
            stringify!(xe3c)
        )
    );
}
impl ItemData {
    #[inline]
    pub fn xdaa1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdaa1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdaa2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdaa2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdaa3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdaa3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdaa4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdaa4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdaa5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdaa5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdaa6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdaa6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdaa7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdaa7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn visible(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_visible(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        xdaa1: ::std::os::raw::c_uchar,
        xdaa2: ::std::os::raw::c_uchar,
        xdaa3: ::std::os::raw::c_uchar,
        xdaa4: ::std::os::raw::c_uchar,
        xdaa5: ::std::os::raw::c_uchar,
        xdaa6: ::std::os::raw::c_uchar,
        xdaa7: ::std::os::raw::c_uchar,
        visible: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 1usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let xdaa1: u8 = unsafe { ::std::mem::transmute(xdaa1) };
            xdaa1 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let xdaa2: u8 = unsafe { ::std::mem::transmute(xdaa2) };
            xdaa2 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let xdaa3: u8 = unsafe { ::std::mem::transmute(xdaa3) };
            xdaa3 as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let xdaa4: u8 = unsafe { ::std::mem::transmute(xdaa4) };
            xdaa4 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let xdaa5: u8 = unsafe { ::std::mem::transmute(xdaa5) };
            xdaa5 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let xdaa6: u8 = unsafe { ::std::mem::transmute(xdaa6) };
            xdaa6 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let xdaa7: u8 = unsafe { ::std::mem::transmute(xdaa7) };
            xdaa7 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let visible: u8 = unsafe { ::std::mem::transmute(visible) };
            visible as u64
        });
        __bindgen_bitfield_unit
    }
    #[inline]
    pub fn flags1(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(0usize, 16u8) as u16) }
    }
    #[inline]
    pub fn set_flags1(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(0usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub fn xdca1(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(16usize, 1u8) as u16) }
    }
    #[inline]
    pub fn set_xdca1(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(16usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdca2(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(17usize, 1u8) as u16) }
    }
    #[inline]
    pub fn set_xdca2(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(17usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdca3(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(18usize, 1u8) as u16) }
    }
    #[inline]
    pub fn set_xdca3(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(18usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdca4(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(19usize, 1u8) as u16) }
    }
    #[inline]
    pub fn set_xdca4(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(19usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdca5(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(20usize, 1u8) as u16) }
    }
    #[inline]
    pub fn set_xdca5(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(20usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn can_hold(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(21usize, 1u8) as u16) }
    }
    #[inline]
    pub fn set_can_hold(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(21usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdca7(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(22usize, 1u8) as u16) }
    }
    #[inline]
    pub fn set_xdca7(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(22usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn rotateAxis(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(23usize, 3u8) as u16) }
    }
    #[inline]
    pub fn set_rotateAxis(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(23usize, 3u8, val as u64)
        }
    }
    #[inline]
    pub fn flags4(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(26usize, 2u8) as u16) }
    }
    #[inline]
    pub fn set_flags4(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(26usize, 2u8, val as u64)
        }
    }
    #[inline]
    pub fn can_nudge(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(28usize, 1u8) as u16) }
    }
    #[inline]
    pub fn set_can_nudge(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(28usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcb_7(&self) -> u16_ {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(29usize, 3u8) as u16) }
    }
    #[inline]
    pub fn set_xdcb_7(&mut self, val: u16_) {
        unsafe {
            let val: u16 = ::std::mem::transmute(val);
            self._bitfield_2.set(29usize, 3u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcc1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(32usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcc1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(32usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcc2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(33usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcc2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(33usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcc3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(34usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcc3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(34usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isCheckBlastzone(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(35usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isCheckBlastzone(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(35usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isCheckRightBlastzone(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(36usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isCheckRightBlastzone(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(36usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isCheckLeftBlastzone(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(37usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isCheckLeftBlastzone(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(37usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isCheckUpBlastzone(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(38usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isCheckUpBlastzone(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(38usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isCheckDownBlastzone(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(39usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isCheckDownBlastzone(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(39usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn cam_kind(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(40usize, 2u8) as u8) }
    }
    #[inline]
    pub fn set_cam_kind(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(40usize, 2u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcd3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(42usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcd3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(42usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcd4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(43usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcd4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(43usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcd5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(44usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcd5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(44usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcd6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(45usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcd6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(45usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcd7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(46usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcd7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(46usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcd8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(47usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcd8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(47usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdce1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(48usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdce1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(48usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdce2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(49usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdce2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(49usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdce3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(50usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdce3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(50usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdce4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(51usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdce4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(51usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdce5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(52usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdce5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(52usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdce6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(53usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdce6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(53usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdce7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(54usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdce7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(54usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdce8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(55usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdce8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(55usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcf1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(56usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcf1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(56usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcf2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(57usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcf2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(57usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcf3(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(58usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcf3(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(58usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcf4(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(59usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcf4(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(59usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcf5(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(60usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcf5(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(60usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcf6(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(61usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcf6(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(61usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcf7(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(62usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcf7(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(62usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn xdcf8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_2.get(63usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_xdcf8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_2.set(63usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_2(
        flags1: u16_,
        xdca1: u16_,
        xdca2: u16_,
        xdca3: u16_,
        xdca4: u16_,
        xdca5: u16_,
        can_hold: u16_,
        xdca7: u16_,
        rotateAxis: u16_,
        flags4: u16_,
        can_nudge: u16_,
        xdcb_7: u16_,
        xdcc1: ::std::os::raw::c_uchar,
        xdcc2: ::std::os::raw::c_uchar,
        xdcc3: ::std::os::raw::c_uchar,
        isCheckBlastzone: ::std::os::raw::c_uchar,
        isCheckRightBlastzone: ::std::os::raw::c_uchar,
        isCheckLeftBlastzone: ::std::os::raw::c_uchar,
        isCheckUpBlastzone: ::std::os::raw::c_uchar,
        isCheckDownBlastzone: ::std::os::raw::c_uchar,
        cam_kind: ::std::os::raw::c_uchar,
        xdcd3: ::std::os::raw::c_uchar,
        xdcd4: ::std::os::raw::c_uchar,
        xdcd5: ::std::os::raw::c_uchar,
        xdcd6: ::std::os::raw::c_uchar,
        xdcd7: ::std::os::raw::c_uchar,
        xdcd8: ::std::os::raw::c_uchar,
        xdce1: ::std::os::raw::c_uchar,
        xdce2: ::std::os::raw::c_uchar,
        xdce3: ::std::os::raw::c_uchar,
        xdce4: ::std::os::raw::c_uchar,
        xdce5: ::std::os::raw::c_uchar,
        xdce6: ::std::os::raw::c_uchar,
        xdce7: ::std::os::raw::c_uchar,
        xdce8: ::std::os::raw::c_uchar,
        xdcf1: ::std::os::raw::c_uchar,
        xdcf2: ::std::os::raw::c_uchar,
        xdcf3: ::std::os::raw::c_uchar,
        xdcf4: ::std::os::raw::c_uchar,
        xdcf5: ::std::os::raw::c_uchar,
        xdcf6: ::std::os::raw::c_uchar,
        xdcf7: ::std::os::raw::c_uchar,
        xdcf8: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 8usize], u16> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 8usize], u16> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 16u8, {
            let flags1: u16 = unsafe { ::std::mem::transmute(flags1) };
            flags1 as u64
        });
        __bindgen_bitfield_unit.set(16usize, 1u8, {
            let xdca1: u16 = unsafe { ::std::mem::transmute(xdca1) };
            xdca1 as u64
        });
        __bindgen_bitfield_unit.set(17usize, 1u8, {
            let xdca2: u16 = unsafe { ::std::mem::transmute(xdca2) };
            xdca2 as u64
        });
        __bindgen_bitfield_unit.set(18usize, 1u8, {
            let xdca3: u16 = unsafe { ::std::mem::transmute(xdca3) };
            xdca3 as u64
        });
        __bindgen_bitfield_unit.set(19usize, 1u8, {
            let xdca4: u16 = unsafe { ::std::mem::transmute(xdca4) };
            xdca4 as u64
        });
        __bindgen_bitfield_unit.set(20usize, 1u8, {
            let xdca5: u16 = unsafe { ::std::mem::transmute(xdca5) };
            xdca5 as u64
        });
        __bindgen_bitfield_unit.set(21usize, 1u8, {
            let can_hold: u16 = unsafe { ::std::mem::transmute(can_hold) };
            can_hold as u64
        });
        __bindgen_bitfield_unit.set(22usize, 1u8, {
            let xdca7: u16 = unsafe { ::std::mem::transmute(xdca7) };
            xdca7 as u64
        });
        __bindgen_bitfield_unit.set(23usize, 3u8, {
            let rotateAxis: u16 = unsafe { ::std::mem::transmute(rotateAxis) };
            rotateAxis as u64
        });
        __bindgen_bitfield_unit.set(26usize, 2u8, {
            let flags4: u16 = unsafe { ::std::mem::transmute(flags4) };
            flags4 as u64
        });
        __bindgen_bitfield_unit.set(28usize, 1u8, {
            let can_nudge: u16 = unsafe { ::std::mem::transmute(can_nudge) };
            can_nudge as u64
        });
        __bindgen_bitfield_unit.set(29usize, 3u8, {
            let xdcb_7: u16 = unsafe { ::std::mem::transmute(xdcb_7) };
            xdcb_7 as u64
        });
        __bindgen_bitfield_unit.set(32usize, 1u8, {
            let xdcc1: u8 = unsafe { ::std::mem::transmute(xdcc1) };
            xdcc1 as u64
        });
        __bindgen_bitfield_unit.set(33usize, 1u8, {
            let xdcc2: u8 = unsafe { ::std::mem::transmute(xdcc2) };
            xdcc2 as u64
        });
        __bindgen_bitfield_unit.set(34usize, 1u8, {
            let xdcc3: u8 = unsafe { ::std::mem::transmute(xdcc3) };
            xdcc3 as u64
        });
        __bindgen_bitfield_unit.set(35usize, 1u8, {
            let isCheckBlastzone: u8 = unsafe { ::std::mem::transmute(isCheckBlastzone) };
            isCheckBlastzone as u64
        });
        __bindgen_bitfield_unit.set(36usize, 1u8, {
            let isCheckRightBlastzone: u8 = unsafe { ::std::mem::transmute(isCheckRightBlastzone) };
            isCheckRightBlastzone as u64
        });
        __bindgen_bitfield_unit.set(37usize, 1u8, {
            let isCheckLeftBlastzone: u8 = unsafe { ::std::mem::transmute(isCheckLeftBlastzone) };
            isCheckLeftBlastzone as u64
        });
        __bindgen_bitfield_unit.set(38usize, 1u8, {
            let isCheckUpBlastzone: u8 = unsafe { ::std::mem::transmute(isCheckUpBlastzone) };
            isCheckUpBlastzone as u64
        });
        __bindgen_bitfield_unit.set(39usize, 1u8, {
            let isCheckDownBlastzone: u8 = unsafe { ::std::mem::transmute(isCheckDownBlastzone) };
            isCheckDownBlastzone as u64
        });
        __bindgen_bitfield_unit.set(40usize, 2u8, {
            let cam_kind: u8 = unsafe { ::std::mem::transmute(cam_kind) };
            cam_kind as u64
        });
        __bindgen_bitfield_unit.set(42usize, 1u8, {
            let xdcd3: u8 = unsafe { ::std::mem::transmute(xdcd3) };
            xdcd3 as u64
        });
        __bindgen_bitfield_unit.set(43usize, 1u8, {
            let xdcd4: u8 = unsafe { ::std::mem::transmute(xdcd4) };
            xdcd4 as u64
        });
        __bindgen_bitfield_unit.set(44usize, 1u8, {
            let xdcd5: u8 = unsafe { ::std::mem::transmute(xdcd5) };
            xdcd5 as u64
        });
        __bindgen_bitfield_unit.set(45usize, 1u8, {
            let xdcd6: u8 = unsafe { ::std::mem::transmute(xdcd6) };
            xdcd6 as u64
        });
        __bindgen_bitfield_unit.set(46usize, 1u8, {
            let xdcd7: u8 = unsafe { ::std::mem::transmute(xdcd7) };
            xdcd7 as u64
        });
        __bindgen_bitfield_unit.set(47usize, 1u8, {
            let xdcd8: u8 = unsafe { ::std::mem::transmute(xdcd8) };
            xdcd8 as u64
        });
        __bindgen_bitfield_unit.set(48usize, 1u8, {
            let xdce1: u8 = unsafe { ::std::mem::transmute(xdce1) };
            xdce1 as u64
        });
        __bindgen_bitfield_unit.set(49usize, 1u8, {
            let xdce2: u8 = unsafe { ::std::mem::transmute(xdce2) };
            xdce2 as u64
        });
        __bindgen_bitfield_unit.set(50usize, 1u8, {
            let xdce3: u8 = unsafe { ::std::mem::transmute(xdce3) };
            xdce3 as u64
        });
        __bindgen_bitfield_unit.set(51usize, 1u8, {
            let xdce4: u8 = unsafe { ::std::mem::transmute(xdce4) };
            xdce4 as u64
        });
        __bindgen_bitfield_unit.set(52usize, 1u8, {
            let xdce5: u8 = unsafe { ::std::mem::transmute(xdce5) };
            xdce5 as u64
        });
        __bindgen_bitfield_unit.set(53usize, 1u8, {
            let xdce6: u8 = unsafe { ::std::mem::transmute(xdce6) };
            xdce6 as u64
        });
        __bindgen_bitfield_unit.set(54usize, 1u8, {
            let xdce7: u8 = unsafe { ::std::mem::transmute(xdce7) };
            xdce7 as u64
        });
        __bindgen_bitfield_unit.set(55usize, 1u8, {
            let xdce8: u8 = unsafe { ::std::mem::transmute(xdce8) };
            xdce8 as u64
        });
        __bindgen_bitfield_unit.set(56usize, 1u8, {
            let xdcf1: u8 = unsafe { ::std::mem::transmute(xdcf1) };
            xdcf1 as u64
        });
        __bindgen_bitfield_unit.set(57usize, 1u8, {
            let xdcf2: u8 = unsafe { ::std::mem::transmute(xdcf2) };
            xdcf2 as u64
        });
        __bindgen_bitfield_unit.set(58usize, 1u8, {
            let xdcf3: u8 = unsafe { ::std::mem::transmute(xdcf3) };
            xdcf3 as u64
        });
        __bindgen_bitfield_unit.set(59usize, 1u8, {
            let xdcf4: u8 = unsafe { ::std::mem::transmute(xdcf4) };
            xdcf4 as u64
        });
        __bindgen_bitfield_unit.set(60usize, 1u8, {
            let xdcf5: u8 = unsafe { ::std::mem::transmute(xdcf5) };
            xdcf5 as u64
        });
        __bindgen_bitfield_unit.set(61usize, 1u8, {
            let xdcf6: u8 = unsafe { ::std::mem::transmute(xdcf6) };
            xdcf6 as u64
        });
        __bindgen_bitfield_unit.set(62usize, 1u8, {
            let xdcf7: u8 = unsafe { ::std::mem::transmute(xdcf7) };
            xdcf7 as u64
        });
        __bindgen_bitfield_unit.set(63usize, 1u8, {
            let xdcf8: u8 = unsafe { ::std::mem::transmute(xdcf8) };
            xdcf8 as u64
        });
        __bindgen_bitfield_unit
    }
}
extern "C" {
    #[doc = " Functions"]
    pub fn Item_Hold(item: *mut GOBJ, fighter: *mut GOBJ, boneID: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Item_Catch(fighter: *mut GOBJ, unk: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Items_StoreItemDataToCharItemTable(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Items_StoreItemDataToCharItemTable2(
        articleData: ::std::os::raw::c_int,
        articleID: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Items_StoreTimeout(item: *mut GOBJ, timeout: f32);
}
extern "C" {
    pub fn Item_CreateItem(item_spawn: *mut SpawnItem) -> *mut GOBJ;
}
extern "C" {
    pub fn Item_CreateItem1(item_spawn: *mut SpawnItem) -> *mut GOBJ;
}
extern "C" {
    pub fn Item_CreateItem2(item_spawn: *mut SpawnItem) -> *mut GOBJ;
}
extern "C" {
    pub fn Item_CreateItem3(item_spawn: *mut SpawnItem) -> *mut GOBJ;
}
extern "C" {
    pub fn Item_Destroy(item: *mut GOBJ);
}
extern "C" {
    pub fn Item_CollGround_PassLedge(
        item: *mut GOBJ,
        callback: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Item_CollGround_StopLedge(
        item: *mut GOBJ,
        callback: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Item_CollAir(
        item: *mut GOBJ,
        callback: *mut ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn ItemStateChange(
        item: *mut GOBJ,
        stateID: ::std::os::raw::c_int,
        flags: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn ItemFrameTimer(item: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Item_PlaceOnGroundBelow(item: *mut GOBJ);
}
extern "C" {
    pub fn Item_CheckIfTouchingWall(item: *mut GOBJ, unk: *mut *mut f32) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Item_InitGrab(
        item: *mut ItemData,
        unk: ::std::os::raw::c_int,
        OnItem: *mut ::std::os::raw::c_void,
        OnFighter: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Item_ResetAllHitPlayers(item: *mut ItemData);
}
extern "C" {
    pub fn Item_CountActiveItems(itemID: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Item_CopyDevelopState(item: *mut GOBJ, fighter: *mut GOBJ);
}
extern "C" {
    pub fn Items_DecLife(item: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn GXLink_Item(gobj: *mut GOBJ, pass: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Item_UpdateSpin(item: *mut GOBJ, unk: f32);
}
extern "C" {
    pub fn Item_EnableSpin(item: *mut GOBJ);
}
extern "C" {
    pub fn Item_DisableSpin(item: *mut GOBJ);
}
extern "C" {
    pub fn Item_SetLifeTimer(item: *mut GOBJ, lifetime: f32);
}
extern "C" {
    pub fn Item_DecLifeTimer(item: *mut GOBJ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Item_GetBoneJOBJ(item: *mut GOBJ, bone_index: ::std::os::raw::c_int) -> *mut JOBJ;
}
extern "C" {
    pub fn Item_CheckIfEnabled() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Barrel_EnterBreak(item: *mut GOBJ);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FtVarKirby {
    pub charVar1: ::std::os::raw::c_int,
    pub charVar2: ::std::os::raw::c_int,
    pub charVar3: ::std::os::raw::c_int,
    pub copy_index: ::std::os::raw::c_int,
    pub copy_jobj: *mut JOBJ,
    pub ftparts_model: FtParts,
    pub ftdobj_unk: FtDOBJUnk,
}
#[test]
fn bindgen_test_layout_FtVarKirby() {
    assert_eq!(
        ::std::mem::size_of::<FtVarKirby>(),
        112usize,
        concat!("Size of: ", stringify!(FtVarKirby))
    );
    assert_eq!(
        ::std::mem::align_of::<FtVarKirby>(),
        8usize,
        concat!("Alignment of ", stringify!(FtVarKirby))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtVarKirby>())).charVar1 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(FtVarKirby),
            "::",
            stringify!(charVar1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtVarKirby>())).charVar2 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(FtVarKirby),
            "::",
            stringify!(charVar2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtVarKirby>())).charVar3 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(FtVarKirby),
            "::",
            stringify!(charVar3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtVarKirby>())).copy_index as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(FtVarKirby),
            "::",
            stringify!(copy_index)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtVarKirby>())).copy_jobj as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(FtVarKirby),
            "::",
            stringify!(copy_jobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtVarKirby>())).ftparts_model as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(FtVarKirby),
            "::",
            stringify!(ftparts_model)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<FtVarKirby>())).ftdobj_unk as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(FtVarKirby),
            "::",
            stringify!(ftdobj_unk)
        )
    );
}
extern "C" {
    #[doc = " Memcard Library"]
    pub fn Memcard_InitWorkArea();
}
extern "C" {
    pub fn Memcard_LoadAssets(unk: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Memcard_GetRules1() -> *mut Rules1;
}
extern "C" {
    pub fn Memcard_InitSnapshotList(
        snap_data: *mut ::std::os::raw::c_void,
        snap_list: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Memcard_UpdateSnapshotList(slot: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Memcard_CreateSnapshot(
        slot: ::std::os::raw::c_int,
        save_id: *mut ::std::os::raw::c_char,
        memcard_save: *mut MemcardSave,
        memcard_unk: *mut MemcardUnk,
        file_name: *mut ::std::os::raw::c_char,
        banner: *mut _HSD_ImageDesc,
        icon: *mut _HSD_ImageDesc,
        unk: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Memcard_DeleteSnapshot(slot: ::std::os::raw::c_int, index: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Memcard_LoadSnapshot(
        slot: ::std::os::raw::c_int,
        save_id: *mut ::std::os::raw::c_char,
        memcard_save: *mut MemcardSave,
        file_name: *mut ::std::os::raw::c_char,
        banner: *mut _HSD_ImageDesc,
        icon: *mut _HSD_ImageDesc,
        unk: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Memcard_CheckStatus() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Memcard_RemovedCallback();
}
extern "C" {
    pub fn Memcard_Deobfuscate(data: *mut ::std::os::raw::c_void, size: ::std::os::raw::c_int);
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Memcard {
    pub unk0: ::std::os::raw::c_int,
    pub unk1: ::std::os::raw::c_int,
    pub unk2: ::std::os::raw::c_int,
    pub unk3: ::std::os::raw::c_int,
    pub unk4: ::std::os::raw::c_int,
    pub unk5: ::std::os::raw::c_int,
    pub unk6: ::std::os::raw::c_int,
    pub unk7: ::std::os::raw::c_int,
    pub unk8: ::std::os::raw::c_int,
    pub unk9: ::std::os::raw::c_int,
    pub unk10: ::std::os::raw::c_int,
    pub unk11: ::std::os::raw::c_int,
    pub unk12: ::std::os::raw::c_int,
    pub unk13: ::std::os::raw::c_int,
    pub unk14: ::std::os::raw::c_int,
    pub unk15: ::std::os::raw::c_int,
    pub unk16: ::std::os::raw::c_int,
    pub unk17: ::std::os::raw::c_int,
    pub unk18: ::std::os::raw::c_int,
    pub unk19: ::std::os::raw::c_int,
    pub unk20: ::std::os::raw::c_int,
    pub unk21: ::std::os::raw::c_int,
    pub unk22: ::std::os::raw::c_int,
    pub unk23: ::std::os::raw::c_int,
    pub unk24: ::std::os::raw::c_int,
    pub unk25: ::std::os::raw::c_int,
    pub unk26: ::std::os::raw::c_int,
    pub unk27: ::std::os::raw::c_int,
    pub unk28: ::std::os::raw::c_int,
    pub unk29: ::std::os::raw::c_int,
    pub unk30: ::std::os::raw::c_int,
    pub unk31: ::std::os::raw::c_int,
    pub unk32: ::std::os::raw::c_int,
    pub unk33: ::std::os::raw::c_int,
    pub unk34: ::std::os::raw::c_int,
    pub unk35: ::std::os::raw::c_int,
    pub unk36: ::std::os::raw::c_int,
    pub unk37: ::std::os::raw::c_int,
    pub unk38: ::std::os::raw::c_int,
    pub unk39: ::std::os::raw::c_int,
    pub unk40: ::std::os::raw::c_int,
    pub unk41: ::std::os::raw::c_int,
    pub unk42: ::std::os::raw::c_int,
    pub unk43: ::std::os::raw::c_int,
    pub unk44: ::std::os::raw::c_int,
    pub unk45: ::std::os::raw::c_int,
    pub unk46: ::std::os::raw::c_int,
    pub unk47: ::std::os::raw::c_int,
    pub unk48: ::std::os::raw::c_int,
    pub unk49: ::std::os::raw::c_int,
    pub unk50: ::std::os::raw::c_int,
    pub unk51: ::std::os::raw::c_int,
    pub unk52: ::std::os::raw::c_int,
    pub unk53: ::std::os::raw::c_int,
    pub unk54: ::std::os::raw::c_int,
    pub unk55: ::std::os::raw::c_int,
    pub unk56: ::std::os::raw::c_int,
    pub unk57: ::std::os::raw::c_int,
    pub unk58: ::std::os::raw::c_int,
    pub unk59: ::std::os::raw::c_int,
    pub unk60: ::std::os::raw::c_int,
    pub unk61: ::std::os::raw::c_int,
    pub unk62: ::std::os::raw::c_int,
    pub unk63: ::std::os::raw::c_int,
    pub unk64: ::std::os::raw::c_int,
    pub unk65: ::std::os::raw::c_int,
    pub unk66: ::std::os::raw::c_int,
    pub unk67: ::std::os::raw::c_int,
    pub unk68: ::std::os::raw::c_int,
    pub unk69: ::std::os::raw::c_int,
    pub unk70: ::std::os::raw::c_int,
    pub unk71: ::std::os::raw::c_int,
    pub unk72: ::std::os::raw::c_int,
    pub unk73: ::std::os::raw::c_int,
    pub unk74: ::std::os::raw::c_int,
    pub unk75: ::std::os::raw::c_int,
    pub unk76: ::std::os::raw::c_int,
    pub unk77: ::std::os::raw::c_int,
    pub unk78: ::std::os::raw::c_int,
    pub unk79: ::std::os::raw::c_int,
    pub unk80: ::std::os::raw::c_int,
    pub unk81: ::std::os::raw::c_int,
    pub unk82: ::std::os::raw::c_int,
    pub unk83: ::std::os::raw::c_int,
    pub unk84: ::std::os::raw::c_int,
    pub unk85: ::std::os::raw::c_int,
    pub unk86: ::std::os::raw::c_int,
    pub unk87: ::std::os::raw::c_int,
    pub unk88: ::std::os::raw::c_int,
    pub unk89: ::std::os::raw::c_int,
    pub unk90: ::std::os::raw::c_int,
    pub unk91: ::std::os::raw::c_int,
    pub unk92: ::std::os::raw::c_int,
    pub unk93: ::std::os::raw::c_int,
    pub unk94: ::std::os::raw::c_int,
    pub unk95: ::std::os::raw::c_int,
    pub unk96: ::std::os::raw::c_int,
    pub unk97: ::std::os::raw::c_int,
    pub unk98: ::std::os::raw::c_int,
    pub unk99: ::std::os::raw::c_int,
    pub unk100: ::std::os::raw::c_int,
    pub unk101: ::std::os::raw::c_int,
    pub unk102: ::std::os::raw::c_int,
    pub unk103: ::std::os::raw::c_int,
    pub unk104: ::std::os::raw::c_int,
    pub unk105: ::std::os::raw::c_int,
    pub unk106: ::std::os::raw::c_int,
    pub unk107: ::std::os::raw::c_int,
    pub unk108: ::std::os::raw::c_int,
    pub unk109: ::std::os::raw::c_int,
    pub unk110: ::std::os::raw::c_int,
    pub unk111: ::std::os::raw::c_int,
    pub unk112: ::std::os::raw::c_int,
    pub unk113: ::std::os::raw::c_int,
    pub unk114: ::std::os::raw::c_int,
    pub unk115: ::std::os::raw::c_int,
    pub unk116: ::std::os::raw::c_int,
    pub unk117: ::std::os::raw::c_int,
    pub unk118: ::std::os::raw::c_int,
    pub unk119: ::std::os::raw::c_int,
    pub unk120: ::std::os::raw::c_int,
    pub unk121: ::std::os::raw::c_int,
    pub unk122: ::std::os::raw::c_int,
    pub unk123: ::std::os::raw::c_int,
    pub unk124: ::std::os::raw::c_int,
    pub unk125: ::std::os::raw::c_int,
    pub unk126: ::std::os::raw::c_int,
    pub unk127: ::std::os::raw::c_int,
    pub unk128: ::std::os::raw::c_int,
    pub unk129: ::std::os::raw::c_int,
    pub unk130: ::std::os::raw::c_int,
    pub unk131: ::std::os::raw::c_int,
    pub unk132: ::std::os::raw::c_int,
    pub unk133: ::std::os::raw::c_int,
    pub unk134: ::std::os::raw::c_int,
    pub unk135: ::std::os::raw::c_int,
    pub unk136: ::std::os::raw::c_int,
    pub unk137: ::std::os::raw::c_int,
    pub unk138: ::std::os::raw::c_int,
    pub unk139: ::std::os::raw::c_int,
    pub unk140: ::std::os::raw::c_int,
    pub unk141: ::std::os::raw::c_int,
    pub unk142: ::std::os::raw::c_int,
    pub unk143: ::std::os::raw::c_int,
    pub unk144: ::std::os::raw::c_int,
    pub unk145: ::std::os::raw::c_int,
    pub unk146: ::std::os::raw::c_int,
    pub unk147: ::std::os::raw::c_int,
    pub unk148: ::std::os::raw::c_int,
    pub unk149: ::std::os::raw::c_int,
    pub unk150: ::std::os::raw::c_int,
    pub unk151: ::std::os::raw::c_int,
    pub unk152: ::std::os::raw::c_int,
    pub unk153: ::std::os::raw::c_int,
    pub unk154: ::std::os::raw::c_int,
    pub unk155: ::std::os::raw::c_int,
    pub unk156: ::std::os::raw::c_int,
    pub unk157: ::std::os::raw::c_int,
    pub unk158: ::std::os::raw::c_int,
    pub unk159: ::std::os::raw::c_int,
    pub unk160: ::std::os::raw::c_int,
    pub unk161: ::std::os::raw::c_int,
    pub unk162: ::std::os::raw::c_int,
    pub unk163: ::std::os::raw::c_int,
    pub unk164: ::std::os::raw::c_int,
    pub unk165: ::std::os::raw::c_int,
    pub unk166: ::std::os::raw::c_int,
    pub unk167: ::std::os::raw::c_int,
    pub unk168: ::std::os::raw::c_int,
    pub unk169: ::std::os::raw::c_int,
    pub unk170: ::std::os::raw::c_int,
    pub unk171: ::std::os::raw::c_int,
    pub unk172: ::std::os::raw::c_int,
    pub unk173: ::std::os::raw::c_int,
    pub unk174: ::std::os::raw::c_int,
    pub unk175: ::std::os::raw::c_int,
    pub unk176: ::std::os::raw::c_int,
    pub unk177: ::std::os::raw::c_int,
    pub unk178: ::std::os::raw::c_int,
    pub unk179: ::std::os::raw::c_int,
    pub unk180: ::std::os::raw::c_int,
    pub unk181: ::std::os::raw::c_int,
    pub unk182: ::std::os::raw::c_int,
    pub unk183: ::std::os::raw::c_int,
    pub unk184: ::std::os::raw::c_int,
    pub unk185: ::std::os::raw::c_int,
    pub unk186: ::std::os::raw::c_int,
    pub unk187: ::std::os::raw::c_int,
    pub unk188: ::std::os::raw::c_int,
    pub unk189: ::std::os::raw::c_int,
    pub unk190: ::std::os::raw::c_int,
    pub unk191: ::std::os::raw::c_int,
    pub unk192: ::std::os::raw::c_int,
    pub unk193: ::std::os::raw::c_int,
    pub unk194: ::std::os::raw::c_int,
    pub unk195: ::std::os::raw::c_int,
    pub unk196: ::std::os::raw::c_int,
    pub unk197: ::std::os::raw::c_int,
    pub unk198: ::std::os::raw::c_int,
    pub unk199: ::std::os::raw::c_int,
    pub unk200: ::std::os::raw::c_int,
    pub unk201: ::std::os::raw::c_int,
    pub unk202: ::std::os::raw::c_int,
    pub unk203: ::std::os::raw::c_int,
    pub unk204: ::std::os::raw::c_int,
    pub unk205: ::std::os::raw::c_int,
    pub unk206: ::std::os::raw::c_int,
    pub unk207: ::std::os::raw::c_int,
    pub unk208: ::std::os::raw::c_int,
    pub unk209: ::std::os::raw::c_int,
    pub unk210: ::std::os::raw::c_int,
    pub unk211: ::std::os::raw::c_int,
    pub unk212: ::std::os::raw::c_int,
    pub unk213: ::std::os::raw::c_int,
    pub unk214: ::std::os::raw::c_int,
    pub unk215: ::std::os::raw::c_int,
    pub unk216: ::std::os::raw::c_int,
    pub unk217: ::std::os::raw::c_int,
    pub unk218: ::std::os::raw::c_int,
    pub unk219: ::std::os::raw::c_int,
    pub unk220: ::std::os::raw::c_int,
    pub unk221: ::std::os::raw::c_int,
    pub unk222: ::std::os::raw::c_int,
    pub unk223: ::std::os::raw::c_int,
    pub unk224: ::std::os::raw::c_int,
    pub unk225: ::std::os::raw::c_int,
    pub unk226: ::std::os::raw::c_int,
    pub unk227: ::std::os::raw::c_int,
    pub unk228: ::std::os::raw::c_int,
    pub unk229: ::std::os::raw::c_int,
    pub unk230: ::std::os::raw::c_int,
    pub unk231: ::std::os::raw::c_int,
    pub unk232: ::std::os::raw::c_int,
    pub unk233: ::std::os::raw::c_int,
    pub unk234: ::std::os::raw::c_int,
    pub unk235: ::std::os::raw::c_int,
    pub unk236: ::std::os::raw::c_int,
    pub unk237: ::std::os::raw::c_int,
    pub unk238: ::std::os::raw::c_int,
    pub unk239: ::std::os::raw::c_int,
    pub unk240: ::std::os::raw::c_int,
    pub unk241: ::std::os::raw::c_int,
    pub unk242: ::std::os::raw::c_int,
    pub unk243: ::std::os::raw::c_int,
    pub unk244: ::std::os::raw::c_int,
    pub unk245: ::std::os::raw::c_int,
    pub unk246: ::std::os::raw::c_int,
    pub unk247: ::std::os::raw::c_int,
    pub unk248: ::std::os::raw::c_int,
    pub unk249: ::std::os::raw::c_int,
    pub unk250: ::std::os::raw::c_int,
    pub unk251: ::std::os::raw::c_int,
    pub unk252: ::std::os::raw::c_int,
    pub unk253: ::std::os::raw::c_int,
    pub unk254: ::std::os::raw::c_int,
    pub unk255: ::std::os::raw::c_int,
    pub unk256: ::std::os::raw::c_int,
    pub unk257: ::std::os::raw::c_int,
    pub unk258: ::std::os::raw::c_int,
    pub unk259: ::std::os::raw::c_int,
    pub unk260: ::std::os::raw::c_int,
    pub unk261: ::std::os::raw::c_int,
    pub unk262: ::std::os::raw::c_int,
    pub unk263: ::std::os::raw::c_int,
    pub unk264: ::std::os::raw::c_int,
    pub unk265: ::std::os::raw::c_int,
    pub unk266: ::std::os::raw::c_int,
    pub unk267: ::std::os::raw::c_int,
    pub unk268: ::std::os::raw::c_int,
    pub unk269: ::std::os::raw::c_int,
    pub unk270: ::std::os::raw::c_int,
    pub unk271: ::std::os::raw::c_int,
    pub unk272: ::std::os::raw::c_int,
    pub unk273: ::std::os::raw::c_int,
    pub unk274: ::std::os::raw::c_int,
    pub unk275: ::std::os::raw::c_int,
    pub unk276: ::std::os::raw::c_int,
    pub unk277: ::std::os::raw::c_int,
    pub unk278: ::std::os::raw::c_int,
    pub unk279: ::std::os::raw::c_int,
    pub unk280: ::std::os::raw::c_int,
    pub unk281: ::std::os::raw::c_int,
    pub unk282: ::std::os::raw::c_int,
    pub unk283: ::std::os::raw::c_int,
    pub unk284: ::std::os::raw::c_int,
    pub unk285: ::std::os::raw::c_int,
    pub unk286: ::std::os::raw::c_int,
    pub unk287: ::std::os::raw::c_int,
    pub unk288: ::std::os::raw::c_int,
    pub unk289: ::std::os::raw::c_int,
    pub unk290: ::std::os::raw::c_int,
    pub unk291: ::std::os::raw::c_int,
    pub unk292: ::std::os::raw::c_int,
    pub unk293: ::std::os::raw::c_int,
    pub unk294: ::std::os::raw::c_int,
    pub unk295: ::std::os::raw::c_int,
    pub unk296: ::std::os::raw::c_int,
    pub unk297: ::std::os::raw::c_int,
    pub unk298: ::std::os::raw::c_int,
    pub unk299: ::std::os::raw::c_int,
    pub unk300: ::std::os::raw::c_int,
    pub unk301: ::std::os::raw::c_int,
    pub unk302: ::std::os::raw::c_int,
    pub unk303: ::std::os::raw::c_int,
    pub unk304: ::std::os::raw::c_int,
    pub unk305: ::std::os::raw::c_int,
    pub unk306: ::std::os::raw::c_int,
    pub unk307: ::std::os::raw::c_int,
    pub unk308: ::std::os::raw::c_int,
    pub unk309: ::std::os::raw::c_int,
    pub unk310: ::std::os::raw::c_int,
    pub unk311: ::std::os::raw::c_int,
    pub unk312: ::std::os::raw::c_int,
    pub unk313: ::std::os::raw::c_int,
    pub unk314: ::std::os::raw::c_int,
    pub unk315: ::std::os::raw::c_int,
    pub unk316: ::std::os::raw::c_int,
    pub unk317: ::std::os::raw::c_int,
    pub unk318: ::std::os::raw::c_int,
    pub unk319: ::std::os::raw::c_int,
    pub unk320: ::std::os::raw::c_int,
    pub unk321: ::std::os::raw::c_int,
    pub unk322: ::std::os::raw::c_int,
    pub unk323: ::std::os::raw::c_int,
    pub unk324: ::std::os::raw::c_int,
    pub unk325: ::std::os::raw::c_int,
    pub unk326: ::std::os::raw::c_int,
    pub unk327: ::std::os::raw::c_int,
    pub unk328: ::std::os::raw::c_int,
    pub unk329: ::std::os::raw::c_int,
    pub unk330: ::std::os::raw::c_int,
    pub unk331: ::std::os::raw::c_int,
    pub EventBackup: CSSBackup,
    pub unk335: ::std::os::raw::c_int,
    pub unk336: ::std::os::raw::c_int,
    pub unk337: ::std::os::raw::c_int,
    pub unk338: ::std::os::raw::c_int,
    pub unk339: ::std::os::raw::c_int,
    pub unk340: ::std::os::raw::c_int,
    pub unk341: ::std::os::raw::c_int,
    pub unk342: ::std::os::raw::c_int,
    pub unk343: ::std::os::raw::c_int,
    pub unk344: ::std::os::raw::c_int,
    pub unk345: ::std::os::raw::c_int,
    pub unk346: ::std::os::raw::c_int,
    pub unk347: ::std::os::raw::c_int,
    pub unk348: ::std::os::raw::c_int,
    pub unk349: ::std::os::raw::c_int,
    pub unk350: ::std::os::raw::c_int,
    pub unk351: ::std::os::raw::c_int,
    pub unk352: ::std::os::raw::c_int,
    pub unk353: ::std::os::raw::c_int,
    pub unk354: ::std::os::raw::c_int,
    pub unk355: ::std::os::raw::c_int,
    pub unk356: ::std::os::raw::c_int,
    pub unk357: ::std::os::raw::c_int,
    pub unk358: ::std::os::raw::c_int,
    pub unk359: ::std::os::raw::c_int,
    pub unk360: ::std::os::raw::c_int,
    pub unk361: ::std::os::raw::c_int,
    pub unk362: ::std::os::raw::c_int,
    pub unk363: ::std::os::raw::c_int,
    pub unk364: ::std::os::raw::c_int,
    pub unk365: ::std::os::raw::c_int,
    pub unk366: ::std::os::raw::c_int,
    pub unk367: ::std::os::raw::c_int,
    pub unk368: ::std::os::raw::c_int,
    pub unk369: ::std::os::raw::c_int,
    pub unk370: ::std::os::raw::c_int,
    pub unk371: ::std::os::raw::c_int,
    pub unk372: ::std::os::raw::c_int,
    pub unk373: ::std::os::raw::c_int,
    pub unk374: ::std::os::raw::c_int,
    pub unk375: ::std::os::raw::c_int,
    pub unk376: ::std::os::raw::c_int,
    pub unk377: ::std::os::raw::c_int,
    pub unk378: ::std::os::raw::c_int,
    pub unk379: ::std::os::raw::c_int,
    pub unk380: ::std::os::raw::c_int,
    pub unk381: ::std::os::raw::c_int,
    pub unk382: ::std::os::raw::c_int,
    pub unk383: ::std::os::raw::c_int,
    pub unk384: ::std::os::raw::c_int,
    pub unk385: ::std::os::raw::c_int,
    pub unk386: ::std::os::raw::c_int,
    pub unk387: ::std::os::raw::c_int,
    pub unk388: ::std::os::raw::c_int,
    pub unk389: ::std::os::raw::c_int,
    pub unk390: ::std::os::raw::c_int,
    pub unk391: ::std::os::raw::c_int,
    pub unk392: ::std::os::raw::c_int,
    pub unk393: ::std::os::raw::c_int,
    pub unk394: ::std::os::raw::c_int,
    pub unk395: ::std::os::raw::c_int,
    pub unk396: ::std::os::raw::c_int,
    pub unk397: ::std::os::raw::c_int,
    pub unk398: ::std::os::raw::c_int,
    pub unk399: ::std::os::raw::c_int,
    pub unk400: ::std::os::raw::c_int,
    pub unk401: ::std::os::raw::c_int,
    pub unk402: ::std::os::raw::c_int,
    pub unk403: ::std::os::raw::c_int,
    pub unk404: ::std::os::raw::c_int,
    pub unk405: ::std::os::raw::c_int,
    pub unk406: ::std::os::raw::c_int,
    pub unk407: ::std::os::raw::c_int,
    pub unk408: ::std::os::raw::c_int,
    pub unk409: ::std::os::raw::c_int,
    pub unk410: ::std::os::raw::c_int,
    pub unk411: ::std::os::raw::c_int,
    pub unk412: ::std::os::raw::c_int,
    pub unk413: ::std::os::raw::c_int,
    pub unk414: ::std::os::raw::c_int,
    pub unk415: ::std::os::raw::c_int,
    pub unk416: ::std::os::raw::c_int,
    pub unk417: ::std::os::raw::c_int,
    pub unk418: ::std::os::raw::c_int,
    pub unk419: ::std::os::raw::c_int,
    pub unk420: ::std::os::raw::c_int,
    pub unk421: ::std::os::raw::c_int,
    pub unk422: ::std::os::raw::c_int,
    pub unk423: ::std::os::raw::c_int,
    pub unk424: ::std::os::raw::c_int,
    pub unk425: ::std::os::raw::c_int,
    pub unk426: ::std::os::raw::c_int,
    pub unk427: ::std::os::raw::c_int,
    pub unk428: ::std::os::raw::c_int,
    pub unk429: ::std::os::raw::c_int,
    pub unk430: ::std::os::raw::c_int,
    pub unk431: ::std::os::raw::c_int,
    pub unk432: ::std::os::raw::c_int,
    pub unk433: ::std::os::raw::c_int,
    pub unk434: ::std::os::raw::c_int,
    pub unk435: ::std::os::raw::c_int,
    pub unk436: ::std::os::raw::c_int,
    pub unk437: ::std::os::raw::c_int,
    pub unk438: ::std::os::raw::c_int,
    pub unk439: ::std::os::raw::c_int,
    pub unk440: ::std::os::raw::c_int,
    pub unk441: ::std::os::raw::c_int,
    pub unk442: ::std::os::raw::c_int,
    pub unk443: ::std::os::raw::c_int,
    pub unk444: ::std::os::raw::c_int,
    pub unk445: ::std::os::raw::c_int,
    pub unk446: ::std::os::raw::c_int,
    pub unk447: ::std::os::raw::c_int,
    pub unk448: ::std::os::raw::c_int,
    pub unk449: ::std::os::raw::c_int,
    pub unk450: ::std::os::raw::c_int,
    pub unk451: ::std::os::raw::c_int,
    pub unk452: ::std::os::raw::c_int,
    pub unk453: ::std::os::raw::c_int,
    pub unk454: ::std::os::raw::c_int,
    pub unk455: ::std::os::raw::c_int,
    pub unk456: ::std::os::raw::c_int,
    pub unk457: ::std::os::raw::c_int,
    pub unk458: ::std::os::raw::c_int,
    pub unk459: ::std::os::raw::c_int,
    pub unk460: ::std::os::raw::c_int,
    pub unk461: ::std::os::raw::c_int,
    pub unk462: ::std::os::raw::c_int,
    pub unk463: ::std::os::raw::c_int,
    pub unk464: ::std::os::raw::c_int,
    pub unk465: ::std::os::raw::c_int,
    pub unk466: ::std::os::raw::c_int,
    pub unk467: ::std::os::raw::c_int,
    pub unk468: ::std::os::raw::c_int,
    pub unk469: ::std::os::raw::c_int,
    pub unk470: ::std::os::raw::c_int,
    pub unk471: ::std::os::raw::c_int,
    pub unk472: ::std::os::raw::c_int,
    pub unk473: ::std::os::raw::c_int,
    pub unk474: ::std::os::raw::c_int,
    pub unk475: ::std::os::raw::c_int,
    pub unk476: ::std::os::raw::c_int,
    pub unk477: ::std::os::raw::c_int,
    pub unk478: ::std::os::raw::c_int,
    pub unk479: ::std::os::raw::c_int,
    pub unk480: ::std::os::raw::c_int,
    pub unk481: ::std::os::raw::c_int,
    pub unk482: ::std::os::raw::c_int,
    pub unk483: ::std::os::raw::c_int,
    pub unk484: ::std::os::raw::c_int,
    pub unk485: ::std::os::raw::c_int,
    pub unk486: ::std::os::raw::c_int,
    pub unk487: ::std::os::raw::c_int,
    pub unk488: ::std::os::raw::c_int,
    pub unk489: ::std::os::raw::c_int,
    pub unk490: ::std::os::raw::c_int,
    pub unk491: ::std::os::raw::c_int,
    pub unk492: ::std::os::raw::c_int,
    pub unk493: ::std::os::raw::c_int,
    pub unk494: ::std::os::raw::c_int,
    pub unk495: ::std::os::raw::c_int,
    pub unk496: ::std::os::raw::c_int,
    pub unk497: ::std::os::raw::c_int,
    pub unk498: ::std::os::raw::c_int,
    pub unk499: ::std::os::raw::c_int,
    pub unk500: ::std::os::raw::c_int,
    pub unk501: ::std::os::raw::c_int,
    pub unk502: ::std::os::raw::c_int,
    pub unk503: ::std::os::raw::c_int,
    pub unk504: ::std::os::raw::c_int,
    pub unk505: ::std::os::raw::c_int,
    pub unk506: ::std::os::raw::c_int,
    pub unk507: ::std::os::raw::c_int,
    pub unk508: ::std::os::raw::c_int,
    pub unk509: ::std::os::raw::c_int,
    pub unk510: ::std::os::raw::c_int,
    pub unk511: ::std::os::raw::c_int,
    pub unk512: ::std::os::raw::c_int,
    pub unk513: ::std::os::raw::c_int,
    pub unk514: ::std::os::raw::c_int,
    pub unk515: ::std::os::raw::c_int,
    pub unk516: ::std::os::raw::c_int,
    pub unk517: ::std::os::raw::c_int,
    pub unk518: ::std::os::raw::c_int,
    pub unk519: ::std::os::raw::c_int,
    pub unk520: ::std::os::raw::c_int,
    pub unk521: ::std::os::raw::c_int,
    pub unk522: ::std::os::raw::c_int,
    pub unk523: ::std::os::raw::c_int,
    pub unk524: ::std::os::raw::c_int,
    pub unk525: ::std::os::raw::c_int,
    pub unk526: ::std::os::raw::c_int,
    pub unk527: ::std::os::raw::c_int,
    pub unk528: ::std::os::raw::c_int,
    pub unk529: ::std::os::raw::c_int,
    pub unk530: ::std::os::raw::c_int,
    pub unk531: ::std::os::raw::c_int,
    pub unk532: ::std::os::raw::c_int,
    pub unk533: ::std::os::raw::c_int,
    pub unk534: ::std::os::raw::c_int,
    pub unk535: ::std::os::raw::c_int,
    pub unk536: ::std::os::raw::c_int,
    pub unk537: ::std::os::raw::c_int,
    pub unk538: ::std::os::raw::c_int,
    pub unk539: ::std::os::raw::c_int,
    pub unk540: ::std::os::raw::c_int,
    pub unk541: ::std::os::raw::c_int,
    pub unk542: ::std::os::raw::c_int,
    pub unk543: ::std::os::raw::c_int,
    pub unk544: ::std::os::raw::c_int,
    pub unk545: ::std::os::raw::c_int,
    pub unk546: ::std::os::raw::c_int,
    pub unk547: ::std::os::raw::c_int,
    pub unk548: ::std::os::raw::c_int,
    pub unk549: ::std::os::raw::c_int,
    pub unk550: ::std::os::raw::c_int,
    pub unk551: ::std::os::raw::c_int,
    pub unk552: ::std::os::raw::c_int,
    pub unk553: ::std::os::raw::c_int,
    pub unk554: ::std::os::raw::c_int,
    pub unk555: ::std::os::raw::c_int,
    pub unk556: ::std::os::raw::c_int,
    pub unk557: ::std::os::raw::c_int,
    pub unk558: ::std::os::raw::c_int,
    pub unk559: ::std::os::raw::c_int,
    pub unk560: ::std::os::raw::c_int,
    pub unk561: ::std::os::raw::c_int,
    pub unk562: ::std::os::raw::c_int,
    pub unk563: ::std::os::raw::c_int,
    pub unk564: ::std::os::raw::c_int,
    pub unk565: ::std::os::raw::c_int,
    pub unk566: ::std::os::raw::c_int,
    pub unk567: ::std::os::raw::c_int,
    pub unk568: ::std::os::raw::c_int,
    pub unk569: ::std::os::raw::c_int,
    pub unk570: ::std::os::raw::c_int,
    pub unk571: ::std::os::raw::c_int,
    pub unk572: ::std::os::raw::c_int,
    pub unk573: ::std::os::raw::c_int,
    pub unk574: ::std::os::raw::c_int,
    pub unk575: ::std::os::raw::c_int,
    pub unk576: ::std::os::raw::c_int,
    pub unk577: ::std::os::raw::c_int,
    pub unk578: ::std::os::raw::c_int,
    pub unk579: ::std::os::raw::c_int,
    pub unk580: ::std::os::raw::c_int,
    pub unk581: ::std::os::raw::c_int,
    pub unk582: ::std::os::raw::c_int,
    pub unk583: ::std::os::raw::c_int,
    pub unk584: ::std::os::raw::c_int,
    pub unk585: ::std::os::raw::c_int,
    pub unk586: ::std::os::raw::c_int,
    pub unk587: ::std::os::raw::c_int,
    pub unk588: ::std::os::raw::c_int,
    pub unk589: ::std::os::raw::c_int,
    pub unk590: ::std::os::raw::c_int,
    pub unk591: ::std::os::raw::c_int,
    pub unk592: ::std::os::raw::c_int,
    pub unk593: ::std::os::raw::c_int,
    pub unk594: ::std::os::raw::c_int,
    pub unk595: ::std::os::raw::c_int,
    pub unk596: ::std::os::raw::c_int,
    pub unk597: ::std::os::raw::c_int,
    pub unk598: ::std::os::raw::c_int,
    pub unk599: ::std::os::raw::c_int,
    pub unk600: ::std::os::raw::c_int,
    pub unk601: ::std::os::raw::c_int,
    pub unk602: ::std::os::raw::c_int,
    pub unk603: ::std::os::raw::c_int,
    pub unk604: ::std::os::raw::c_int,
    pub unk605: ::std::os::raw::c_int,
    pub unk606: ::std::os::raw::c_int,
    pub unk607: ::std::os::raw::c_int,
    pub unk608: ::std::os::raw::c_int,
    pub unk609: ::std::os::raw::c_int,
    pub unk610: ::std::os::raw::c_int,
    pub unk611: ::std::os::raw::c_int,
    pub unk612: ::std::os::raw::c_int,
    pub unk613: ::std::os::raw::c_int,
    pub unk614: ::std::os::raw::c_int,
    pub unk615: ::std::os::raw::c_int,
    pub unk616: ::std::os::raw::c_int,
    pub unk617: ::std::os::raw::c_int,
    pub unk618: ::std::os::raw::c_int,
    pub unk619: ::std::os::raw::c_int,
    pub unk620: ::std::os::raw::c_int,
    pub unk621: ::std::os::raw::c_int,
    pub unk622: ::std::os::raw::c_int,
    pub unk623: ::std::os::raw::c_int,
    pub unk624: ::std::os::raw::c_int,
    pub unk625: ::std::os::raw::c_int,
    pub unk626: ::std::os::raw::c_int,
    pub unk627: ::std::os::raw::c_int,
    pub unk628: ::std::os::raw::c_int,
    pub unk629: ::std::os::raw::c_int,
    pub unk630: ::std::os::raw::c_int,
    pub unk631: ::std::os::raw::c_int,
    pub unk632: ::std::os::raw::c_int,
    pub unk633: ::std::os::raw::c_int,
    pub unk634: ::std::os::raw::c_int,
    pub unk635: ::std::os::raw::c_int,
    pub unk636: ::std::os::raw::c_int,
    pub unk637: ::std::os::raw::c_int,
    pub unk638: ::std::os::raw::c_int,
    pub unk639: ::std::os::raw::c_int,
    pub unk640: ::std::os::raw::c_int,
    pub unk641: ::std::os::raw::c_int,
    pub unk642: ::std::os::raw::c_int,
    pub unk643: ::std::os::raw::c_int,
    pub unk644: ::std::os::raw::c_int,
    pub unk645: ::std::os::raw::c_int,
    pub unk646: ::std::os::raw::c_int,
    pub unk647: ::std::os::raw::c_int,
    pub unk648: ::std::os::raw::c_int,
    pub unk649: ::std::os::raw::c_int,
    pub unk650: ::std::os::raw::c_int,
    pub unk651: ::std::os::raw::c_int,
    pub unk652: ::std::os::raw::c_int,
    pub unk653: ::std::os::raw::c_int,
    pub unk654: ::std::os::raw::c_int,
    pub unk655: ::std::os::raw::c_int,
    pub unk656: ::std::os::raw::c_int,
    pub unk657: ::std::os::raw::c_int,
    pub unk658: ::std::os::raw::c_int,
    pub unk659: ::std::os::raw::c_int,
    pub unk660: ::std::os::raw::c_int,
    pub unk661: ::std::os::raw::c_int,
    pub unk662: ::std::os::raw::c_int,
    pub unk663: ::std::os::raw::c_int,
    pub unk664: ::std::os::raw::c_int,
    pub unk665: ::std::os::raw::c_int,
    pub unk666: ::std::os::raw::c_int,
    pub unk667: ::std::os::raw::c_int,
    pub unk668: ::std::os::raw::c_int,
    pub unk669: ::std::os::raw::c_int,
    pub unk670: ::std::os::raw::c_int,
    pub unk671: ::std::os::raw::c_int,
    pub unk672: ::std::os::raw::c_int,
    pub unk673: ::std::os::raw::c_int,
    pub unk674: ::std::os::raw::c_int,
    pub unk675: ::std::os::raw::c_int,
    pub unk676: ::std::os::raw::c_int,
    pub unk677: ::std::os::raw::c_int,
    pub unk678: ::std::os::raw::c_int,
    pub unk679: ::std::os::raw::c_int,
    pub unk680: ::std::os::raw::c_int,
    pub unk681: ::std::os::raw::c_int,
    pub unk682: ::std::os::raw::c_int,
    pub unk683: ::std::os::raw::c_int,
    pub unk684: ::std::os::raw::c_int,
    pub unk685: ::std::os::raw::c_int,
    pub unk686: ::std::os::raw::c_int,
    pub unk687: ::std::os::raw::c_int,
    pub unk688: ::std::os::raw::c_int,
    pub unk689: ::std::os::raw::c_int,
    pub unk690: ::std::os::raw::c_int,
    pub unk691: ::std::os::raw::c_int,
    pub unk692: ::std::os::raw::c_int,
    pub unk693: ::std::os::raw::c_int,
    pub unk694: ::std::os::raw::c_int,
    pub unk695: ::std::os::raw::c_int,
    pub unk696: ::std::os::raw::c_int,
    pub unk697: ::std::os::raw::c_int,
    pub unk698: ::std::os::raw::c_int,
    pub unk699: ::std::os::raw::c_int,
    pub unk700: ::std::os::raw::c_int,
    pub unk701: ::std::os::raw::c_int,
    pub unk702: ::std::os::raw::c_int,
    pub unk703: ::std::os::raw::c_int,
    pub unk704: ::std::os::raw::c_int,
    pub unk705: ::std::os::raw::c_int,
    pub unk706: ::std::os::raw::c_int,
    pub unk707: ::std::os::raw::c_int,
    pub unk708: ::std::os::raw::c_int,
    pub unk709: ::std::os::raw::c_int,
    pub unk710: ::std::os::raw::c_int,
    pub unk711: ::std::os::raw::c_int,
    pub unk712: ::std::os::raw::c_int,
    pub unk713: ::std::os::raw::c_int,
    pub unk714: ::std::os::raw::c_int,
    pub unk715: ::std::os::raw::c_int,
    pub unk716: ::std::os::raw::c_int,
    pub unk717: ::std::os::raw::c_int,
    pub unk718: ::std::os::raw::c_int,
    pub unk719: ::std::os::raw::c_int,
    pub unk720: ::std::os::raw::c_int,
    pub unk721: ::std::os::raw::c_int,
    pub unk722: ::std::os::raw::c_int,
    pub unk723: ::std::os::raw::c_int,
    pub unk724: ::std::os::raw::c_int,
    pub unk725: ::std::os::raw::c_int,
    pub unk726: ::std::os::raw::c_int,
    pub unk727: ::std::os::raw::c_int,
    pub unk728: ::std::os::raw::c_int,
    pub unk729: ::std::os::raw::c_int,
    pub unk730: ::std::os::raw::c_int,
    pub unk731: ::std::os::raw::c_int,
    pub unk732: ::std::os::raw::c_int,
    pub unk733: ::std::os::raw::c_int,
    pub unk734: ::std::os::raw::c_int,
    pub unk735: ::std::os::raw::c_int,
    pub unk736: ::std::os::raw::c_int,
    pub unk737: ::std::os::raw::c_int,
    pub unk738: ::std::os::raw::c_int,
    pub unk739: ::std::os::raw::c_int,
    pub unk740: ::std::os::raw::c_int,
    pub unk741: ::std::os::raw::c_int,
    pub unk742: ::std::os::raw::c_int,
    pub unk743: ::std::os::raw::c_int,
    pub unk744: ::std::os::raw::c_int,
    pub unk745: ::std::os::raw::c_int,
    pub unk746: ::std::os::raw::c_int,
    pub unk747: ::std::os::raw::c_int,
    pub unk748: ::std::os::raw::c_int,
    pub unk749: ::std::os::raw::c_int,
    pub unk750: ::std::os::raw::c_int,
    pub unk751: ::std::os::raw::c_int,
    pub unk752: ::std::os::raw::c_int,
    pub unk753: ::std::os::raw::c_int,
    pub unk754: ::std::os::raw::c_int,
    pub unk755: ::std::os::raw::c_int,
    pub unk756: ::std::os::raw::c_int,
    pub unk757: ::std::os::raw::c_int,
    pub unk758: ::std::os::raw::c_int,
    pub unk759: ::std::os::raw::c_int,
    pub unk760: ::std::os::raw::c_int,
    pub unk761: ::std::os::raw::c_int,
    pub unk762: ::std::os::raw::c_int,
    pub unk763: ::std::os::raw::c_int,
    pub unk764: ::std::os::raw::c_int,
    pub unk765: ::std::os::raw::c_int,
    pub unk766: ::std::os::raw::c_int,
    pub unk767: ::std::os::raw::c_int,
    pub unk768: ::std::os::raw::c_int,
    pub unk769: ::std::os::raw::c_int,
    pub unk770: ::std::os::raw::c_int,
    pub unk771: ::std::os::raw::c_int,
    pub unk772: ::std::os::raw::c_int,
    pub unk773: ::std::os::raw::c_int,
    pub unk774: ::std::os::raw::c_int,
    pub unk775: ::std::os::raw::c_int,
    pub unk776: ::std::os::raw::c_int,
    pub unk777: ::std::os::raw::c_int,
    pub unk778: ::std::os::raw::c_int,
    pub unk779: ::std::os::raw::c_int,
    pub unk780: ::std::os::raw::c_int,
    pub unk781: ::std::os::raw::c_int,
    pub unk782: ::std::os::raw::c_int,
    pub unk783: ::std::os::raw::c_int,
    pub unk784: ::std::os::raw::c_int,
    pub unk785: ::std::os::raw::c_int,
    pub unk786: ::std::os::raw::c_int,
    pub unk787: ::std::os::raw::c_int,
    pub unk788: ::std::os::raw::c_int,
    pub unk789: ::std::os::raw::c_int,
    pub unk790: ::std::os::raw::c_int,
    pub unk791: ::std::os::raw::c_int,
    pub unk792: ::std::os::raw::c_int,
    pub unk793: ::std::os::raw::c_int,
    pub unk794: ::std::os::raw::c_int,
    pub unk795: ::std::os::raw::c_int,
    pub unk796: ::std::os::raw::c_int,
    pub unk797: ::std::os::raw::c_int,
    pub unk798: ::std::os::raw::c_int,
    pub unk799: ::std::os::raw::c_int,
    pub unk800: ::std::os::raw::c_int,
    pub unk801: ::std::os::raw::c_int,
    pub unk802: ::std::os::raw::c_int,
    pub unk803: ::std::os::raw::c_int,
    pub unk804: ::std::os::raw::c_int,
    pub unk805: ::std::os::raw::c_int,
    pub unk806: ::std::os::raw::c_int,
    pub unk807: ::std::os::raw::c_int,
    pub unk808: ::std::os::raw::c_int,
    pub unk809: ::std::os::raw::c_int,
    pub unk810: ::std::os::raw::c_int,
    pub unk811: ::std::os::raw::c_int,
    pub unk812: ::std::os::raw::c_int,
    pub unk813: ::std::os::raw::c_int,
    pub unk814: ::std::os::raw::c_int,
    pub unk815: ::std::os::raw::c_int,
    pub unk816: ::std::os::raw::c_int,
    pub unk817: ::std::os::raw::c_int,
    pub unk818: ::std::os::raw::c_int,
    pub unk819: ::std::os::raw::c_int,
    pub unk820: ::std::os::raw::c_int,
    pub unk821: ::std::os::raw::c_int,
    pub unk822: ::std::os::raw::c_int,
    pub unk823: ::std::os::raw::c_int,
    pub unk824: ::std::os::raw::c_int,
    pub unk825: ::std::os::raw::c_int,
    pub unk826: ::std::os::raw::c_int,
    pub unk827: ::std::os::raw::c_int,
    pub unk828: ::std::os::raw::c_int,
    pub unk829: ::std::os::raw::c_int,
    pub unk830: ::std::os::raw::c_int,
    pub unk831: ::std::os::raw::c_int,
    pub unk832: ::std::os::raw::c_int,
    pub unk833: ::std::os::raw::c_int,
    pub unk834: ::std::os::raw::c_int,
    pub unk835: ::std::os::raw::c_int,
    pub unk836: ::std::os::raw::c_int,
    pub unk837: ::std::os::raw::c_int,
    pub unk838: ::std::os::raw::c_int,
    pub unk839: ::std::os::raw::c_int,
    pub unk840: ::std::os::raw::c_int,
    pub unk841: ::std::os::raw::c_int,
    pub unk842: ::std::os::raw::c_int,
    pub unk843: ::std::os::raw::c_int,
    pub unk844: ::std::os::raw::c_int,
    pub unk845: ::std::os::raw::c_int,
    pub unk846: ::std::os::raw::c_int,
    pub unk847: ::std::os::raw::c_int,
    pub unk848: ::std::os::raw::c_int,
    pub unk849: ::std::os::raw::c_int,
    pub unk850: ::std::os::raw::c_int,
    pub unk851: ::std::os::raw::c_int,
    pub unk852: ::std::os::raw::c_int,
    pub unk853: ::std::os::raw::c_int,
    pub unk854: ::std::os::raw::c_int,
    pub unk855: ::std::os::raw::c_int,
    pub unk856: ::std::os::raw::c_int,
    pub unk857: ::std::os::raw::c_int,
    pub unk858: ::std::os::raw::c_int,
    pub unk859: ::std::os::raw::c_int,
    pub unk860: ::std::os::raw::c_int,
    pub unk861: ::std::os::raw::c_int,
    pub unk862: ::std::os::raw::c_int,
    pub unk863: ::std::os::raw::c_int,
    pub unk864: ::std::os::raw::c_int,
    pub unk865: ::std::os::raw::c_int,
    pub unk866: ::std::os::raw::c_int,
    pub unk867: ::std::os::raw::c_int,
    pub unk868: ::std::os::raw::c_int,
    pub unk869: ::std::os::raw::c_int,
    pub unk870: ::std::os::raw::c_int,
    pub unk871: ::std::os::raw::c_int,
    pub unk872: ::std::os::raw::c_int,
    pub unk873: ::std::os::raw::c_int,
    pub unk874: ::std::os::raw::c_int,
    pub unk875: ::std::os::raw::c_int,
    pub unk876: ::std::os::raw::c_int,
    pub unk877: ::std::os::raw::c_int,
    pub unk878: ::std::os::raw::c_int,
    pub unk879: ::std::os::raw::c_int,
    pub unk880: ::std::os::raw::c_int,
    pub unk881: ::std::os::raw::c_int,
    pub unk882: ::std::os::raw::c_int,
    pub unk883: ::std::os::raw::c_int,
    pub unk884: ::std::os::raw::c_int,
    pub unk885: ::std::os::raw::c_int,
    pub unk886: ::std::os::raw::c_int,
    pub unk887: ::std::os::raw::c_int,
    pub unk888: ::std::os::raw::c_int,
    pub unk889: ::std::os::raw::c_int,
    pub unk890: ::std::os::raw::c_int,
    pub unk891: ::std::os::raw::c_int,
    pub unk892: ::std::os::raw::c_int,
    pub unk893: ::std::os::raw::c_int,
    pub unk894: ::std::os::raw::c_int,
    pub unk895: ::std::os::raw::c_int,
    pub unk896: ::std::os::raw::c_int,
    pub unk897: ::std::os::raw::c_int,
    pub unk898: ::std::os::raw::c_int,
    pub unk899: ::std::os::raw::c_int,
    pub unk900: ::std::os::raw::c_int,
    pub unk901: ::std::os::raw::c_int,
    pub unk902: ::std::os::raw::c_int,
    pub unk903: ::std::os::raw::c_int,
    pub unk904: ::std::os::raw::c_int,
    pub unk905: ::std::os::raw::c_int,
    pub unk906: ::std::os::raw::c_int,
    pub unk907: ::std::os::raw::c_int,
    pub unk908: ::std::os::raw::c_int,
    pub unk909: ::std::os::raw::c_int,
    pub unk910: ::std::os::raw::c_int,
    pub unk911: ::std::os::raw::c_int,
    pub unk912: ::std::os::raw::c_int,
    pub unk913: ::std::os::raw::c_int,
    pub unk914: ::std::os::raw::c_int,
    pub unk915: ::std::os::raw::c_int,
    pub unk916: ::std::os::raw::c_int,
    pub unk917: ::std::os::raw::c_int,
    pub unk918: ::std::os::raw::c_int,
    pub unk919: ::std::os::raw::c_int,
    pub unk920: ::std::os::raw::c_int,
    pub unk921: ::std::os::raw::c_int,
    pub unk922: ::std::os::raw::c_int,
    pub unk923: ::std::os::raw::c_int,
    pub unk924: ::std::os::raw::c_int,
    pub unk925: ::std::os::raw::c_int,
    pub unk926: ::std::os::raw::c_int,
    pub unk927: ::std::os::raw::c_int,
    pub unk928: ::std::os::raw::c_int,
    pub unk929: ::std::os::raw::c_int,
    pub unk930: ::std::os::raw::c_int,
    pub unk931: ::std::os::raw::c_int,
    pub unk932: ::std::os::raw::c_int,
    pub unk933: ::std::os::raw::c_int,
    pub unk934: ::std::os::raw::c_int,
    pub unk935: ::std::os::raw::c_int,
    pub unk936: ::std::os::raw::c_int,
    pub unk937: ::std::os::raw::c_int,
    pub unk938: ::std::os::raw::c_int,
    pub unk939: ::std::os::raw::c_int,
    pub unk940: ::std::os::raw::c_int,
    pub unk941: ::std::os::raw::c_int,
    pub unk942: ::std::os::raw::c_int,
    pub unk943: ::std::os::raw::c_int,
    pub unk944: ::std::os::raw::c_int,
    pub unk945: ::std::os::raw::c_int,
    pub unk946: ::std::os::raw::c_int,
    pub unk947: ::std::os::raw::c_int,
    pub unk948: ::std::os::raw::c_int,
    pub unk949: ::std::os::raw::c_int,
    pub unk950: ::std::os::raw::c_int,
    pub unk951: ::std::os::raw::c_int,
    pub unk952: ::std::os::raw::c_int,
    pub unk953: ::std::os::raw::c_int,
    pub unk954: ::std::os::raw::c_int,
    pub unk955: ::std::os::raw::c_int,
    pub unk956: ::std::os::raw::c_int,
    pub unk957: ::std::os::raw::c_int,
    pub unk958: ::std::os::raw::c_int,
    pub unk959: ::std::os::raw::c_int,
    pub unk960: ::std::os::raw::c_int,
    pub unk961: ::std::os::raw::c_int,
    pub unk962: ::std::os::raw::c_int,
    pub unk963: ::std::os::raw::c_int,
    pub unk964: ::std::os::raw::c_int,
    pub unk965: ::std::os::raw::c_int,
    pub unk966: ::std::os::raw::c_int,
    pub unk967: ::std::os::raw::c_int,
    pub unk968: ::std::os::raw::c_int,
    pub unk969: ::std::os::raw::c_int,
    pub unk970: ::std::os::raw::c_int,
    pub unk971: ::std::os::raw::c_int,
    pub unk972: ::std::os::raw::c_int,
    pub unk973: ::std::os::raw::c_int,
    pub unk974: ::std::os::raw::c_int,
    pub unk975: ::std::os::raw::c_int,
    pub unk976: ::std::os::raw::c_int,
    pub unk977: ::std::os::raw::c_int,
    pub unk978: ::std::os::raw::c_int,
    pub unk979: ::std::os::raw::c_int,
    pub unk980: ::std::os::raw::c_int,
    pub unk981: ::std::os::raw::c_int,
    pub unk982: ::std::os::raw::c_int,
    pub unk983: ::std::os::raw::c_int,
    pub unk984: ::std::os::raw::c_int,
    pub unk985: ::std::os::raw::c_int,
    pub unk986: ::std::os::raw::c_int,
    pub unk987: ::std::os::raw::c_int,
    pub unk988: ::std::os::raw::c_int,
    pub unk989: ::std::os::raw::c_int,
    pub unk990: ::std::os::raw::c_int,
    pub unk991: ::std::os::raw::c_int,
    pub unk992: ::std::os::raw::c_int,
    pub unk993: ::std::os::raw::c_int,
    pub unk994: ::std::os::raw::c_int,
    pub unk995: ::std::os::raw::c_int,
    pub unk996: ::std::os::raw::c_int,
    pub unk997: ::std::os::raw::c_int,
    pub unk998: ::std::os::raw::c_int,
    pub unk999: ::std::os::raw::c_int,
    pub unk1000: ::std::os::raw::c_int,
    pub unk1001: ::std::os::raw::c_int,
    pub unk1002: ::std::os::raw::c_int,
    pub unk1003: ::std::os::raw::c_int,
    pub unk1004: ::std::os::raw::c_int,
    pub unk1005: ::std::os::raw::c_int,
    pub unk1006: ::std::os::raw::c_int,
    pub unk1007: ::std::os::raw::c_int,
    pub unk1008: ::std::os::raw::c_int,
    pub unk1009: ::std::os::raw::c_int,
    pub unk1010: ::std::os::raw::c_int,
    pub unk1011: ::std::os::raw::c_int,
    pub unk1012: ::std::os::raw::c_int,
    pub unk1013: ::std::os::raw::c_int,
    pub unk1014: ::std::os::raw::c_int,
    pub unk1015: ::std::os::raw::c_int,
    pub unk1016: ::std::os::raw::c_int,
    pub unk1017: ::std::os::raw::c_int,
    pub unk1018: ::std::os::raw::c_int,
    pub unk1019: ::std::os::raw::c_int,
    pub unk1020: ::std::os::raw::c_int,
    pub unk1021: ::std::os::raw::c_int,
    pub unk1022: ::std::os::raw::c_int,
    pub unk1023: ::std::os::raw::c_int,
    pub unk1024: ::std::os::raw::c_int,
    pub unk1025: ::std::os::raw::c_int,
    pub unk1026: ::std::os::raw::c_int,
    pub unk1027: ::std::os::raw::c_int,
    pub unk1028: ::std::os::raw::c_int,
    pub unk1029: ::std::os::raw::c_int,
    pub unk1030: ::std::os::raw::c_int,
    pub unk1031: ::std::os::raw::c_int,
    pub unk1032: ::std::os::raw::c_int,
    pub unk1033: ::std::os::raw::c_int,
    pub unk1034: ::std::os::raw::c_int,
    pub unk1035: ::std::os::raw::c_int,
    pub unk1036: ::std::os::raw::c_int,
    pub unk1037: ::std::os::raw::c_int,
    pub unk1038: ::std::os::raw::c_int,
    pub unk1039: ::std::os::raw::c_int,
    pub unk1040: ::std::os::raw::c_int,
    pub unk1041: ::std::os::raw::c_int,
    pub unk1042: ::std::os::raw::c_int,
    pub unk1043: ::std::os::raw::c_int,
    pub unk1044: ::std::os::raw::c_int,
    pub unk1045: ::std::os::raw::c_int,
    pub unk1046: ::std::os::raw::c_int,
    pub unk1047: ::std::os::raw::c_int,
    pub unk1048: ::std::os::raw::c_int,
    pub unk1049: ::std::os::raw::c_int,
    pub unk1050: ::std::os::raw::c_int,
    pub unk1051: ::std::os::raw::c_int,
    pub unk1052: ::std::os::raw::c_int,
    pub unk1053: ::std::os::raw::c_int,
    pub unk1054: ::std::os::raw::c_int,
    pub unk1055: ::std::os::raw::c_int,
    pub unk1056: ::std::os::raw::c_int,
    pub unk1057: ::std::os::raw::c_int,
    pub unk1058: ::std::os::raw::c_int,
    pub unk1059: ::std::os::raw::c_int,
    pub unk1060: ::std::os::raw::c_int,
    pub unk1061: ::std::os::raw::c_int,
    pub unk1062: ::std::os::raw::c_int,
    pub unk1063: ::std::os::raw::c_int,
    pub unk1064: ::std::os::raw::c_int,
    pub unk1065: ::std::os::raw::c_int,
    pub unk1066: ::std::os::raw::c_int,
    pub unk1067: ::std::os::raw::c_int,
    pub unk1068: ::std::os::raw::c_int,
    pub unk1069: ::std::os::raw::c_int,
    pub unk1070: ::std::os::raw::c_int,
    pub unk1071: ::std::os::raw::c_int,
    pub unk1072: ::std::os::raw::c_int,
    pub unk1073: ::std::os::raw::c_int,
    pub unk1074: ::std::os::raw::c_int,
    pub unk1075: ::std::os::raw::c_int,
    pub unk1076: ::std::os::raw::c_int,
    pub unk1077: ::std::os::raw::c_int,
    pub unk1078: ::std::os::raw::c_int,
    pub unk1079: ::std::os::raw::c_int,
    pub unk1080: ::std::os::raw::c_int,
    pub unk1081: ::std::os::raw::c_int,
    pub unk1082: ::std::os::raw::c_int,
    pub unk1083: ::std::os::raw::c_int,
    pub unk1084: ::std::os::raw::c_int,
    pub unk1085: ::std::os::raw::c_int,
    pub unk1086: ::std::os::raw::c_int,
    pub unk1087: ::std::os::raw::c_int,
    pub unk1088: ::std::os::raw::c_int,
    pub unk1089: ::std::os::raw::c_int,
    pub unk1090: ::std::os::raw::c_int,
    pub unk1091: ::std::os::raw::c_int,
    pub unk1092: ::std::os::raw::c_int,
    pub unk1093: ::std::os::raw::c_int,
    pub unk1094: ::std::os::raw::c_int,
    pub unk1095: ::std::os::raw::c_int,
    pub unk1096: ::std::os::raw::c_int,
    pub unk1097: ::std::os::raw::c_int,
    pub unk1098: ::std::os::raw::c_int,
    pub unk1099: ::std::os::raw::c_int,
    pub unk1100: ::std::os::raw::c_int,
    pub unk1101: ::std::os::raw::c_int,
    pub unk1102: ::std::os::raw::c_int,
    pub unk1103: ::std::os::raw::c_int,
    pub unk1104: ::std::os::raw::c_int,
    pub unk1105: ::std::os::raw::c_int,
    pub unk1106: ::std::os::raw::c_int,
    pub unk1107: ::std::os::raw::c_int,
    pub unk1108: ::std::os::raw::c_int,
    pub unk1109: ::std::os::raw::c_int,
    pub unk1110: ::std::os::raw::c_int,
    pub unk1111: ::std::os::raw::c_int,
    pub unk1112: ::std::os::raw::c_int,
    pub unk1113: ::std::os::raw::c_int,
    pub unk1114: ::std::os::raw::c_int,
    pub unk1115: ::std::os::raw::c_int,
    pub unk1116: ::std::os::raw::c_int,
    pub unk1117: ::std::os::raw::c_int,
    pub unk1118: ::std::os::raw::c_int,
    pub unk1119: ::std::os::raw::c_int,
    pub unk1120: ::std::os::raw::c_int,
    pub unk1121: ::std::os::raw::c_int,
    pub unk1122: ::std::os::raw::c_int,
    pub unk1123: ::std::os::raw::c_int,
    pub unk1124: ::std::os::raw::c_int,
    pub unk1125: ::std::os::raw::c_int,
    pub unk1126: ::std::os::raw::c_int,
    pub unk1127: ::std::os::raw::c_int,
    pub unk1128: ::std::os::raw::c_int,
    pub unk1129: ::std::os::raw::c_int,
    pub unk1130: ::std::os::raw::c_int,
    pub unk1131: ::std::os::raw::c_int,
    pub unk1132: ::std::os::raw::c_int,
    pub unk1133: ::std::os::raw::c_int,
    pub unk1134: ::std::os::raw::c_int,
    pub unk1135: ::std::os::raw::c_int,
    pub unk1136: ::std::os::raw::c_int,
    pub unk1137: ::std::os::raw::c_int,
    pub unk1138: ::std::os::raw::c_int,
    pub unk1139: ::std::os::raw::c_int,
    pub unk1140: ::std::os::raw::c_int,
    pub unk1141: ::std::os::raw::c_int,
    pub unk1142: ::std::os::raw::c_int,
    pub unk1143: ::std::os::raw::c_int,
    pub unk1144: ::std::os::raw::c_int,
    pub unk1145: ::std::os::raw::c_int,
    pub unk1146: ::std::os::raw::c_int,
    pub unk1147: ::std::os::raw::c_int,
    pub unk1148: ::std::os::raw::c_int,
    pub unk1149: ::std::os::raw::c_int,
    pub unk1150: ::std::os::raw::c_int,
    pub unk1151: ::std::os::raw::c_int,
    pub unk1152: ::std::os::raw::c_int,
    pub unk1153: ::std::os::raw::c_int,
    pub unk1154: ::std::os::raw::c_int,
    pub unk1155: ::std::os::raw::c_int,
    pub unk1156: ::std::os::raw::c_int,
    pub unk1157: ::std::os::raw::c_int,
    pub unk1158: ::std::os::raw::c_int,
    pub unk1159: ::std::os::raw::c_int,
    pub unk1160: ::std::os::raw::c_int,
    pub unk1161: ::std::os::raw::c_int,
    pub unk1162: ::std::os::raw::c_int,
    pub unk1163: ::std::os::raw::c_int,
    pub unk1164: ::std::os::raw::c_int,
    pub unk1165: ::std::os::raw::c_int,
    pub unk1166: ::std::os::raw::c_int,
    pub unk1167: ::std::os::raw::c_int,
    pub unk1168: ::std::os::raw::c_int,
    pub unk1169: ::std::os::raw::c_int,
    pub unk1170: ::std::os::raw::c_int,
    pub unk1171: ::std::os::raw::c_int,
    pub unk1172: ::std::os::raw::c_int,
    pub unk1173: ::std::os::raw::c_int,
    pub unk1174: ::std::os::raw::c_int,
    pub unk1175: ::std::os::raw::c_int,
    pub unk1176: ::std::os::raw::c_int,
    pub unk1177: ::std::os::raw::c_int,
    pub unk1178: ::std::os::raw::c_int,
    pub unk1179: ::std::os::raw::c_int,
    pub unk1180: ::std::os::raw::c_int,
    pub unk1181: ::std::os::raw::c_int,
    pub unk1182: ::std::os::raw::c_int,
    pub unk1183: ::std::os::raw::c_int,
    pub unk1184: ::std::os::raw::c_int,
    pub unk1185: ::std::os::raw::c_int,
    pub unk1186: ::std::os::raw::c_int,
    pub unk1187: ::std::os::raw::c_int,
    pub unk1188: ::std::os::raw::c_int,
    pub unk1189: ::std::os::raw::c_int,
    pub unk1190: ::std::os::raw::c_int,
    pub unk1191: ::std::os::raw::c_int,
    pub unk1192: ::std::os::raw::c_int,
    pub unk1193: ::std::os::raw::c_int,
    pub unk1194: ::std::os::raw::c_int,
    pub unk1195: ::std::os::raw::c_int,
    pub unk1196: ::std::os::raw::c_int,
    pub unk1197: ::std::os::raw::c_int,
    pub unk1198: ::std::os::raw::c_int,
    pub unk1199: ::std::os::raw::c_int,
    pub unk1200: ::std::os::raw::c_int,
    pub unk1201: ::std::os::raw::c_int,
    pub unk1202: ::std::os::raw::c_int,
    pub unk1203: ::std::os::raw::c_int,
    pub unk1204: ::std::os::raw::c_int,
    pub unk1205: ::std::os::raw::c_int,
    pub unk1206: ::std::os::raw::c_int,
    pub unk1207: ::std::os::raw::c_int,
    pub unk1208: ::std::os::raw::c_int,
    pub unk1209: ::std::os::raw::c_int,
    pub unk1210: ::std::os::raw::c_int,
    pub unk1211: ::std::os::raw::c_int,
    pub unk1212: ::std::os::raw::c_int,
    pub unk1213: ::std::os::raw::c_int,
    pub unk1214: ::std::os::raw::c_int,
    pub unk1215: ::std::os::raw::c_int,
    pub unk1216: ::std::os::raw::c_int,
    pub unk1217: ::std::os::raw::c_int,
    pub unk1218: ::std::os::raw::c_int,
    pub unk1219: ::std::os::raw::c_int,
    pub unk1220: ::std::os::raw::c_int,
    pub unk1221: ::std::os::raw::c_int,
    pub unk1222: ::std::os::raw::c_int,
    pub unk1223: ::std::os::raw::c_int,
    pub unk1224: ::std::os::raw::c_int,
    pub unk1225: ::std::os::raw::c_int,
    pub unk1226: ::std::os::raw::c_int,
    pub unk1227: ::std::os::raw::c_int,
    pub unk1228: ::std::os::raw::c_int,
    pub unk1229: ::std::os::raw::c_int,
    pub unk1230: ::std::os::raw::c_int,
    pub unk1231: ::std::os::raw::c_int,
    pub unk1232: ::std::os::raw::c_int,
    pub unk1233: ::std::os::raw::c_int,
    pub unk1234: ::std::os::raw::c_int,
    pub unk1235: ::std::os::raw::c_int,
    pub unk1236: ::std::os::raw::c_int,
    pub unk1237: ::std::os::raw::c_int,
    pub unk1238: ::std::os::raw::c_int,
    pub unk1239: ::std::os::raw::c_int,
    pub unk1240: ::std::os::raw::c_int,
    pub unk1241: ::std::os::raw::c_int,
    pub unk1242: ::std::os::raw::c_int,
    pub unk1243: ::std::os::raw::c_int,
    pub unk1244: ::std::os::raw::c_int,
    pub unk1245: ::std::os::raw::c_int,
    pub unk1246: ::std::os::raw::c_int,
    pub unk1247: ::std::os::raw::c_int,
    pub unk1248: ::std::os::raw::c_int,
    pub unk1249: ::std::os::raw::c_int,
    pub unk1250: ::std::os::raw::c_int,
    pub unk1251: ::std::os::raw::c_int,
    pub unk1252: ::std::os::raw::c_int,
    pub unk1253: ::std::os::raw::c_int,
    pub unk1254: ::std::os::raw::c_int,
    pub unk1255: ::std::os::raw::c_int,
    pub unk1256: ::std::os::raw::c_int,
    pub unk1257: ::std::os::raw::c_int,
    pub unk1258: ::std::os::raw::c_int,
    pub unk1259: ::std::os::raw::c_int,
    pub unk1260: ::std::os::raw::c_int,
    pub unk1261: ::std::os::raw::c_int,
    pub unk1262: ::std::os::raw::c_int,
    pub unk1263: ::std::os::raw::c_int,
    pub unk1264: ::std::os::raw::c_int,
    pub unk1265: ::std::os::raw::c_int,
    pub unk1266: ::std::os::raw::c_int,
    pub unk1267: ::std::os::raw::c_int,
    pub unk1268: ::std::os::raw::c_int,
    pub unk1269: ::std::os::raw::c_int,
    pub unk1270: ::std::os::raw::c_int,
    pub unk1271: ::std::os::raw::c_int,
    pub unk1272: ::std::os::raw::c_int,
    pub unk1273: ::std::os::raw::c_int,
    pub unk1274: ::std::os::raw::c_int,
    pub unk1275: ::std::os::raw::c_int,
    pub unk1276: ::std::os::raw::c_int,
    pub unk1277: ::std::os::raw::c_int,
    pub unk1278: ::std::os::raw::c_int,
    pub unk1279: ::std::os::raw::c_int,
    pub unk1280: ::std::os::raw::c_int,
    pub unk1281: ::std::os::raw::c_int,
    pub unk1282: ::std::os::raw::c_int,
    pub unk1283: ::std::os::raw::c_int,
    pub unk1284: ::std::os::raw::c_int,
    pub unk1285: ::std::os::raw::c_int,
    pub unk1286: ::std::os::raw::c_int,
    pub unk1287: ::std::os::raw::c_int,
    pub unk1288: ::std::os::raw::c_int,
    pub unk1289: ::std::os::raw::c_int,
    pub unk1290: ::std::os::raw::c_int,
    pub unk1291: ::std::os::raw::c_int,
    pub unk1292: ::std::os::raw::c_int,
    pub unk1293: ::std::os::raw::c_int,
    pub unk1294: ::std::os::raw::c_int,
    pub unk1295: ::std::os::raw::c_int,
    pub unk1296: ::std::os::raw::c_int,
    pub unk1297: ::std::os::raw::c_int,
    pub unk1298: ::std::os::raw::c_int,
    pub unk1299: ::std::os::raw::c_int,
    pub unk1300: ::std::os::raw::c_int,
    pub unk1301: ::std::os::raw::c_int,
    pub unk1302: ::std::os::raw::c_int,
    pub unk1303: ::std::os::raw::c_int,
    pub unk1304: ::std::os::raw::c_int,
    pub unk1305: ::std::os::raw::c_int,
    pub unk1306: ::std::os::raw::c_int,
    pub unk1307: ::std::os::raw::c_int,
    pub unk1308: ::std::os::raw::c_int,
    pub unk1309: ::std::os::raw::c_int,
    pub unk1310: ::std::os::raw::c_int,
    pub unk1311: ::std::os::raw::c_int,
    pub unk1312: ::std::os::raw::c_int,
    pub unk1313: ::std::os::raw::c_int,
    pub unk1314: ::std::os::raw::c_int,
    pub unk1315: ::std::os::raw::c_int,
    pub unk1316: ::std::os::raw::c_int,
    pub unk1317: ::std::os::raw::c_int,
    pub unk1318: ::std::os::raw::c_int,
    pub unk1319: ::std::os::raw::c_int,
    pub unk1320: ::std::os::raw::c_int,
    pub unk1321: ::std::os::raw::c_int,
    pub unk1322: ::std::os::raw::c_int,
    pub unk1323: ::std::os::raw::c_int,
    pub unk1324: ::std::os::raw::c_int,
    pub unk1325: ::std::os::raw::c_int,
    pub unk1326: ::std::os::raw::c_int,
    pub unk1327: ::std::os::raw::c_int,
    pub unk1328: ::std::os::raw::c_int,
    pub unk1329: ::std::os::raw::c_int,
    pub unk1330: ::std::os::raw::c_int,
    pub unk1331: ::std::os::raw::c_int,
    pub unk1332: ::std::os::raw::c_int,
    pub unk1333: ::std::os::raw::c_int,
    pub unk1334: ::std::os::raw::c_int,
    pub unk1335: ::std::os::raw::c_int,
    pub unk1336: ::std::os::raw::c_int,
    pub unk1337: ::std::os::raw::c_int,
    pub unk1338: ::std::os::raw::c_int,
    pub unk1339: ::std::os::raw::c_int,
    pub unk1340: ::std::os::raw::c_int,
    pub unk1341: ::std::os::raw::c_int,
    pub unk1342: ::std::os::raw::c_int,
    pub unk1343: ::std::os::raw::c_int,
    pub unk1344: ::std::os::raw::c_int,
    pub unk1345: ::std::os::raw::c_int,
    pub unk1346: ::std::os::raw::c_int,
    pub unk1347: ::std::os::raw::c_int,
    pub unk1348: ::std::os::raw::c_int,
    pub unk1349: ::std::os::raw::c_int,
    pub unk1350: ::std::os::raw::c_int,
    pub unk1351: ::std::os::raw::c_int,
    pub unk1352: ::std::os::raw::c_int,
    pub unk1353: ::std::os::raw::c_int,
    pub unk1354: ::std::os::raw::c_int,
    pub unk1355: ::std::os::raw::c_int,
    pub unk1356: ::std::os::raw::c_int,
    pub unk1357: ::std::os::raw::c_int,
    pub unk1358: ::std::os::raw::c_int,
    pub unk1359: ::std::os::raw::c_int,
    pub unk1360: ::std::os::raw::c_int,
    pub unk1361: ::std::os::raw::c_int,
    pub unk1362: ::std::os::raw::c_int,
    pub unk1363: ::std::os::raw::c_int,
    pub unk1364: ::std::os::raw::c_int,
    pub unk1365: ::std::os::raw::c_int,
    pub unk1366: ::std::os::raw::c_int,
    pub unk1367: ::std::os::raw::c_int,
    pub unk1368: ::std::os::raw::c_int,
    pub unk1369: ::std::os::raw::c_int,
    pub unk1370: ::std::os::raw::c_int,
    pub unk1371: ::std::os::raw::c_int,
    pub unk1372: ::std::os::raw::c_int,
    pub unk1373: ::std::os::raw::c_int,
    pub unk1374: ::std::os::raw::c_int,
    pub unk1375: ::std::os::raw::c_int,
    pub unk1376: ::std::os::raw::c_int,
    pub unk1377: ::std::os::raw::c_int,
    pub unk1378: ::std::os::raw::c_int,
    pub unk1379: ::std::os::raw::c_int,
    pub unk1380: ::std::os::raw::c_int,
    pub unk1381: ::std::os::raw::c_int,
    pub unk1382: ::std::os::raw::c_int,
    pub unk1383: ::std::os::raw::c_int,
    pub unk1384: ::std::os::raw::c_int,
    pub unk1385: ::std::os::raw::c_int,
    pub unk1386: ::std::os::raw::c_int,
    pub unk1387: ::std::os::raw::c_int,
    pub unk1388: ::std::os::raw::c_int,
    pub unk1389: ::std::os::raw::c_int,
    pub unk1390: ::std::os::raw::c_int,
    pub unk1391: ::std::os::raw::c_int,
    pub unk1392: ::std::os::raw::c_int,
    pub unk1393: ::std::os::raw::c_int,
    pub unk1394: ::std::os::raw::c_int,
    pub unk1395: ::std::os::raw::c_int,
    pub unk1396: ::std::os::raw::c_int,
    pub unk1397: ::std::os::raw::c_int,
    pub unk1398: ::std::os::raw::c_int,
    pub unk1399: ::std::os::raw::c_int,
    pub unk1400: ::std::os::raw::c_int,
    pub unk1401: ::std::os::raw::c_int,
    pub unk1402: ::std::os::raw::c_int,
    pub unk1403: ::std::os::raw::c_int,
    pub unk1404: ::std::os::raw::c_int,
    pub unk1405: ::std::os::raw::c_int,
    pub unk1406: ::std::os::raw::c_int,
    pub unk1407: ::std::os::raw::c_int,
    pub unk1408: ::std::os::raw::c_int,
    pub unk1409: ::std::os::raw::c_int,
    pub unk1410: ::std::os::raw::c_int,
    pub unk1411: ::std::os::raw::c_int,
    pub unk1412: ::std::os::raw::c_int,
    pub unk1413: ::std::os::raw::c_int,
    pub unk1414: ::std::os::raw::c_int,
    pub unk1415: ::std::os::raw::c_int,
    pub unk1416: ::std::os::raw::c_int,
    pub unk1417: ::std::os::raw::c_int,
    pub unk1418: ::std::os::raw::c_int,
    pub unk1419: ::std::os::raw::c_int,
    pub unk1420: ::std::os::raw::c_int,
    pub unk1421: ::std::os::raw::c_int,
    pub unk1422: ::std::os::raw::c_int,
    pub unk1423: ::std::os::raw::c_int,
    pub unk1424: ::std::os::raw::c_int,
    pub unk1425: ::std::os::raw::c_int,
    pub unk1426: ::std::os::raw::c_int,
    pub unk1427: ::std::os::raw::c_int,
    pub unk1428: ::std::os::raw::c_int,
    pub unk1429: ::std::os::raw::c_int,
    pub unk1430: ::std::os::raw::c_int,
    pub unk1431: ::std::os::raw::c_int,
    pub unk1432: ::std::os::raw::c_int,
    pub unk1433: ::std::os::raw::c_int,
    pub unk1434: ::std::os::raw::c_int,
    pub unk1435: ::std::os::raw::c_int,
    pub unk1436: ::std::os::raw::c_int,
    pub unk1437: ::std::os::raw::c_int,
    pub unk1438: ::std::os::raw::c_int,
    pub unk1439: ::std::os::raw::c_int,
    pub unk1440: ::std::os::raw::c_int,
    pub unk1441: ::std::os::raw::c_int,
    pub unk1442: ::std::os::raw::c_int,
    pub unk1443: ::std::os::raw::c_int,
    pub unk1444: ::std::os::raw::c_int,
    pub unk1445: ::std::os::raw::c_int,
    pub unk1446: ::std::os::raw::c_int,
    pub unk1447: ::std::os::raw::c_int,
    pub unk1448: ::std::os::raw::c_int,
    pub unk1449: ::std::os::raw::c_int,
    pub unk1450: ::std::os::raw::c_int,
    pub unk1451: ::std::os::raw::c_int,
    pub unk1452: ::std::os::raw::c_int,
    pub unk1453: ::std::os::raw::c_int,
    pub unk1454: ::std::os::raw::c_int,
    pub unk1455: ::std::os::raw::c_int,
    pub unk1456: ::std::os::raw::c_int,
    pub unk1457: ::std::os::raw::c_int,
    pub unk1458: ::std::os::raw::c_int,
    pub unk1459: ::std::os::raw::c_int,
    pub unk1460: ::std::os::raw::c_int,
    pub unk1461: ::std::os::raw::c_int,
    pub unk1462: ::std::os::raw::c_int,
    pub unk1463: ::std::os::raw::c_int,
    pub unk1464: ::std::os::raw::c_int,
    pub unk1465: ::std::os::raw::c_int,
    pub unk1466: ::std::os::raw::c_int,
    pub unk1467: ::std::os::raw::c_int,
    pub unk1468: ::std::os::raw::c_int,
    pub unk1469: ::std::os::raw::c_int,
    pub unk1470: ::std::os::raw::c_int,
    pub unk1471: ::std::os::raw::c_int,
    pub unk1472: ::std::os::raw::c_int,
    pub unk1473: ::std::os::raw::c_int,
    pub unk1474: ::std::os::raw::c_int,
    pub unk1475: ::std::os::raw::c_int,
    pub unk1476: ::std::os::raw::c_int,
    pub unk1477: ::std::os::raw::c_int,
    pub unk1478: ::std::os::raw::c_int,
    pub unk1479: ::std::os::raw::c_int,
    pub unk1480: ::std::os::raw::c_int,
    pub unk1481: ::std::os::raw::c_int,
    pub unk1482: ::std::os::raw::c_int,
    pub unk1483: ::std::os::raw::c_int,
    pub unk1484: ::std::os::raw::c_int,
    pub unk1485: ::std::os::raw::c_int,
    pub unk1486: ::std::os::raw::c_int,
    pub unk1487: ::std::os::raw::c_int,
    pub unk1488: ::std::os::raw::c_int,
    pub unk1489: ::std::os::raw::c_int,
    pub unk1490: ::std::os::raw::c_int,
    pub unk1491: ::std::os::raw::c_int,
    pub unk1492: ::std::os::raw::c_int,
    pub unk1493: ::std::os::raw::c_int,
    pub unk1494: ::std::os::raw::c_int,
    pub unk1495: ::std::os::raw::c_int,
    pub unk1496: ::std::os::raw::c_int,
    pub unk1497: ::std::os::raw::c_int,
    pub unk1498: ::std::os::raw::c_int,
    pub unk1499: ::std::os::raw::c_int,
    pub unk1500: ::std::os::raw::c_int,
    pub unk1501: ::std::os::raw::c_int,
    pub unk1502: ::std::os::raw::c_int,
    pub unk1503: ::std::os::raw::c_int,
    pub unk1504: ::std::os::raw::c_int,
    pub unk1505: ::std::os::raw::c_int,
    pub unk1506: ::std::os::raw::c_int,
    pub unk1507: ::std::os::raw::c_int,
    pub unk1508: ::std::os::raw::c_int,
    pub unk1509: ::std::os::raw::c_int,
    pub unk1510: ::std::os::raw::c_int,
    pub unk1511: ::std::os::raw::c_int,
    pub unk1512: ::std::os::raw::c_int,
    pub unk1513: ::std::os::raw::c_int,
    pub unk1514: ::std::os::raw::c_int,
    pub unk1515: ::std::os::raw::c_int,
    pub unk1516: ::std::os::raw::c_int,
    pub unk1517: ::std::os::raw::c_int,
    pub unk1518: ::std::os::raw::c_int,
    pub unk1519: ::std::os::raw::c_int,
    pub unk1520: ::std::os::raw::c_int,
    pub unk1521: ::std::os::raw::c_int,
    pub unk1522: ::std::os::raw::c_int,
    pub unk1523: ::std::os::raw::c_int,
    pub unk1524: ::std::os::raw::c_int,
    pub unk1525: ::std::os::raw::c_int,
    pub unk1526: ::std::os::raw::c_int,
    pub unk1527: ::std::os::raw::c_int,
    pub unk1528: ::std::os::raw::c_int,
    pub unk1529: ::std::os::raw::c_int,
    pub unk1530: ::std::os::raw::c_int,
    pub unk1531: ::std::os::raw::c_int,
    pub unk1532: ::std::os::raw::c_int,
    pub unk1533: ::std::os::raw::c_int,
    pub unk1534: ::std::os::raw::c_int,
    pub unk1535: ::std::os::raw::c_int,
    pub unk1536: ::std::os::raw::c_int,
    pub unk1537: ::std::os::raw::c_int,
    pub unk1538: ::std::os::raw::c_int,
    pub unk1539: ::std::os::raw::c_int,
    pub unk1540: ::std::os::raw::c_int,
    pub unk1541: ::std::os::raw::c_int,
    pub unk1542: ::std::os::raw::c_int,
    pub unk1543: ::std::os::raw::c_int,
    pub unk1544: ::std::os::raw::c_int,
    pub unk1545: ::std::os::raw::c_int,
    pub unk1546: ::std::os::raw::c_int,
    pub unk1547: ::std::os::raw::c_int,
    pub unk1548: ::std::os::raw::c_int,
    pub unk1549: ::std::os::raw::c_int,
    pub unk1550: ::std::os::raw::c_int,
    pub unk1551: ::std::os::raw::c_int,
    pub unk1552: ::std::os::raw::c_int,
    pub unk1553: ::std::os::raw::c_int,
    pub unk1554: ::std::os::raw::c_int,
    pub unk1555: ::std::os::raw::c_int,
    pub unk1556: ::std::os::raw::c_int,
    pub unk1557: ::std::os::raw::c_int,
    pub unk1558: ::std::os::raw::c_int,
    pub unk1559: ::std::os::raw::c_int,
    pub unk1560: ::std::os::raw::c_int,
    pub unk1561: ::std::os::raw::c_int,
    pub unk1562: ::std::os::raw::c_int,
    pub unk1563: ::std::os::raw::c_int,
    pub unk1564: ::std::os::raw::c_int,
    pub unk1565: ::std::os::raw::c_int,
    pub unk1566: ::std::os::raw::c_int,
    pub unk1567: ::std::os::raw::c_int,
    pub unk1568: ::std::os::raw::c_int,
    pub unk1569: ::std::os::raw::c_int,
    pub unk1570: ::std::os::raw::c_int,
    pub unk1571: ::std::os::raw::c_int,
    pub unk1572: ::std::os::raw::c_int,
    pub unk1573: ::std::os::raw::c_int,
    pub unk1574: ::std::os::raw::c_int,
    pub unk1575: ::std::os::raw::c_int,
    pub unk1576: ::std::os::raw::c_int,
    pub unk1577: ::std::os::raw::c_int,
    pub unk1578: ::std::os::raw::c_int,
    pub unk1579: ::std::os::raw::c_int,
    pub unk1580: ::std::os::raw::c_int,
    pub unk1581: ::std::os::raw::c_int,
    pub unk1582: ::std::os::raw::c_int,
    pub unk1583: ::std::os::raw::c_int,
    pub unk1584: ::std::os::raw::c_int,
    pub unk1585: ::std::os::raw::c_int,
    pub unk1586: ::std::os::raw::c_int,
    pub unk1587: ::std::os::raw::c_int,
    pub unk1588: ::std::os::raw::c_int,
    pub unk1589: ::std::os::raw::c_int,
    pub unk1590: ::std::os::raw::c_int,
    pub unk1591: ::std::os::raw::c_int,
    pub unk1592: ::std::os::raw::c_int,
    pub unk1593: ::std::os::raw::c_int,
    pub unk1594: ::std::os::raw::c_int,
    pub unk1595: ::std::os::raw::c_int,
    pub unk1596: ::std::os::raw::c_int,
    pub unk1597: ::std::os::raw::c_int,
    pub unk1598: ::std::os::raw::c_int,
    pub unk1599: ::std::os::raw::c_int,
    pub unk1600: ::std::os::raw::c_int,
    pub unk1601: ::std::os::raw::c_int,
    pub unk1602: ::std::os::raw::c_int,
    pub unk1603: ::std::os::raw::c_int,
    pub unk1604: ::std::os::raw::c_int,
    pub unk1605: ::std::os::raw::c_int,
    pub unk1606: ::std::os::raw::c_int,
    pub unk1607: ::std::os::raw::c_int,
    pub unk1608: ::std::os::raw::c_int,
    pub unk1609: ::std::os::raw::c_int,
    pub unk1610: ::std::os::raw::c_int,
    pub unk1611: ::std::os::raw::c_int,
    pub unk1612: ::std::os::raw::c_int,
    pub unk1613: ::std::os::raw::c_int,
    pub unk1614: ::std::os::raw::c_int,
    pub unk1615: ::std::os::raw::c_int,
    pub unk1616: ::std::os::raw::c_int,
    pub unk1617: ::std::os::raw::c_int,
    pub unk1618: ::std::os::raw::c_int,
    pub unk1619: ::std::os::raw::c_int,
    pub unk1620: ::std::os::raw::c_int,
    pub unk1621: ::std::os::raw::c_int,
    pub unk1622: ::std::os::raw::c_int,
    pub unk1623: ::std::os::raw::c_int,
    pub unk1624: ::std::os::raw::c_int,
    pub unk1625: ::std::os::raw::c_int,
    pub unk1626: ::std::os::raw::c_int,
    pub unk1627: ::std::os::raw::c_int,
    pub unk1628: ::std::os::raw::c_int,
    pub unk1629: ::std::os::raw::c_int,
    pub unk1630: ::std::os::raw::c_int,
    pub unk1631: ::std::os::raw::c_int,
    pub unk1632: ::std::os::raw::c_int,
    pub unk1633: ::std::os::raw::c_int,
    pub unk1634: ::std::os::raw::c_int,
    pub unk1635: ::std::os::raw::c_int,
    pub unk1636: ::std::os::raw::c_int,
    pub unk1637: ::std::os::raw::c_int,
    pub unk1638: ::std::os::raw::c_int,
    pub unk1639: ::std::os::raw::c_int,
    pub unk1640: ::std::os::raw::c_int,
    pub unk1641: ::std::os::raw::c_int,
    pub unk1642: ::std::os::raw::c_int,
    pub unk1643: ::std::os::raw::c_int,
    pub unk1644: ::std::os::raw::c_int,
    pub unk1645: ::std::os::raw::c_int,
    pub unk1646: ::std::os::raw::c_int,
    pub unk1647: ::std::os::raw::c_int,
    pub unk1648: ::std::os::raw::c_int,
    pub unk1649: ::std::os::raw::c_int,
    pub unk1650: ::std::os::raw::c_int,
    pub unk1651: ::std::os::raw::c_int,
    pub unk1652: ::std::os::raw::c_int,
    pub unk1653: ::std::os::raw::c_int,
    pub unk1654: ::std::os::raw::c_int,
    pub unk1655: ::std::os::raw::c_int,
    pub unk1656: ::std::os::raw::c_int,
    pub unk1657: ::std::os::raw::c_int,
    pub unk1658: ::std::os::raw::c_int,
    pub unk1659: ::std::os::raw::c_int,
    pub unk1660: ::std::os::raw::c_int,
    pub unk1661: ::std::os::raw::c_int,
    pub unk1662: ::std::os::raw::c_int,
    pub unk1663: ::std::os::raw::c_int,
    pub unk1664: ::std::os::raw::c_int,
    pub unk1665: ::std::os::raw::c_int,
    pub unk1666: ::std::os::raw::c_int,
    pub unk1667: ::std::os::raw::c_int,
    pub unk1668: ::std::os::raw::c_int,
    pub unk1669: ::std::os::raw::c_int,
    pub unk1670: ::std::os::raw::c_int,
    pub unk1671: ::std::os::raw::c_int,
    pub unk1672: ::std::os::raw::c_int,
    pub unk1673: ::std::os::raw::c_int,
    pub unk1674: ::std::os::raw::c_int,
    pub unk1675: ::std::os::raw::c_int,
    pub unk1676: ::std::os::raw::c_int,
    pub unk1677: ::std::os::raw::c_int,
    pub unk1678: ::std::os::raw::c_int,
    pub unk1679: ::std::os::raw::c_int,
    pub unk1680: ::std::os::raw::c_int,
    pub unk1681: ::std::os::raw::c_int,
    pub unk1682: ::std::os::raw::c_int,
    pub unk1683: ::std::os::raw::c_int,
    pub unk1684: ::std::os::raw::c_int,
    pub unk1685: ::std::os::raw::c_int,
    pub unk1686: ::std::os::raw::c_int,
    pub unk1687: ::std::os::raw::c_int,
    pub unk1688: ::std::os::raw::c_int,
    pub unk1689: ::std::os::raw::c_int,
    pub unk1690: ::std::os::raw::c_int,
    pub unk1691: ::std::os::raw::c_int,
    pub unk1692: ::std::os::raw::c_int,
    pub unk1693: ::std::os::raw::c_int,
    pub unk1694: ::std::os::raw::c_int,
    pub unk1695: ::std::os::raw::c_int,
    pub unk1696: ::std::os::raw::c_int,
    pub unk1697: ::std::os::raw::c_int,
    pub unk1698: ::std::os::raw::c_int,
    pub unk1699: ::std::os::raw::c_int,
    pub unk1700: ::std::os::raw::c_int,
    pub unk1701: ::std::os::raw::c_int,
    pub unk1702: ::std::os::raw::c_int,
    pub unk1703: ::std::os::raw::c_int,
    pub unk1704: ::std::os::raw::c_int,
    pub unk1705: ::std::os::raw::c_int,
    pub unk1706: ::std::os::raw::c_int,
    pub unk1707: ::std::os::raw::c_int,
    pub unk1708: ::std::os::raw::c_int,
    pub unk1709: ::std::os::raw::c_int,
    pub unk1710: ::std::os::raw::c_int,
    pub unk1711: ::std::os::raw::c_int,
    pub unk1712: ::std::os::raw::c_int,
    pub unk1713: ::std::os::raw::c_int,
    pub unk1714: ::std::os::raw::c_int,
    pub unk1715: ::std::os::raw::c_int,
    pub unk1716: ::std::os::raw::c_int,
    pub unk1717: ::std::os::raw::c_int,
    pub unk1718: ::std::os::raw::c_int,
    pub unk1719: ::std::os::raw::c_int,
    pub unk1720: ::std::os::raw::c_int,
    pub unk1721: ::std::os::raw::c_int,
    pub unk1722: ::std::os::raw::c_int,
    pub unk1723: ::std::os::raw::c_int,
    pub unk1724: ::std::os::raw::c_int,
    pub unk1725: ::std::os::raw::c_int,
    pub unk1726: ::std::os::raw::c_int,
    pub unk1727: ::std::os::raw::c_int,
    pub unk1728: ::std::os::raw::c_int,
    pub unk1729: ::std::os::raw::c_int,
    pub unk1730: ::std::os::raw::c_int,
    pub unk1731: ::std::os::raw::c_int,
    pub unk1732: ::std::os::raw::c_int,
    pub unk1733: ::std::os::raw::c_int,
    pub unk1734: ::std::os::raw::c_int,
    pub unk1735: ::std::os::raw::c_int,
    pub unk1736: ::std::os::raw::c_int,
    pub unk1737: ::std::os::raw::c_int,
    pub unk1738: ::std::os::raw::c_int,
    pub unk1739: ::std::os::raw::c_int,
    pub unk1740: ::std::os::raw::c_int,
    pub unk1741: ::std::os::raw::c_int,
    pub unk1742: ::std::os::raw::c_int,
    pub unk1743: ::std::os::raw::c_int,
    pub unk1744: ::std::os::raw::c_int,
    pub unk1745: ::std::os::raw::c_int,
    pub unk1746: ::std::os::raw::c_int,
    pub unk1747: ::std::os::raw::c_int,
    pub unk1748: ::std::os::raw::c_int,
    pub unk1749: ::std::os::raw::c_int,
    pub unk1750: ::std::os::raw::c_int,
    pub unk1751: ::std::os::raw::c_int,
    pub unk1752: ::std::os::raw::c_int,
    pub unk1753: ::std::os::raw::c_int,
    pub unk1754: ::std::os::raw::c_int,
    pub unk1755: ::std::os::raw::c_int,
    pub unk1756: ::std::os::raw::c_int,
    pub unk1757: ::std::os::raw::c_int,
    pub unk1758: ::std::os::raw::c_int,
    pub unk1759: ::std::os::raw::c_int,
    pub unk1760: ::std::os::raw::c_int,
    pub unk1761: ::std::os::raw::c_int,
    pub unk1762: ::std::os::raw::c_int,
    pub unk1763: ::std::os::raw::c_int,
    pub unk1764: ::std::os::raw::c_int,
    pub unk1765: ::std::os::raw::c_int,
    pub unk1766: ::std::os::raw::c_int,
    pub unk1767: ::std::os::raw::c_int,
    pub unk1768: ::std::os::raw::c_int,
    pub unk1769: ::std::os::raw::c_int,
    pub unk1770: ::std::os::raw::c_int,
    pub unk1771: ::std::os::raw::c_int,
    pub unk1772: ::std::os::raw::c_int,
    pub unk1773: ::std::os::raw::c_int,
    pub unk1774: ::std::os::raw::c_int,
    pub unk1775: ::std::os::raw::c_int,
    pub unk1776: ::std::os::raw::c_int,
    pub unk1777: ::std::os::raw::c_int,
    pub unk1778: ::std::os::raw::c_int,
    pub unk1779: ::std::os::raw::c_int,
    pub unk1780: ::std::os::raw::c_int,
    pub unk1781: ::std::os::raw::c_int,
    pub unk1782: ::std::os::raw::c_int,
    pub unk1783: ::std::os::raw::c_int,
    pub unk1784: ::std::os::raw::c_int,
    pub unk1785: ::std::os::raw::c_int,
    pub unk1786: ::std::os::raw::c_int,
    pub unk1787: ::std::os::raw::c_int,
    pub unk1788: ::std::os::raw::c_int,
    pub unk1789: ::std::os::raw::c_int,
    pub unk1790: ::std::os::raw::c_int,
    pub unk1791: ::std::os::raw::c_int,
    pub unk1792: ::std::os::raw::c_int,
    pub unk1793: ::std::os::raw::c_int,
    pub unk1794: ::std::os::raw::c_int,
    pub unk1795: ::std::os::raw::c_int,
    pub unk1796: ::std::os::raw::c_int,
    pub unk1797: ::std::os::raw::c_int,
    pub unk1798: ::std::os::raw::c_int,
    pub unk1799: ::std::os::raw::c_int,
    pub unk1800: ::std::os::raw::c_int,
    pub unk1801: ::std::os::raw::c_int,
    pub unk1802: ::std::os::raw::c_int,
    pub unk1803: ::std::os::raw::c_int,
    pub unk1804: ::std::os::raw::c_int,
    pub unk1805: ::std::os::raw::c_int,
    pub unk1806: ::std::os::raw::c_int,
    pub unk1807: ::std::os::raw::c_int,
    pub unk1808: ::std::os::raw::c_int,
    pub unk1809: ::std::os::raw::c_int,
    pub unk1810: ::std::os::raw::c_int,
    pub unk1811: ::std::os::raw::c_int,
    pub unk1812: ::std::os::raw::c_int,
    pub unk1813: ::std::os::raw::c_int,
    pub unk1814: ::std::os::raw::c_int,
    pub unk1815: ::std::os::raw::c_int,
    pub unk1816: ::std::os::raw::c_int,
    pub unk1817: ::std::os::raw::c_int,
    pub unk1818: ::std::os::raw::c_int,
    pub unk1819: ::std::os::raw::c_int,
    pub unk1820: ::std::os::raw::c_int,
    pub unk1821: ::std::os::raw::c_int,
    pub unk1822: ::std::os::raw::c_int,
    pub unk1823: ::std::os::raw::c_int,
    pub unk1824: ::std::os::raw::c_int,
    pub unk1825: ::std::os::raw::c_int,
    pub unk1826: ::std::os::raw::c_int,
    pub unk1827: ::std::os::raw::c_int,
    pub unk1828: ::std::os::raw::c_int,
    pub unk1829: ::std::os::raw::c_int,
    pub unk1830: ::std::os::raw::c_int,
    pub unk1831: ::std::os::raw::c_int,
    pub unk1832: ::std::os::raw::c_int,
    pub unk1833: ::std::os::raw::c_int,
    pub unk1834: ::std::os::raw::c_int,
    pub unk1835: ::std::os::raw::c_int,
    pub unk1836: ::std::os::raw::c_int,
    pub unk1837: ::std::os::raw::c_int,
    pub unk1838: ::std::os::raw::c_int,
    pub unk1839: ::std::os::raw::c_int,
    pub unk1840: ::std::os::raw::c_int,
    pub unk1841: ::std::os::raw::c_int,
    pub unk1842: ::std::os::raw::c_int,
    pub unk1843: ::std::os::raw::c_int,
    pub unk1844: ::std::os::raw::c_int,
    pub unk1845: ::std::os::raw::c_int,
    pub unk1846: ::std::os::raw::c_int,
    pub unk1847: ::std::os::raw::c_int,
    pub unk1848: ::std::os::raw::c_int,
    pub unk1849: ::std::os::raw::c_int,
    pub unk1850: ::std::os::raw::c_int,
    pub unk1851: ::std::os::raw::c_int,
    pub unk1852: ::std::os::raw::c_int,
    pub unk1853: ::std::os::raw::c_int,
    pub unk1854: ::std::os::raw::c_int,
    pub unk1855: ::std::os::raw::c_int,
    pub unk1856: ::std::os::raw::c_int,
    pub unk1857: ::std::os::raw::c_int,
    pub unk1858: ::std::os::raw::c_int,
    pub unk1859: ::std::os::raw::c_int,
    pub unk1860: ::std::os::raw::c_int,
    pub unk1861: ::std::os::raw::c_int,
    pub unk1862: ::std::os::raw::c_int,
    pub unk1863: ::std::os::raw::c_int,
    pub unk1864: ::std::os::raw::c_int,
    pub unk1865: ::std::os::raw::c_int,
    pub unk1866: ::std::os::raw::c_int,
    pub unk1867: ::std::os::raw::c_int,
    pub unk1868: ::std::os::raw::c_int,
    pub unk1869: ::std::os::raw::c_int,
    pub unk1870: ::std::os::raw::c_int,
    pub unk1871: ::std::os::raw::c_int,
    pub unk1872: ::std::os::raw::c_int,
    pub unk1873: ::std::os::raw::c_int,
    pub unk1874: ::std::os::raw::c_int,
    pub unk1875: ::std::os::raw::c_int,
    pub unk1876: ::std::os::raw::c_int,
    pub unk1877: ::std::os::raw::c_int,
    pub unk1878: ::std::os::raw::c_int,
    pub unk1879: ::std::os::raw::c_int,
    pub unk1880: ::std::os::raw::c_int,
    pub unk1881: ::std::os::raw::c_int,
    pub unk1882: ::std::os::raw::c_int,
    pub unk1883: ::std::os::raw::c_int,
    pub unk1884: ::std::os::raw::c_int,
    pub unk1885: ::std::os::raw::c_int,
    pub unk1886: ::std::os::raw::c_int,
    pub unk1887: ::std::os::raw::c_int,
    pub unk1888: ::std::os::raw::c_int,
    pub unk1889: ::std::os::raw::c_int,
    pub unk1890: ::std::os::raw::c_int,
    pub unk1891: ::std::os::raw::c_int,
    pub unk1892: ::std::os::raw::c_int,
    pub unk1893: ::std::os::raw::c_int,
    pub unk1894: ::std::os::raw::c_int,
    pub unk1895: ::std::os::raw::c_int,
    pub unk1896: ::std::os::raw::c_int,
    pub unk1897: ::std::os::raw::c_int,
    pub unk1898: ::std::os::raw::c_int,
    pub unk1899: ::std::os::raw::c_int,
    pub unk1900: ::std::os::raw::c_int,
    pub unk1901: ::std::os::raw::c_int,
    pub unk1902: ::std::os::raw::c_int,
    pub unk1903: ::std::os::raw::c_int,
    pub unk1904: ::std::os::raw::c_int,
    pub unk1905: ::std::os::raw::c_int,
    pub unk1906: ::std::os::raw::c_int,
    pub unk1907: ::std::os::raw::c_int,
    pub unk1908: ::std::os::raw::c_int,
    pub unk1909: ::std::os::raw::c_int,
    pub unk1910: ::std::os::raw::c_int,
    pub unk1911: ::std::os::raw::c_int,
    pub unk1912: ::std::os::raw::c_int,
    pub unk1913: ::std::os::raw::c_int,
    pub unk1914: ::std::os::raw::c_int,
    pub unk1915: ::std::os::raw::c_int,
    pub unk1916: ::std::os::raw::c_int,
    pub unk1917: ::std::os::raw::c_int,
    pub unk1918: ::std::os::raw::c_int,
    pub unk1919: ::std::os::raw::c_int,
    pub unk1920: ::std::os::raw::c_int,
    pub unk1921: ::std::os::raw::c_int,
    pub unk1922: ::std::os::raw::c_int,
    pub unk1923: ::std::os::raw::c_int,
    pub unk1924: ::std::os::raw::c_int,
    pub unk1925: ::std::os::raw::c_int,
    pub unk1926: ::std::os::raw::c_int,
    pub unk1927: ::std::os::raw::c_int,
    pub unk1928: ::std::os::raw::c_int,
    pub unk1929: ::std::os::raw::c_int,
    pub unk1930: ::std::os::raw::c_int,
    pub unk1931: ::std::os::raw::c_int,
    pub unk1932: ::std::os::raw::c_int,
    pub unk1933: ::std::os::raw::c_int,
    pub unk1934: ::std::os::raw::c_int,
    pub unk1935: ::std::os::raw::c_int,
    pub unk1936: ::std::os::raw::c_int,
    pub unk1937: ::std::os::raw::c_int,
    pub unk1938: ::std::os::raw::c_int,
    pub unk1939: ::std::os::raw::c_int,
    pub unk1940: ::std::os::raw::c_int,
    pub unk1941: ::std::os::raw::c_int,
    pub unk1942: ::std::os::raw::c_int,
    pub unk1943: ::std::os::raw::c_int,
    pub unk1944: ::std::os::raw::c_int,
    pub unk1945: ::std::os::raw::c_int,
    pub unk1946: ::std::os::raw::c_int,
    pub unk1947: ::std::os::raw::c_int,
    pub unk1948: ::std::os::raw::c_int,
    pub unk1949: ::std::os::raw::c_int,
    pub unk1950: ::std::os::raw::c_int,
    pub unk1951: ::std::os::raw::c_int,
    pub unk1952: ::std::os::raw::c_int,
    pub unk1953: ::std::os::raw::c_int,
    pub unk1954: ::std::os::raw::c_int,
    pub unk1955: ::std::os::raw::c_int,
    pub unk1956: ::std::os::raw::c_int,
    pub unk1957: ::std::os::raw::c_int,
    pub unk1958: ::std::os::raw::c_int,
    pub unk1959: ::std::os::raw::c_int,
    pub unk1960: ::std::os::raw::c_int,
    pub unk1961: ::std::os::raw::c_int,
    pub unk1962: ::std::os::raw::c_int,
    pub unk1963: ::std::os::raw::c_int,
    pub unk1964: ::std::os::raw::c_int,
    pub unk1965: ::std::os::raw::c_int,
    pub unk1966: ::std::os::raw::c_int,
    pub unk1967: ::std::os::raw::c_int,
    pub unk1968: ::std::os::raw::c_int,
    pub unk1969: ::std::os::raw::c_int,
    pub unk1970: ::std::os::raw::c_int,
    pub unk1971: ::std::os::raw::c_int,
    pub unk1972: ::std::os::raw::c_int,
    pub unk1973: ::std::os::raw::c_int,
    pub unk1974: ::std::os::raw::c_int,
    pub unk1975: ::std::os::raw::c_int,
    pub unk1976: ::std::os::raw::c_int,
    pub unk1977: ::std::os::raw::c_int,
    pub unk1978: ::std::os::raw::c_int,
    pub unk1979: ::std::os::raw::c_int,
    pub unk1980: ::std::os::raw::c_int,
    pub unk1981: ::std::os::raw::c_int,
    pub unk1982: ::std::os::raw::c_int,
    pub unk1983: ::std::os::raw::c_int,
    pub unk1984: ::std::os::raw::c_int,
    pub unk1985: ::std::os::raw::c_int,
    pub unk1986: ::std::os::raw::c_int,
    pub unk1987: ::std::os::raw::c_int,
    pub unk1988: ::std::os::raw::c_int,
    pub unk1989: ::std::os::raw::c_int,
    pub unk1990: ::std::os::raw::c_int,
    pub unk1991: ::std::os::raw::c_int,
    pub unk1992: ::std::os::raw::c_int,
    pub TM_OSDEnabled: ::std::os::raw::c_int,
    pub TM_OSDMax: u8_,
    pub TM_EventPage: u8_,
    pub TM_OSDRecommended: u8_,
    pub unk1995: ::std::os::raw::c_int,
    pub unk1996: ::std::os::raw::c_int,
    pub unk1997: ::std::os::raw::c_int,
    pub unk1998: ::std::os::raw::c_int,
    pub unk1999: ::std::os::raw::c_int,
    pub unk2000: ::std::os::raw::c_int,
    pub unk2001: ::std::os::raw::c_int,
    pub unk2002: ::std::os::raw::c_int,
    pub unk2003: ::std::os::raw::c_int,
    pub unk2004: ::std::os::raw::c_int,
    pub unk2005: ::std::os::raw::c_int,
    pub unk2006: ::std::os::raw::c_int,
    pub unk2007: ::std::os::raw::c_int,
    pub unk2008: ::std::os::raw::c_int,
    pub unk2009: ::std::os::raw::c_int,
    pub unk2010: ::std::os::raw::c_int,
    pub unk2011: ::std::os::raw::c_int,
    pub unk2012: ::std::os::raw::c_int,
    pub unk2013: ::std::os::raw::c_int,
    pub unk2014: ::std::os::raw::c_int,
    pub unk2015: ::std::os::raw::c_int,
    pub unk2016: ::std::os::raw::c_int,
    pub unk2017: ::std::os::raw::c_int,
    pub unk2018: ::std::os::raw::c_int,
    pub unk2019: ::std::os::raw::c_int,
    pub unk2020: ::std::os::raw::c_int,
    pub unk2021: ::std::os::raw::c_int,
    pub unk2022: ::std::os::raw::c_int,
    pub unk2023: ::std::os::raw::c_int,
    pub unk2024: ::std::os::raw::c_int,
    pub unk2025: ::std::os::raw::c_int,
    pub unk2026: ::std::os::raw::c_int,
    pub unk2027: ::std::os::raw::c_int,
    pub unk2028: ::std::os::raw::c_int,
    pub unk2029: ::std::os::raw::c_int,
    pub unk2030: ::std::os::raw::c_int,
    pub unk2031: ::std::os::raw::c_int,
    pub unk2032: ::std::os::raw::c_int,
    pub unk2033: ::std::os::raw::c_int,
    pub unk2034: ::std::os::raw::c_int,
    pub unk2035: ::std::os::raw::c_int,
    pub unk2036: ::std::os::raw::c_int,
    pub unk2037: ::std::os::raw::c_int,
    pub unk2038: ::std::os::raw::c_int,
    pub unk2039: ::std::os::raw::c_int,
    pub unk2040: ::std::os::raw::c_int,
    pub unk2041: ::std::os::raw::c_int,
    pub unk2042: ::std::os::raw::c_int,
    pub unk2043: ::std::os::raw::c_int,
    pub unk2044: ::std::os::raw::c_int,
    pub unk2045: ::std::os::raw::c_int,
    pub unk2046: ::std::os::raw::c_int,
    pub unk2047: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_Memcard() {
    assert_eq!(
        ::std::mem::size_of::<Memcard>(),
        8192usize,
        concat!("Size of: ", stringify!(Memcard))
    );
    assert_eq!(
        ::std::mem::align_of::<Memcard>(),
        4usize,
        concat!("Alignment of ", stringify!(Memcard))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk3 as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk4 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk5 as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk6 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk7 as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk8 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk9 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk9)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk10 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk11 as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk11)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk12 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk12)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk13 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk13)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk14 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk15 as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk15)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk16 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk16)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk17 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk17)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk18 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk19 as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk19)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk20 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk21 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk21)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk22 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk22)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk23 as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk23)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk24 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk25 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk25)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk26 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk26)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk27 as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk27)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk28 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk29 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk29)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk30 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk31 as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk31)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk32 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk32)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk33 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk33)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk34 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk35 as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk35)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk36 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk36)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk37 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk37)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk38 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk39 as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk39)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk40 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk41 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk41)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk42 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk42)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk43 as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk43)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk44 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk45 as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk45)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk46 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk46)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk47 as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk47)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk48 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk49 as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk49)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk50 as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk51 as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk51)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk52 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk52)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk53 as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk53)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk54 as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk55 as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk55)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk56 as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk56)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk57 as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk57)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk58 as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk59 as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk59)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk60 as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk61 as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk61)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk62 as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk62)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk63 as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk63)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk64 as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk65 as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk65)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk66 as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk66)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk67 as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk67)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk68 as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk69 as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk69)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk70 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk71 as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk71)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk72 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk72)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk73 as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk73)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk74 as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk75 as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk75)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk76 as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk76)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk77 as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk77)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk78 as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk79 as *const _ as usize },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk79)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk80 as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk81 as *const _ as usize },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk81)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk82 as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk82)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk83 as *const _ as usize },
        332usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk83)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk84 as *const _ as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk85 as *const _ as usize },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk85)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk86 as *const _ as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk86)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk87 as *const _ as usize },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk87)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk88 as *const _ as usize },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk89 as *const _ as usize },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk89)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk90 as *const _ as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk91 as *const _ as usize },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk91)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk92 as *const _ as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk92)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk93 as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk93)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk94 as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk95 as *const _ as usize },
        380usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk95)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk96 as *const _ as usize },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk96)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk97 as *const _ as usize },
        388usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk97)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk98 as *const _ as usize },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk99 as *const _ as usize },
        396usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk99)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk100 as *const _ as usize },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk101 as *const _ as usize },
        404usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk101)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk102 as *const _ as usize },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk102)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk103 as *const _ as usize },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk103)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk104 as *const _ as usize },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk105 as *const _ as usize },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk105)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk106 as *const _ as usize },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk106)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk107 as *const _ as usize },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk107)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk108 as *const _ as usize },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk109 as *const _ as usize },
        436usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk109)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk110 as *const _ as usize },
        440usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk111 as *const _ as usize },
        444usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk111)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk112 as *const _ as usize },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk112)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk113 as *const _ as usize },
        452usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk113)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk114 as *const _ as usize },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk115 as *const _ as usize },
        460usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk115)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk116 as *const _ as usize },
        464usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk116)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk117 as *const _ as usize },
        468usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk117)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk118 as *const _ as usize },
        472usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk119 as *const _ as usize },
        476usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk119)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk120 as *const _ as usize },
        480usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk121 as *const _ as usize },
        484usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk121)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk122 as *const _ as usize },
        488usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk122)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk123 as *const _ as usize },
        492usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk123)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk124 as *const _ as usize },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk125 as *const _ as usize },
        500usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk125)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk126 as *const _ as usize },
        504usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk126)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk127 as *const _ as usize },
        508usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk127)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk128 as *const _ as usize },
        512usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk129 as *const _ as usize },
        516usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk129)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk130 as *const _ as usize },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk131 as *const _ as usize },
        524usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk131)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk132 as *const _ as usize },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk132)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk133 as *const _ as usize },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk133)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk134 as *const _ as usize },
        536usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk135 as *const _ as usize },
        540usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk135)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk136 as *const _ as usize },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk136)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk137 as *const _ as usize },
        548usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk137)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk138 as *const _ as usize },
        552usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk139 as *const _ as usize },
        556usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk139)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk140 as *const _ as usize },
        560usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk141 as *const _ as usize },
        564usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk141)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk142 as *const _ as usize },
        568usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk142)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk143 as *const _ as usize },
        572usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk143)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk144 as *const _ as usize },
        576usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk145 as *const _ as usize },
        580usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk145)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk146 as *const _ as usize },
        584usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk146)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk147 as *const _ as usize },
        588usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk147)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk148 as *const _ as usize },
        592usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk149 as *const _ as usize },
        596usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk149)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk150 as *const _ as usize },
        600usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk151 as *const _ as usize },
        604usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk151)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk152 as *const _ as usize },
        608usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk152)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk153 as *const _ as usize },
        612usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk153)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk154 as *const _ as usize },
        616usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk155 as *const _ as usize },
        620usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk155)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk156 as *const _ as usize },
        624usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk156)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk157 as *const _ as usize },
        628usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk157)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk158 as *const _ as usize },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk159 as *const _ as usize },
        636usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk159)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk160 as *const _ as usize },
        640usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk161 as *const _ as usize },
        644usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk161)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk162 as *const _ as usize },
        648usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk162)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk163 as *const _ as usize },
        652usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk163)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk164 as *const _ as usize },
        656usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk165 as *const _ as usize },
        660usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk165)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk166 as *const _ as usize },
        664usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk166)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk167 as *const _ as usize },
        668usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk167)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk168 as *const _ as usize },
        672usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk169 as *const _ as usize },
        676usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk169)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk170 as *const _ as usize },
        680usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk171 as *const _ as usize },
        684usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk171)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk172 as *const _ as usize },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk172)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk173 as *const _ as usize },
        692usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk173)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk174 as *const _ as usize },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk175 as *const _ as usize },
        700usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk175)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk176 as *const _ as usize },
        704usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk176)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk177 as *const _ as usize },
        708usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk177)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk178 as *const _ as usize },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk179 as *const _ as usize },
        716usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk179)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk180 as *const _ as usize },
        720usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk181 as *const _ as usize },
        724usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk181)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk182 as *const _ as usize },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk182)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk183 as *const _ as usize },
        732usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk183)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk184 as *const _ as usize },
        736usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk185 as *const _ as usize },
        740usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk185)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk186 as *const _ as usize },
        744usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk186)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk187 as *const _ as usize },
        748usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk187)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk188 as *const _ as usize },
        752usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk189 as *const _ as usize },
        756usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk189)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk190 as *const _ as usize },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk190)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk191 as *const _ as usize },
        764usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk191)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk192 as *const _ as usize },
        768usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk192)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk193 as *const _ as usize },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk193)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk194 as *const _ as usize },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk194)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk195 as *const _ as usize },
        780usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk195)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk196 as *const _ as usize },
        784usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk196)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk197 as *const _ as usize },
        788usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk197)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk198 as *const _ as usize },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk198)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk199 as *const _ as usize },
        796usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk199)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk200 as *const _ as usize },
        800usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk200)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk201 as *const _ as usize },
        804usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk201)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk202 as *const _ as usize },
        808usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk202)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk203 as *const _ as usize },
        812usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk203)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk204 as *const _ as usize },
        816usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk204)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk205 as *const _ as usize },
        820usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk205)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk206 as *const _ as usize },
        824usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk206)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk207 as *const _ as usize },
        828usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk207)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk208 as *const _ as usize },
        832usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk208)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk209 as *const _ as usize },
        836usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk209)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk210 as *const _ as usize },
        840usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk210)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk211 as *const _ as usize },
        844usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk211)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk212 as *const _ as usize },
        848usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk212)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk213 as *const _ as usize },
        852usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk213)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk214 as *const _ as usize },
        856usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk214)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk215 as *const _ as usize },
        860usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk215)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk216 as *const _ as usize },
        864usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk216)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk217 as *const _ as usize },
        868usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk217)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk218 as *const _ as usize },
        872usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk218)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk219 as *const _ as usize },
        876usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk219)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk220 as *const _ as usize },
        880usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk220)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk221 as *const _ as usize },
        884usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk221)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk222 as *const _ as usize },
        888usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk222)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk223 as *const _ as usize },
        892usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk223)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk224 as *const _ as usize },
        896usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk224)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk225 as *const _ as usize },
        900usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk225)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk226 as *const _ as usize },
        904usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk226)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk227 as *const _ as usize },
        908usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk227)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk228 as *const _ as usize },
        912usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk228)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk229 as *const _ as usize },
        916usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk229)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk230 as *const _ as usize },
        920usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk230)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk231 as *const _ as usize },
        924usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk231)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk232 as *const _ as usize },
        928usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk232)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk233 as *const _ as usize },
        932usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk233)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk234 as *const _ as usize },
        936usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk234)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk235 as *const _ as usize },
        940usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk235)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk236 as *const _ as usize },
        944usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk236)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk237 as *const _ as usize },
        948usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk237)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk238 as *const _ as usize },
        952usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk238)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk239 as *const _ as usize },
        956usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk239)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk240 as *const _ as usize },
        960usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk240)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk241 as *const _ as usize },
        964usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk241)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk242 as *const _ as usize },
        968usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk242)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk243 as *const _ as usize },
        972usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk243)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk244 as *const _ as usize },
        976usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk244)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk245 as *const _ as usize },
        980usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk245)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk246 as *const _ as usize },
        984usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk246)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk247 as *const _ as usize },
        988usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk247)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk248 as *const _ as usize },
        992usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk248)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk249 as *const _ as usize },
        996usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk249)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk250 as *const _ as usize },
        1000usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk250)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk251 as *const _ as usize },
        1004usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk251)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk252 as *const _ as usize },
        1008usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk252)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk253 as *const _ as usize },
        1012usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk253)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk254 as *const _ as usize },
        1016usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk254)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk255 as *const _ as usize },
        1020usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk255)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk256 as *const _ as usize },
        1024usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk256)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk257 as *const _ as usize },
        1028usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk257)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk258 as *const _ as usize },
        1032usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk258)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk259 as *const _ as usize },
        1036usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk259)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk260 as *const _ as usize },
        1040usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk260)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk261 as *const _ as usize },
        1044usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk261)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk262 as *const _ as usize },
        1048usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk262)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk263 as *const _ as usize },
        1052usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk263)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk264 as *const _ as usize },
        1056usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk264)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk265 as *const _ as usize },
        1060usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk265)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk266 as *const _ as usize },
        1064usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk266)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk267 as *const _ as usize },
        1068usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk267)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk268 as *const _ as usize },
        1072usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk268)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk269 as *const _ as usize },
        1076usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk269)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk270 as *const _ as usize },
        1080usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk270)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk271 as *const _ as usize },
        1084usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk271)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk272 as *const _ as usize },
        1088usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk272)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk273 as *const _ as usize },
        1092usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk273)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk274 as *const _ as usize },
        1096usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk274)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk275 as *const _ as usize },
        1100usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk275)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk276 as *const _ as usize },
        1104usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk276)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk277 as *const _ as usize },
        1108usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk277)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk278 as *const _ as usize },
        1112usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk278)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk279 as *const _ as usize },
        1116usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk279)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk280 as *const _ as usize },
        1120usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk280)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk281 as *const _ as usize },
        1124usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk281)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk282 as *const _ as usize },
        1128usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk282)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk283 as *const _ as usize },
        1132usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk283)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk284 as *const _ as usize },
        1136usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk284)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk285 as *const _ as usize },
        1140usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk285)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk286 as *const _ as usize },
        1144usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk286)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk287 as *const _ as usize },
        1148usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk287)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk288 as *const _ as usize },
        1152usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk288)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk289 as *const _ as usize },
        1156usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk289)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk290 as *const _ as usize },
        1160usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk290)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk291 as *const _ as usize },
        1164usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk291)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk292 as *const _ as usize },
        1168usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk292)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk293 as *const _ as usize },
        1172usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk293)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk294 as *const _ as usize },
        1176usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk294)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk295 as *const _ as usize },
        1180usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk295)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk296 as *const _ as usize },
        1184usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk296)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk297 as *const _ as usize },
        1188usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk297)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk298 as *const _ as usize },
        1192usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk298)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk299 as *const _ as usize },
        1196usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk299)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk300 as *const _ as usize },
        1200usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk300)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk301 as *const _ as usize },
        1204usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk301)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk302 as *const _ as usize },
        1208usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk302)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk303 as *const _ as usize },
        1212usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk303)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk304 as *const _ as usize },
        1216usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk304)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk305 as *const _ as usize },
        1220usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk305)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk306 as *const _ as usize },
        1224usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk306)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk307 as *const _ as usize },
        1228usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk307)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk308 as *const _ as usize },
        1232usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk308)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk309 as *const _ as usize },
        1236usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk309)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk310 as *const _ as usize },
        1240usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk310)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk311 as *const _ as usize },
        1244usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk311)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk312 as *const _ as usize },
        1248usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk312)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk313 as *const _ as usize },
        1252usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk313)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk314 as *const _ as usize },
        1256usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk314)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk315 as *const _ as usize },
        1260usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk315)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk316 as *const _ as usize },
        1264usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk316)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk317 as *const _ as usize },
        1268usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk317)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk318 as *const _ as usize },
        1272usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk318)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk319 as *const _ as usize },
        1276usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk319)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk320 as *const _ as usize },
        1280usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk320)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk321 as *const _ as usize },
        1284usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk321)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk322 as *const _ as usize },
        1288usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk322)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk323 as *const _ as usize },
        1292usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk323)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk324 as *const _ as usize },
        1296usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk324)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk325 as *const _ as usize },
        1300usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk325)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk326 as *const _ as usize },
        1304usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk326)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk327 as *const _ as usize },
        1308usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk327)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk328 as *const _ as usize },
        1312usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk328)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk329 as *const _ as usize },
        1316usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk329)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk330 as *const _ as usize },
        1320usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk330)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk331 as *const _ as usize },
        1324usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk331)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).EventBackup as *const _ as usize },
        1328usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(EventBackup)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk335 as *const _ as usize },
        1340usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk335)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk336 as *const _ as usize },
        1344usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk336)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk337 as *const _ as usize },
        1348usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk337)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk338 as *const _ as usize },
        1352usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk338)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk339 as *const _ as usize },
        1356usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk339)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk340 as *const _ as usize },
        1360usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk340)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk341 as *const _ as usize },
        1364usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk341)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk342 as *const _ as usize },
        1368usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk342)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk343 as *const _ as usize },
        1372usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk343)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk344 as *const _ as usize },
        1376usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk344)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk345 as *const _ as usize },
        1380usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk345)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk346 as *const _ as usize },
        1384usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk346)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk347 as *const _ as usize },
        1388usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk347)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk348 as *const _ as usize },
        1392usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk348)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk349 as *const _ as usize },
        1396usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk349)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk350 as *const _ as usize },
        1400usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk350)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk351 as *const _ as usize },
        1404usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk351)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk352 as *const _ as usize },
        1408usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk352)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk353 as *const _ as usize },
        1412usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk353)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk354 as *const _ as usize },
        1416usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk354)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk355 as *const _ as usize },
        1420usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk355)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk356 as *const _ as usize },
        1424usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk356)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk357 as *const _ as usize },
        1428usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk357)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk358 as *const _ as usize },
        1432usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk358)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk359 as *const _ as usize },
        1436usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk359)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk360 as *const _ as usize },
        1440usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk360)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk361 as *const _ as usize },
        1444usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk361)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk362 as *const _ as usize },
        1448usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk362)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk363 as *const _ as usize },
        1452usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk363)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk364 as *const _ as usize },
        1456usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk364)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk365 as *const _ as usize },
        1460usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk365)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk366 as *const _ as usize },
        1464usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk366)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk367 as *const _ as usize },
        1468usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk367)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk368 as *const _ as usize },
        1472usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk368)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk369 as *const _ as usize },
        1476usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk369)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk370 as *const _ as usize },
        1480usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk370)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk371 as *const _ as usize },
        1484usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk371)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk372 as *const _ as usize },
        1488usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk372)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk373 as *const _ as usize },
        1492usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk373)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk374 as *const _ as usize },
        1496usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk374)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk375 as *const _ as usize },
        1500usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk375)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk376 as *const _ as usize },
        1504usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk376)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk377 as *const _ as usize },
        1508usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk377)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk378 as *const _ as usize },
        1512usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk378)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk379 as *const _ as usize },
        1516usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk379)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk380 as *const _ as usize },
        1520usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk380)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk381 as *const _ as usize },
        1524usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk381)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk382 as *const _ as usize },
        1528usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk382)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk383 as *const _ as usize },
        1532usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk383)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk384 as *const _ as usize },
        1536usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk384)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk385 as *const _ as usize },
        1540usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk385)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk386 as *const _ as usize },
        1544usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk386)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk387 as *const _ as usize },
        1548usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk387)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk388 as *const _ as usize },
        1552usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk388)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk389 as *const _ as usize },
        1556usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk389)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk390 as *const _ as usize },
        1560usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk390)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk391 as *const _ as usize },
        1564usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk391)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk392 as *const _ as usize },
        1568usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk392)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk393 as *const _ as usize },
        1572usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk393)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk394 as *const _ as usize },
        1576usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk394)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk395 as *const _ as usize },
        1580usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk395)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk396 as *const _ as usize },
        1584usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk396)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk397 as *const _ as usize },
        1588usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk397)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk398 as *const _ as usize },
        1592usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk398)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk399 as *const _ as usize },
        1596usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk399)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk400 as *const _ as usize },
        1600usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk400)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk401 as *const _ as usize },
        1604usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk401)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk402 as *const _ as usize },
        1608usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk402)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk403 as *const _ as usize },
        1612usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk403)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk404 as *const _ as usize },
        1616usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk404)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk405 as *const _ as usize },
        1620usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk405)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk406 as *const _ as usize },
        1624usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk406)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk407 as *const _ as usize },
        1628usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk407)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk408 as *const _ as usize },
        1632usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk408)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk409 as *const _ as usize },
        1636usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk409)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk410 as *const _ as usize },
        1640usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk410)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk411 as *const _ as usize },
        1644usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk411)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk412 as *const _ as usize },
        1648usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk412)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk413 as *const _ as usize },
        1652usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk413)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk414 as *const _ as usize },
        1656usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk414)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk415 as *const _ as usize },
        1660usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk415)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk416 as *const _ as usize },
        1664usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk416)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk417 as *const _ as usize },
        1668usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk417)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk418 as *const _ as usize },
        1672usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk418)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk419 as *const _ as usize },
        1676usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk419)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk420 as *const _ as usize },
        1680usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk420)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk421 as *const _ as usize },
        1684usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk421)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk422 as *const _ as usize },
        1688usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk422)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk423 as *const _ as usize },
        1692usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk423)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk424 as *const _ as usize },
        1696usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk424)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk425 as *const _ as usize },
        1700usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk425)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk426 as *const _ as usize },
        1704usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk426)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk427 as *const _ as usize },
        1708usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk427)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk428 as *const _ as usize },
        1712usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk428)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk429 as *const _ as usize },
        1716usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk429)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk430 as *const _ as usize },
        1720usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk430)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk431 as *const _ as usize },
        1724usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk431)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk432 as *const _ as usize },
        1728usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk432)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk433 as *const _ as usize },
        1732usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk433)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk434 as *const _ as usize },
        1736usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk434)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk435 as *const _ as usize },
        1740usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk435)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk436 as *const _ as usize },
        1744usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk436)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk437 as *const _ as usize },
        1748usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk437)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk438 as *const _ as usize },
        1752usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk438)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk439 as *const _ as usize },
        1756usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk439)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk440 as *const _ as usize },
        1760usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk440)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk441 as *const _ as usize },
        1764usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk441)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk442 as *const _ as usize },
        1768usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk442)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk443 as *const _ as usize },
        1772usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk443)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk444 as *const _ as usize },
        1776usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk444)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk445 as *const _ as usize },
        1780usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk445)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk446 as *const _ as usize },
        1784usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk446)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk447 as *const _ as usize },
        1788usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk447)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk448 as *const _ as usize },
        1792usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk448)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk449 as *const _ as usize },
        1796usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk449)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk450 as *const _ as usize },
        1800usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk450)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk451 as *const _ as usize },
        1804usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk451)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk452 as *const _ as usize },
        1808usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk452)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk453 as *const _ as usize },
        1812usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk453)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk454 as *const _ as usize },
        1816usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk454)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk455 as *const _ as usize },
        1820usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk455)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk456 as *const _ as usize },
        1824usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk456)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk457 as *const _ as usize },
        1828usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk457)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk458 as *const _ as usize },
        1832usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk458)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk459 as *const _ as usize },
        1836usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk459)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk460 as *const _ as usize },
        1840usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk460)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk461 as *const _ as usize },
        1844usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk461)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk462 as *const _ as usize },
        1848usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk462)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk463 as *const _ as usize },
        1852usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk463)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk464 as *const _ as usize },
        1856usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk464)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk465 as *const _ as usize },
        1860usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk465)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk466 as *const _ as usize },
        1864usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk466)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk467 as *const _ as usize },
        1868usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk467)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk468 as *const _ as usize },
        1872usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk468)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk469 as *const _ as usize },
        1876usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk469)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk470 as *const _ as usize },
        1880usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk470)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk471 as *const _ as usize },
        1884usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk471)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk472 as *const _ as usize },
        1888usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk472)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk473 as *const _ as usize },
        1892usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk473)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk474 as *const _ as usize },
        1896usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk474)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk475 as *const _ as usize },
        1900usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk475)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk476 as *const _ as usize },
        1904usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk476)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk477 as *const _ as usize },
        1908usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk477)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk478 as *const _ as usize },
        1912usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk478)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk479 as *const _ as usize },
        1916usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk479)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk480 as *const _ as usize },
        1920usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk480)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk481 as *const _ as usize },
        1924usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk481)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk482 as *const _ as usize },
        1928usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk482)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk483 as *const _ as usize },
        1932usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk483)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk484 as *const _ as usize },
        1936usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk484)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk485 as *const _ as usize },
        1940usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk485)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk486 as *const _ as usize },
        1944usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk486)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk487 as *const _ as usize },
        1948usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk487)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk488 as *const _ as usize },
        1952usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk488)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk489 as *const _ as usize },
        1956usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk489)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk490 as *const _ as usize },
        1960usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk490)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk491 as *const _ as usize },
        1964usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk491)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk492 as *const _ as usize },
        1968usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk492)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk493 as *const _ as usize },
        1972usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk493)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk494 as *const _ as usize },
        1976usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk494)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk495 as *const _ as usize },
        1980usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk495)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk496 as *const _ as usize },
        1984usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk496)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk497 as *const _ as usize },
        1988usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk497)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk498 as *const _ as usize },
        1992usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk498)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk499 as *const _ as usize },
        1996usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk499)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk500 as *const _ as usize },
        2000usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk500)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk501 as *const _ as usize },
        2004usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk501)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk502 as *const _ as usize },
        2008usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk502)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk503 as *const _ as usize },
        2012usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk503)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk504 as *const _ as usize },
        2016usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk504)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk505 as *const _ as usize },
        2020usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk505)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk506 as *const _ as usize },
        2024usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk506)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk507 as *const _ as usize },
        2028usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk507)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk508 as *const _ as usize },
        2032usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk508)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk509 as *const _ as usize },
        2036usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk509)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk510 as *const _ as usize },
        2040usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk510)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk511 as *const _ as usize },
        2044usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk511)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk512 as *const _ as usize },
        2048usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk512)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk513 as *const _ as usize },
        2052usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk513)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk514 as *const _ as usize },
        2056usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk514)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk515 as *const _ as usize },
        2060usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk515)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk516 as *const _ as usize },
        2064usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk516)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk517 as *const _ as usize },
        2068usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk517)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk518 as *const _ as usize },
        2072usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk518)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk519 as *const _ as usize },
        2076usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk519)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk520 as *const _ as usize },
        2080usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk520)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk521 as *const _ as usize },
        2084usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk521)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk522 as *const _ as usize },
        2088usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk522)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk523 as *const _ as usize },
        2092usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk523)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk524 as *const _ as usize },
        2096usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk524)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk525 as *const _ as usize },
        2100usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk525)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk526 as *const _ as usize },
        2104usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk526)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk527 as *const _ as usize },
        2108usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk527)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk528 as *const _ as usize },
        2112usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk528)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk529 as *const _ as usize },
        2116usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk529)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk530 as *const _ as usize },
        2120usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk530)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk531 as *const _ as usize },
        2124usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk531)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk532 as *const _ as usize },
        2128usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk532)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk533 as *const _ as usize },
        2132usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk533)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk534 as *const _ as usize },
        2136usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk534)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk535 as *const _ as usize },
        2140usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk535)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk536 as *const _ as usize },
        2144usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk536)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk537 as *const _ as usize },
        2148usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk537)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk538 as *const _ as usize },
        2152usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk538)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk539 as *const _ as usize },
        2156usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk539)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk540 as *const _ as usize },
        2160usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk540)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk541 as *const _ as usize },
        2164usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk541)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk542 as *const _ as usize },
        2168usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk542)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk543 as *const _ as usize },
        2172usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk543)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk544 as *const _ as usize },
        2176usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk544)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk545 as *const _ as usize },
        2180usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk545)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk546 as *const _ as usize },
        2184usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk546)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk547 as *const _ as usize },
        2188usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk547)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk548 as *const _ as usize },
        2192usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk548)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk549 as *const _ as usize },
        2196usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk549)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk550 as *const _ as usize },
        2200usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk550)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk551 as *const _ as usize },
        2204usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk551)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk552 as *const _ as usize },
        2208usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk552)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk553 as *const _ as usize },
        2212usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk553)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk554 as *const _ as usize },
        2216usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk554)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk555 as *const _ as usize },
        2220usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk555)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk556 as *const _ as usize },
        2224usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk556)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk557 as *const _ as usize },
        2228usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk557)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk558 as *const _ as usize },
        2232usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk558)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk559 as *const _ as usize },
        2236usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk559)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk560 as *const _ as usize },
        2240usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk560)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk561 as *const _ as usize },
        2244usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk561)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk562 as *const _ as usize },
        2248usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk562)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk563 as *const _ as usize },
        2252usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk563)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk564 as *const _ as usize },
        2256usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk564)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk565 as *const _ as usize },
        2260usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk565)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk566 as *const _ as usize },
        2264usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk566)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk567 as *const _ as usize },
        2268usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk567)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk568 as *const _ as usize },
        2272usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk568)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk569 as *const _ as usize },
        2276usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk569)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk570 as *const _ as usize },
        2280usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk570)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk571 as *const _ as usize },
        2284usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk571)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk572 as *const _ as usize },
        2288usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk572)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk573 as *const _ as usize },
        2292usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk573)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk574 as *const _ as usize },
        2296usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk574)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk575 as *const _ as usize },
        2300usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk575)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk576 as *const _ as usize },
        2304usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk576)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk577 as *const _ as usize },
        2308usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk577)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk578 as *const _ as usize },
        2312usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk578)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk579 as *const _ as usize },
        2316usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk579)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk580 as *const _ as usize },
        2320usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk580)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk581 as *const _ as usize },
        2324usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk581)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk582 as *const _ as usize },
        2328usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk582)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk583 as *const _ as usize },
        2332usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk583)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk584 as *const _ as usize },
        2336usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk584)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk585 as *const _ as usize },
        2340usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk585)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk586 as *const _ as usize },
        2344usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk586)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk587 as *const _ as usize },
        2348usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk587)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk588 as *const _ as usize },
        2352usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk588)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk589 as *const _ as usize },
        2356usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk589)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk590 as *const _ as usize },
        2360usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk590)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk591 as *const _ as usize },
        2364usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk591)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk592 as *const _ as usize },
        2368usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk592)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk593 as *const _ as usize },
        2372usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk593)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk594 as *const _ as usize },
        2376usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk594)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk595 as *const _ as usize },
        2380usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk595)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk596 as *const _ as usize },
        2384usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk596)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk597 as *const _ as usize },
        2388usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk597)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk598 as *const _ as usize },
        2392usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk598)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk599 as *const _ as usize },
        2396usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk599)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk600 as *const _ as usize },
        2400usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk600)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk601 as *const _ as usize },
        2404usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk601)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk602 as *const _ as usize },
        2408usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk602)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk603 as *const _ as usize },
        2412usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk603)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk604 as *const _ as usize },
        2416usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk604)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk605 as *const _ as usize },
        2420usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk605)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk606 as *const _ as usize },
        2424usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk606)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk607 as *const _ as usize },
        2428usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk607)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk608 as *const _ as usize },
        2432usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk608)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk609 as *const _ as usize },
        2436usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk609)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk610 as *const _ as usize },
        2440usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk610)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk611 as *const _ as usize },
        2444usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk611)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk612 as *const _ as usize },
        2448usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk612)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk613 as *const _ as usize },
        2452usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk613)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk614 as *const _ as usize },
        2456usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk614)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk615 as *const _ as usize },
        2460usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk615)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk616 as *const _ as usize },
        2464usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk616)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk617 as *const _ as usize },
        2468usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk617)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk618 as *const _ as usize },
        2472usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk618)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk619 as *const _ as usize },
        2476usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk619)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk620 as *const _ as usize },
        2480usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk620)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk621 as *const _ as usize },
        2484usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk621)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk622 as *const _ as usize },
        2488usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk622)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk623 as *const _ as usize },
        2492usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk623)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk624 as *const _ as usize },
        2496usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk624)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk625 as *const _ as usize },
        2500usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk625)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk626 as *const _ as usize },
        2504usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk626)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk627 as *const _ as usize },
        2508usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk627)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk628 as *const _ as usize },
        2512usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk628)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk629 as *const _ as usize },
        2516usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk629)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk630 as *const _ as usize },
        2520usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk630)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk631 as *const _ as usize },
        2524usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk631)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk632 as *const _ as usize },
        2528usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk632)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk633 as *const _ as usize },
        2532usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk633)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk634 as *const _ as usize },
        2536usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk634)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk635 as *const _ as usize },
        2540usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk635)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk636 as *const _ as usize },
        2544usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk636)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk637 as *const _ as usize },
        2548usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk637)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk638 as *const _ as usize },
        2552usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk638)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk639 as *const _ as usize },
        2556usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk639)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk640 as *const _ as usize },
        2560usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk640)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk641 as *const _ as usize },
        2564usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk641)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk642 as *const _ as usize },
        2568usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk642)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk643 as *const _ as usize },
        2572usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk643)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk644 as *const _ as usize },
        2576usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk644)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk645 as *const _ as usize },
        2580usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk645)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk646 as *const _ as usize },
        2584usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk646)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk647 as *const _ as usize },
        2588usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk647)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk648 as *const _ as usize },
        2592usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk648)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk649 as *const _ as usize },
        2596usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk649)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk650 as *const _ as usize },
        2600usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk650)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk651 as *const _ as usize },
        2604usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk651)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk652 as *const _ as usize },
        2608usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk652)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk653 as *const _ as usize },
        2612usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk653)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk654 as *const _ as usize },
        2616usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk654)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk655 as *const _ as usize },
        2620usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk655)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk656 as *const _ as usize },
        2624usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk656)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk657 as *const _ as usize },
        2628usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk657)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk658 as *const _ as usize },
        2632usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk658)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk659 as *const _ as usize },
        2636usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk659)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk660 as *const _ as usize },
        2640usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk660)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk661 as *const _ as usize },
        2644usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk661)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk662 as *const _ as usize },
        2648usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk662)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk663 as *const _ as usize },
        2652usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk663)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk664 as *const _ as usize },
        2656usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk664)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk665 as *const _ as usize },
        2660usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk665)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk666 as *const _ as usize },
        2664usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk666)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk667 as *const _ as usize },
        2668usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk667)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk668 as *const _ as usize },
        2672usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk668)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk669 as *const _ as usize },
        2676usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk669)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk670 as *const _ as usize },
        2680usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk670)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk671 as *const _ as usize },
        2684usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk671)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk672 as *const _ as usize },
        2688usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk672)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk673 as *const _ as usize },
        2692usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk673)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk674 as *const _ as usize },
        2696usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk674)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk675 as *const _ as usize },
        2700usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk675)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk676 as *const _ as usize },
        2704usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk676)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk677 as *const _ as usize },
        2708usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk677)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk678 as *const _ as usize },
        2712usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk678)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk679 as *const _ as usize },
        2716usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk679)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk680 as *const _ as usize },
        2720usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk680)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk681 as *const _ as usize },
        2724usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk681)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk682 as *const _ as usize },
        2728usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk682)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk683 as *const _ as usize },
        2732usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk683)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk684 as *const _ as usize },
        2736usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk684)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk685 as *const _ as usize },
        2740usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk685)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk686 as *const _ as usize },
        2744usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk686)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk687 as *const _ as usize },
        2748usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk687)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk688 as *const _ as usize },
        2752usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk688)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk689 as *const _ as usize },
        2756usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk689)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk690 as *const _ as usize },
        2760usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk690)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk691 as *const _ as usize },
        2764usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk691)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk692 as *const _ as usize },
        2768usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk692)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk693 as *const _ as usize },
        2772usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk693)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk694 as *const _ as usize },
        2776usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk694)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk695 as *const _ as usize },
        2780usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk695)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk696 as *const _ as usize },
        2784usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk696)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk697 as *const _ as usize },
        2788usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk697)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk698 as *const _ as usize },
        2792usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk698)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk699 as *const _ as usize },
        2796usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk699)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk700 as *const _ as usize },
        2800usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk700)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk701 as *const _ as usize },
        2804usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk701)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk702 as *const _ as usize },
        2808usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk702)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk703 as *const _ as usize },
        2812usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk703)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk704 as *const _ as usize },
        2816usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk704)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk705 as *const _ as usize },
        2820usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk705)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk706 as *const _ as usize },
        2824usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk706)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk707 as *const _ as usize },
        2828usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk707)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk708 as *const _ as usize },
        2832usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk708)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk709 as *const _ as usize },
        2836usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk709)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk710 as *const _ as usize },
        2840usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk710)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk711 as *const _ as usize },
        2844usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk711)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk712 as *const _ as usize },
        2848usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk712)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk713 as *const _ as usize },
        2852usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk713)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk714 as *const _ as usize },
        2856usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk714)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk715 as *const _ as usize },
        2860usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk715)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk716 as *const _ as usize },
        2864usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk716)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk717 as *const _ as usize },
        2868usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk717)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk718 as *const _ as usize },
        2872usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk718)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk719 as *const _ as usize },
        2876usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk719)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk720 as *const _ as usize },
        2880usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk720)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk721 as *const _ as usize },
        2884usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk721)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk722 as *const _ as usize },
        2888usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk722)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk723 as *const _ as usize },
        2892usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk723)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk724 as *const _ as usize },
        2896usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk724)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk725 as *const _ as usize },
        2900usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk725)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk726 as *const _ as usize },
        2904usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk726)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk727 as *const _ as usize },
        2908usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk727)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk728 as *const _ as usize },
        2912usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk728)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk729 as *const _ as usize },
        2916usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk729)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk730 as *const _ as usize },
        2920usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk730)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk731 as *const _ as usize },
        2924usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk731)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk732 as *const _ as usize },
        2928usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk732)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk733 as *const _ as usize },
        2932usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk733)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk734 as *const _ as usize },
        2936usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk734)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk735 as *const _ as usize },
        2940usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk735)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk736 as *const _ as usize },
        2944usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk736)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk737 as *const _ as usize },
        2948usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk737)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk738 as *const _ as usize },
        2952usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk738)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk739 as *const _ as usize },
        2956usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk739)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk740 as *const _ as usize },
        2960usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk740)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk741 as *const _ as usize },
        2964usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk741)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk742 as *const _ as usize },
        2968usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk742)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk743 as *const _ as usize },
        2972usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk743)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk744 as *const _ as usize },
        2976usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk744)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk745 as *const _ as usize },
        2980usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk745)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk746 as *const _ as usize },
        2984usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk746)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk747 as *const _ as usize },
        2988usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk747)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk748 as *const _ as usize },
        2992usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk748)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk749 as *const _ as usize },
        2996usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk749)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk750 as *const _ as usize },
        3000usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk750)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk751 as *const _ as usize },
        3004usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk751)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk752 as *const _ as usize },
        3008usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk752)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk753 as *const _ as usize },
        3012usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk753)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk754 as *const _ as usize },
        3016usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk754)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk755 as *const _ as usize },
        3020usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk755)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk756 as *const _ as usize },
        3024usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk756)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk757 as *const _ as usize },
        3028usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk757)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk758 as *const _ as usize },
        3032usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk758)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk759 as *const _ as usize },
        3036usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk759)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk760 as *const _ as usize },
        3040usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk760)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk761 as *const _ as usize },
        3044usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk761)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk762 as *const _ as usize },
        3048usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk762)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk763 as *const _ as usize },
        3052usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk763)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk764 as *const _ as usize },
        3056usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk764)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk765 as *const _ as usize },
        3060usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk765)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk766 as *const _ as usize },
        3064usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk766)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk767 as *const _ as usize },
        3068usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk767)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk768 as *const _ as usize },
        3072usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk768)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk769 as *const _ as usize },
        3076usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk769)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk770 as *const _ as usize },
        3080usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk770)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk771 as *const _ as usize },
        3084usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk771)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk772 as *const _ as usize },
        3088usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk772)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk773 as *const _ as usize },
        3092usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk773)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk774 as *const _ as usize },
        3096usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk774)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk775 as *const _ as usize },
        3100usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk775)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk776 as *const _ as usize },
        3104usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk776)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk777 as *const _ as usize },
        3108usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk777)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk778 as *const _ as usize },
        3112usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk778)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk779 as *const _ as usize },
        3116usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk779)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk780 as *const _ as usize },
        3120usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk780)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk781 as *const _ as usize },
        3124usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk781)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk782 as *const _ as usize },
        3128usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk782)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk783 as *const _ as usize },
        3132usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk783)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk784 as *const _ as usize },
        3136usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk784)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk785 as *const _ as usize },
        3140usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk785)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk786 as *const _ as usize },
        3144usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk786)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk787 as *const _ as usize },
        3148usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk787)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk788 as *const _ as usize },
        3152usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk788)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk789 as *const _ as usize },
        3156usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk789)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk790 as *const _ as usize },
        3160usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk790)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk791 as *const _ as usize },
        3164usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk791)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk792 as *const _ as usize },
        3168usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk792)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk793 as *const _ as usize },
        3172usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk793)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk794 as *const _ as usize },
        3176usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk794)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk795 as *const _ as usize },
        3180usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk795)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk796 as *const _ as usize },
        3184usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk796)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk797 as *const _ as usize },
        3188usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk797)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk798 as *const _ as usize },
        3192usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk798)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk799 as *const _ as usize },
        3196usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk799)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk800 as *const _ as usize },
        3200usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk800)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk801 as *const _ as usize },
        3204usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk801)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk802 as *const _ as usize },
        3208usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk802)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk803 as *const _ as usize },
        3212usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk803)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk804 as *const _ as usize },
        3216usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk804)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk805 as *const _ as usize },
        3220usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk805)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk806 as *const _ as usize },
        3224usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk806)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk807 as *const _ as usize },
        3228usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk807)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk808 as *const _ as usize },
        3232usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk808)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk809 as *const _ as usize },
        3236usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk809)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk810 as *const _ as usize },
        3240usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk810)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk811 as *const _ as usize },
        3244usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk811)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk812 as *const _ as usize },
        3248usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk812)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk813 as *const _ as usize },
        3252usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk813)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk814 as *const _ as usize },
        3256usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk814)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk815 as *const _ as usize },
        3260usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk815)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk816 as *const _ as usize },
        3264usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk816)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk817 as *const _ as usize },
        3268usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk817)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk818 as *const _ as usize },
        3272usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk818)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk819 as *const _ as usize },
        3276usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk819)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk820 as *const _ as usize },
        3280usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk820)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk821 as *const _ as usize },
        3284usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk821)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk822 as *const _ as usize },
        3288usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk822)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk823 as *const _ as usize },
        3292usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk823)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk824 as *const _ as usize },
        3296usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk824)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk825 as *const _ as usize },
        3300usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk825)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk826 as *const _ as usize },
        3304usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk826)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk827 as *const _ as usize },
        3308usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk827)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk828 as *const _ as usize },
        3312usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk828)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk829 as *const _ as usize },
        3316usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk829)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk830 as *const _ as usize },
        3320usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk830)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk831 as *const _ as usize },
        3324usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk831)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk832 as *const _ as usize },
        3328usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk832)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk833 as *const _ as usize },
        3332usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk833)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk834 as *const _ as usize },
        3336usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk834)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk835 as *const _ as usize },
        3340usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk835)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk836 as *const _ as usize },
        3344usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk836)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk837 as *const _ as usize },
        3348usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk837)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk838 as *const _ as usize },
        3352usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk838)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk839 as *const _ as usize },
        3356usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk839)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk840 as *const _ as usize },
        3360usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk840)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk841 as *const _ as usize },
        3364usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk841)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk842 as *const _ as usize },
        3368usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk842)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk843 as *const _ as usize },
        3372usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk843)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk844 as *const _ as usize },
        3376usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk844)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk845 as *const _ as usize },
        3380usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk845)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk846 as *const _ as usize },
        3384usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk846)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk847 as *const _ as usize },
        3388usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk847)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk848 as *const _ as usize },
        3392usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk848)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk849 as *const _ as usize },
        3396usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk849)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk850 as *const _ as usize },
        3400usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk850)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk851 as *const _ as usize },
        3404usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk851)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk852 as *const _ as usize },
        3408usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk852)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk853 as *const _ as usize },
        3412usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk853)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk854 as *const _ as usize },
        3416usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk854)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk855 as *const _ as usize },
        3420usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk855)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk856 as *const _ as usize },
        3424usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk856)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk857 as *const _ as usize },
        3428usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk857)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk858 as *const _ as usize },
        3432usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk858)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk859 as *const _ as usize },
        3436usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk859)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk860 as *const _ as usize },
        3440usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk860)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk861 as *const _ as usize },
        3444usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk861)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk862 as *const _ as usize },
        3448usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk862)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk863 as *const _ as usize },
        3452usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk863)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk864 as *const _ as usize },
        3456usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk864)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk865 as *const _ as usize },
        3460usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk865)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk866 as *const _ as usize },
        3464usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk866)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk867 as *const _ as usize },
        3468usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk867)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk868 as *const _ as usize },
        3472usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk868)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk869 as *const _ as usize },
        3476usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk869)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk870 as *const _ as usize },
        3480usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk870)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk871 as *const _ as usize },
        3484usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk871)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk872 as *const _ as usize },
        3488usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk872)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk873 as *const _ as usize },
        3492usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk873)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk874 as *const _ as usize },
        3496usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk874)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk875 as *const _ as usize },
        3500usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk875)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk876 as *const _ as usize },
        3504usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk876)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk877 as *const _ as usize },
        3508usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk877)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk878 as *const _ as usize },
        3512usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk878)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk879 as *const _ as usize },
        3516usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk879)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk880 as *const _ as usize },
        3520usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk880)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk881 as *const _ as usize },
        3524usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk881)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk882 as *const _ as usize },
        3528usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk882)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk883 as *const _ as usize },
        3532usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk883)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk884 as *const _ as usize },
        3536usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk884)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk885 as *const _ as usize },
        3540usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk885)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk886 as *const _ as usize },
        3544usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk886)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk887 as *const _ as usize },
        3548usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk887)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk888 as *const _ as usize },
        3552usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk888)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk889 as *const _ as usize },
        3556usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk889)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk890 as *const _ as usize },
        3560usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk890)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk891 as *const _ as usize },
        3564usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk891)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk892 as *const _ as usize },
        3568usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk892)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk893 as *const _ as usize },
        3572usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk893)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk894 as *const _ as usize },
        3576usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk894)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk895 as *const _ as usize },
        3580usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk895)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk896 as *const _ as usize },
        3584usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk896)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk897 as *const _ as usize },
        3588usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk897)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk898 as *const _ as usize },
        3592usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk898)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk899 as *const _ as usize },
        3596usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk899)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk900 as *const _ as usize },
        3600usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk900)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk901 as *const _ as usize },
        3604usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk901)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk902 as *const _ as usize },
        3608usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk902)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk903 as *const _ as usize },
        3612usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk903)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk904 as *const _ as usize },
        3616usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk904)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk905 as *const _ as usize },
        3620usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk905)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk906 as *const _ as usize },
        3624usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk906)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk907 as *const _ as usize },
        3628usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk907)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk908 as *const _ as usize },
        3632usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk908)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk909 as *const _ as usize },
        3636usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk909)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk910 as *const _ as usize },
        3640usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk910)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk911 as *const _ as usize },
        3644usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk911)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk912 as *const _ as usize },
        3648usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk912)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk913 as *const _ as usize },
        3652usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk913)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk914 as *const _ as usize },
        3656usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk914)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk915 as *const _ as usize },
        3660usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk915)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk916 as *const _ as usize },
        3664usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk916)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk917 as *const _ as usize },
        3668usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk917)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk918 as *const _ as usize },
        3672usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk918)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk919 as *const _ as usize },
        3676usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk919)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk920 as *const _ as usize },
        3680usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk920)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk921 as *const _ as usize },
        3684usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk921)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk922 as *const _ as usize },
        3688usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk922)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk923 as *const _ as usize },
        3692usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk923)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk924 as *const _ as usize },
        3696usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk924)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk925 as *const _ as usize },
        3700usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk925)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk926 as *const _ as usize },
        3704usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk926)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk927 as *const _ as usize },
        3708usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk927)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk928 as *const _ as usize },
        3712usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk928)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk929 as *const _ as usize },
        3716usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk929)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk930 as *const _ as usize },
        3720usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk930)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk931 as *const _ as usize },
        3724usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk931)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk932 as *const _ as usize },
        3728usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk932)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk933 as *const _ as usize },
        3732usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk933)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk934 as *const _ as usize },
        3736usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk934)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk935 as *const _ as usize },
        3740usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk935)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk936 as *const _ as usize },
        3744usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk936)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk937 as *const _ as usize },
        3748usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk937)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk938 as *const _ as usize },
        3752usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk938)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk939 as *const _ as usize },
        3756usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk939)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk940 as *const _ as usize },
        3760usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk940)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk941 as *const _ as usize },
        3764usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk941)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk942 as *const _ as usize },
        3768usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk942)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk943 as *const _ as usize },
        3772usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk943)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk944 as *const _ as usize },
        3776usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk944)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk945 as *const _ as usize },
        3780usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk945)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk946 as *const _ as usize },
        3784usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk946)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk947 as *const _ as usize },
        3788usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk947)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk948 as *const _ as usize },
        3792usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk948)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk949 as *const _ as usize },
        3796usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk949)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk950 as *const _ as usize },
        3800usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk950)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk951 as *const _ as usize },
        3804usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk951)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk952 as *const _ as usize },
        3808usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk952)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk953 as *const _ as usize },
        3812usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk953)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk954 as *const _ as usize },
        3816usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk954)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk955 as *const _ as usize },
        3820usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk955)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk956 as *const _ as usize },
        3824usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk956)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk957 as *const _ as usize },
        3828usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk957)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk958 as *const _ as usize },
        3832usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk958)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk959 as *const _ as usize },
        3836usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk959)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk960 as *const _ as usize },
        3840usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk960)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk961 as *const _ as usize },
        3844usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk961)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk962 as *const _ as usize },
        3848usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk962)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk963 as *const _ as usize },
        3852usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk963)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk964 as *const _ as usize },
        3856usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk964)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk965 as *const _ as usize },
        3860usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk965)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk966 as *const _ as usize },
        3864usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk966)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk967 as *const _ as usize },
        3868usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk967)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk968 as *const _ as usize },
        3872usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk968)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk969 as *const _ as usize },
        3876usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk969)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk970 as *const _ as usize },
        3880usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk970)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk971 as *const _ as usize },
        3884usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk971)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk972 as *const _ as usize },
        3888usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk972)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk973 as *const _ as usize },
        3892usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk973)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk974 as *const _ as usize },
        3896usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk974)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk975 as *const _ as usize },
        3900usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk975)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk976 as *const _ as usize },
        3904usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk976)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk977 as *const _ as usize },
        3908usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk977)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk978 as *const _ as usize },
        3912usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk978)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk979 as *const _ as usize },
        3916usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk979)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk980 as *const _ as usize },
        3920usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk980)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk981 as *const _ as usize },
        3924usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk981)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk982 as *const _ as usize },
        3928usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk982)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk983 as *const _ as usize },
        3932usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk983)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk984 as *const _ as usize },
        3936usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk984)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk985 as *const _ as usize },
        3940usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk985)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk986 as *const _ as usize },
        3944usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk986)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk987 as *const _ as usize },
        3948usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk987)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk988 as *const _ as usize },
        3952usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk988)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk989 as *const _ as usize },
        3956usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk989)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk990 as *const _ as usize },
        3960usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk990)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk991 as *const _ as usize },
        3964usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk991)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk992 as *const _ as usize },
        3968usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk992)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk993 as *const _ as usize },
        3972usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk993)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk994 as *const _ as usize },
        3976usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk994)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk995 as *const _ as usize },
        3980usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk995)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk996 as *const _ as usize },
        3984usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk996)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk997 as *const _ as usize },
        3988usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk997)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk998 as *const _ as usize },
        3992usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk998)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk999 as *const _ as usize },
        3996usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk999)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1000 as *const _ as usize },
        4000usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1000)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1001 as *const _ as usize },
        4004usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1001)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1002 as *const _ as usize },
        4008usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1002)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1003 as *const _ as usize },
        4012usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1003)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1004 as *const _ as usize },
        4016usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1004)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1005 as *const _ as usize },
        4020usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1005)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1006 as *const _ as usize },
        4024usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1006)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1007 as *const _ as usize },
        4028usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1007)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1008 as *const _ as usize },
        4032usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1008)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1009 as *const _ as usize },
        4036usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1009)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1010 as *const _ as usize },
        4040usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1010)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1011 as *const _ as usize },
        4044usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1011)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1012 as *const _ as usize },
        4048usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1012)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1013 as *const _ as usize },
        4052usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1013)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1014 as *const _ as usize },
        4056usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1014)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1015 as *const _ as usize },
        4060usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1015)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1016 as *const _ as usize },
        4064usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1016)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1017 as *const _ as usize },
        4068usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1017)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1018 as *const _ as usize },
        4072usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1018)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1019 as *const _ as usize },
        4076usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1019)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1020 as *const _ as usize },
        4080usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1020)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1021 as *const _ as usize },
        4084usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1021)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1022 as *const _ as usize },
        4088usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1022)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1023 as *const _ as usize },
        4092usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1023)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1024 as *const _ as usize },
        4096usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1024)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1025 as *const _ as usize },
        4100usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1025)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1026 as *const _ as usize },
        4104usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1026)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1027 as *const _ as usize },
        4108usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1027)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1028 as *const _ as usize },
        4112usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1028)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1029 as *const _ as usize },
        4116usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1029)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1030 as *const _ as usize },
        4120usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1030)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1031 as *const _ as usize },
        4124usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1031)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1032 as *const _ as usize },
        4128usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1032)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1033 as *const _ as usize },
        4132usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1033)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1034 as *const _ as usize },
        4136usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1034)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1035 as *const _ as usize },
        4140usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1035)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1036 as *const _ as usize },
        4144usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1036)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1037 as *const _ as usize },
        4148usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1037)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1038 as *const _ as usize },
        4152usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1038)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1039 as *const _ as usize },
        4156usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1039)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1040 as *const _ as usize },
        4160usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1040)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1041 as *const _ as usize },
        4164usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1041)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1042 as *const _ as usize },
        4168usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1042)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1043 as *const _ as usize },
        4172usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1043)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1044 as *const _ as usize },
        4176usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1044)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1045 as *const _ as usize },
        4180usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1045)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1046 as *const _ as usize },
        4184usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1046)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1047 as *const _ as usize },
        4188usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1047)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1048 as *const _ as usize },
        4192usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1048)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1049 as *const _ as usize },
        4196usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1049)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1050 as *const _ as usize },
        4200usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1050)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1051 as *const _ as usize },
        4204usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1051)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1052 as *const _ as usize },
        4208usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1052)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1053 as *const _ as usize },
        4212usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1053)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1054 as *const _ as usize },
        4216usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1054)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1055 as *const _ as usize },
        4220usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1055)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1056 as *const _ as usize },
        4224usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1056)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1057 as *const _ as usize },
        4228usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1057)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1058 as *const _ as usize },
        4232usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1058)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1059 as *const _ as usize },
        4236usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1059)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1060 as *const _ as usize },
        4240usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1060)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1061 as *const _ as usize },
        4244usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1061)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1062 as *const _ as usize },
        4248usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1062)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1063 as *const _ as usize },
        4252usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1063)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1064 as *const _ as usize },
        4256usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1064)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1065 as *const _ as usize },
        4260usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1065)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1066 as *const _ as usize },
        4264usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1066)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1067 as *const _ as usize },
        4268usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1067)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1068 as *const _ as usize },
        4272usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1068)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1069 as *const _ as usize },
        4276usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1069)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1070 as *const _ as usize },
        4280usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1070)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1071 as *const _ as usize },
        4284usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1071)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1072 as *const _ as usize },
        4288usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1072)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1073 as *const _ as usize },
        4292usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1073)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1074 as *const _ as usize },
        4296usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1074)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1075 as *const _ as usize },
        4300usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1075)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1076 as *const _ as usize },
        4304usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1076)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1077 as *const _ as usize },
        4308usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1077)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1078 as *const _ as usize },
        4312usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1078)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1079 as *const _ as usize },
        4316usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1079)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1080 as *const _ as usize },
        4320usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1080)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1081 as *const _ as usize },
        4324usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1081)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1082 as *const _ as usize },
        4328usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1082)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1083 as *const _ as usize },
        4332usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1083)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1084 as *const _ as usize },
        4336usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1084)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1085 as *const _ as usize },
        4340usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1085)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1086 as *const _ as usize },
        4344usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1086)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1087 as *const _ as usize },
        4348usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1087)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1088 as *const _ as usize },
        4352usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1088)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1089 as *const _ as usize },
        4356usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1089)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1090 as *const _ as usize },
        4360usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1090)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1091 as *const _ as usize },
        4364usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1091)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1092 as *const _ as usize },
        4368usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1092)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1093 as *const _ as usize },
        4372usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1093)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1094 as *const _ as usize },
        4376usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1094)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1095 as *const _ as usize },
        4380usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1095)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1096 as *const _ as usize },
        4384usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1096)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1097 as *const _ as usize },
        4388usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1097)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1098 as *const _ as usize },
        4392usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1098)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1099 as *const _ as usize },
        4396usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1099)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1100 as *const _ as usize },
        4400usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1101 as *const _ as usize },
        4404usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1101)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1102 as *const _ as usize },
        4408usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1102)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1103 as *const _ as usize },
        4412usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1103)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1104 as *const _ as usize },
        4416usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1105 as *const _ as usize },
        4420usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1105)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1106 as *const _ as usize },
        4424usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1106)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1107 as *const _ as usize },
        4428usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1107)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1108 as *const _ as usize },
        4432usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1109 as *const _ as usize },
        4436usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1109)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1110 as *const _ as usize },
        4440usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1111 as *const _ as usize },
        4444usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1111)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1112 as *const _ as usize },
        4448usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1112)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1113 as *const _ as usize },
        4452usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1113)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1114 as *const _ as usize },
        4456usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1115 as *const _ as usize },
        4460usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1115)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1116 as *const _ as usize },
        4464usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1116)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1117 as *const _ as usize },
        4468usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1117)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1118 as *const _ as usize },
        4472usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1119 as *const _ as usize },
        4476usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1119)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1120 as *const _ as usize },
        4480usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1121 as *const _ as usize },
        4484usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1121)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1122 as *const _ as usize },
        4488usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1122)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1123 as *const _ as usize },
        4492usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1123)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1124 as *const _ as usize },
        4496usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1125 as *const _ as usize },
        4500usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1125)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1126 as *const _ as usize },
        4504usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1126)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1127 as *const _ as usize },
        4508usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1127)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1128 as *const _ as usize },
        4512usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1129 as *const _ as usize },
        4516usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1129)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1130 as *const _ as usize },
        4520usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1131 as *const _ as usize },
        4524usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1131)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1132 as *const _ as usize },
        4528usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1132)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1133 as *const _ as usize },
        4532usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1133)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1134 as *const _ as usize },
        4536usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1135 as *const _ as usize },
        4540usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1135)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1136 as *const _ as usize },
        4544usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1136)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1137 as *const _ as usize },
        4548usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1137)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1138 as *const _ as usize },
        4552usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1139 as *const _ as usize },
        4556usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1139)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1140 as *const _ as usize },
        4560usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1141 as *const _ as usize },
        4564usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1141)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1142 as *const _ as usize },
        4568usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1142)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1143 as *const _ as usize },
        4572usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1143)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1144 as *const _ as usize },
        4576usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1145 as *const _ as usize },
        4580usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1145)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1146 as *const _ as usize },
        4584usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1146)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1147 as *const _ as usize },
        4588usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1147)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1148 as *const _ as usize },
        4592usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1149 as *const _ as usize },
        4596usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1149)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1150 as *const _ as usize },
        4600usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1151 as *const _ as usize },
        4604usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1151)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1152 as *const _ as usize },
        4608usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1152)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1153 as *const _ as usize },
        4612usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1153)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1154 as *const _ as usize },
        4616usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1155 as *const _ as usize },
        4620usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1155)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1156 as *const _ as usize },
        4624usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1156)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1157 as *const _ as usize },
        4628usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1157)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1158 as *const _ as usize },
        4632usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1159 as *const _ as usize },
        4636usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1159)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1160 as *const _ as usize },
        4640usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1161 as *const _ as usize },
        4644usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1161)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1162 as *const _ as usize },
        4648usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1162)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1163 as *const _ as usize },
        4652usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1163)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1164 as *const _ as usize },
        4656usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1165 as *const _ as usize },
        4660usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1165)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1166 as *const _ as usize },
        4664usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1166)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1167 as *const _ as usize },
        4668usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1167)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1168 as *const _ as usize },
        4672usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1169 as *const _ as usize },
        4676usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1169)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1170 as *const _ as usize },
        4680usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1171 as *const _ as usize },
        4684usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1171)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1172 as *const _ as usize },
        4688usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1172)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1173 as *const _ as usize },
        4692usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1173)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1174 as *const _ as usize },
        4696usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1175 as *const _ as usize },
        4700usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1175)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1176 as *const _ as usize },
        4704usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1176)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1177 as *const _ as usize },
        4708usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1177)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1178 as *const _ as usize },
        4712usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1179 as *const _ as usize },
        4716usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1179)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1180 as *const _ as usize },
        4720usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1181 as *const _ as usize },
        4724usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1181)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1182 as *const _ as usize },
        4728usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1182)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1183 as *const _ as usize },
        4732usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1183)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1184 as *const _ as usize },
        4736usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1185 as *const _ as usize },
        4740usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1185)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1186 as *const _ as usize },
        4744usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1186)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1187 as *const _ as usize },
        4748usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1187)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1188 as *const _ as usize },
        4752usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1189 as *const _ as usize },
        4756usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1189)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1190 as *const _ as usize },
        4760usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1190)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1191 as *const _ as usize },
        4764usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1191)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1192 as *const _ as usize },
        4768usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1192)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1193 as *const _ as usize },
        4772usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1193)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1194 as *const _ as usize },
        4776usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1194)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1195 as *const _ as usize },
        4780usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1195)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1196 as *const _ as usize },
        4784usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1196)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1197 as *const _ as usize },
        4788usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1197)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1198 as *const _ as usize },
        4792usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1198)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1199 as *const _ as usize },
        4796usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1199)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1200 as *const _ as usize },
        4800usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1200)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1201 as *const _ as usize },
        4804usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1201)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1202 as *const _ as usize },
        4808usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1202)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1203 as *const _ as usize },
        4812usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1203)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1204 as *const _ as usize },
        4816usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1204)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1205 as *const _ as usize },
        4820usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1205)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1206 as *const _ as usize },
        4824usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1206)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1207 as *const _ as usize },
        4828usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1207)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1208 as *const _ as usize },
        4832usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1208)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1209 as *const _ as usize },
        4836usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1209)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1210 as *const _ as usize },
        4840usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1210)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1211 as *const _ as usize },
        4844usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1211)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1212 as *const _ as usize },
        4848usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1212)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1213 as *const _ as usize },
        4852usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1213)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1214 as *const _ as usize },
        4856usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1214)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1215 as *const _ as usize },
        4860usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1215)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1216 as *const _ as usize },
        4864usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1216)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1217 as *const _ as usize },
        4868usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1217)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1218 as *const _ as usize },
        4872usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1218)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1219 as *const _ as usize },
        4876usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1219)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1220 as *const _ as usize },
        4880usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1220)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1221 as *const _ as usize },
        4884usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1221)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1222 as *const _ as usize },
        4888usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1222)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1223 as *const _ as usize },
        4892usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1223)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1224 as *const _ as usize },
        4896usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1224)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1225 as *const _ as usize },
        4900usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1225)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1226 as *const _ as usize },
        4904usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1226)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1227 as *const _ as usize },
        4908usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1227)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1228 as *const _ as usize },
        4912usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1228)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1229 as *const _ as usize },
        4916usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1229)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1230 as *const _ as usize },
        4920usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1230)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1231 as *const _ as usize },
        4924usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1231)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1232 as *const _ as usize },
        4928usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1232)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1233 as *const _ as usize },
        4932usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1233)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1234 as *const _ as usize },
        4936usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1234)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1235 as *const _ as usize },
        4940usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1235)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1236 as *const _ as usize },
        4944usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1236)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1237 as *const _ as usize },
        4948usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1237)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1238 as *const _ as usize },
        4952usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1238)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1239 as *const _ as usize },
        4956usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1239)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1240 as *const _ as usize },
        4960usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1240)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1241 as *const _ as usize },
        4964usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1241)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1242 as *const _ as usize },
        4968usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1242)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1243 as *const _ as usize },
        4972usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1243)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1244 as *const _ as usize },
        4976usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1244)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1245 as *const _ as usize },
        4980usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1245)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1246 as *const _ as usize },
        4984usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1246)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1247 as *const _ as usize },
        4988usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1247)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1248 as *const _ as usize },
        4992usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1248)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1249 as *const _ as usize },
        4996usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1249)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1250 as *const _ as usize },
        5000usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1250)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1251 as *const _ as usize },
        5004usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1251)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1252 as *const _ as usize },
        5008usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1252)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1253 as *const _ as usize },
        5012usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1253)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1254 as *const _ as usize },
        5016usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1254)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1255 as *const _ as usize },
        5020usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1255)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1256 as *const _ as usize },
        5024usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1256)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1257 as *const _ as usize },
        5028usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1257)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1258 as *const _ as usize },
        5032usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1258)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1259 as *const _ as usize },
        5036usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1259)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1260 as *const _ as usize },
        5040usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1260)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1261 as *const _ as usize },
        5044usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1261)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1262 as *const _ as usize },
        5048usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1262)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1263 as *const _ as usize },
        5052usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1263)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1264 as *const _ as usize },
        5056usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1264)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1265 as *const _ as usize },
        5060usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1265)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1266 as *const _ as usize },
        5064usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1266)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1267 as *const _ as usize },
        5068usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1267)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1268 as *const _ as usize },
        5072usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1268)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1269 as *const _ as usize },
        5076usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1269)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1270 as *const _ as usize },
        5080usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1270)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1271 as *const _ as usize },
        5084usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1271)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1272 as *const _ as usize },
        5088usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1272)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1273 as *const _ as usize },
        5092usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1273)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1274 as *const _ as usize },
        5096usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1274)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1275 as *const _ as usize },
        5100usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1275)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1276 as *const _ as usize },
        5104usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1276)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1277 as *const _ as usize },
        5108usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1277)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1278 as *const _ as usize },
        5112usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1278)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1279 as *const _ as usize },
        5116usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1279)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1280 as *const _ as usize },
        5120usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1280)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1281 as *const _ as usize },
        5124usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1281)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1282 as *const _ as usize },
        5128usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1282)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1283 as *const _ as usize },
        5132usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1283)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1284 as *const _ as usize },
        5136usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1284)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1285 as *const _ as usize },
        5140usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1285)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1286 as *const _ as usize },
        5144usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1286)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1287 as *const _ as usize },
        5148usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1287)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1288 as *const _ as usize },
        5152usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1288)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1289 as *const _ as usize },
        5156usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1289)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1290 as *const _ as usize },
        5160usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1290)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1291 as *const _ as usize },
        5164usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1291)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1292 as *const _ as usize },
        5168usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1292)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1293 as *const _ as usize },
        5172usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1293)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1294 as *const _ as usize },
        5176usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1294)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1295 as *const _ as usize },
        5180usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1295)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1296 as *const _ as usize },
        5184usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1296)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1297 as *const _ as usize },
        5188usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1297)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1298 as *const _ as usize },
        5192usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1298)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1299 as *const _ as usize },
        5196usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1299)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1300 as *const _ as usize },
        5200usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1300)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1301 as *const _ as usize },
        5204usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1301)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1302 as *const _ as usize },
        5208usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1302)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1303 as *const _ as usize },
        5212usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1303)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1304 as *const _ as usize },
        5216usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1304)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1305 as *const _ as usize },
        5220usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1305)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1306 as *const _ as usize },
        5224usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1306)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1307 as *const _ as usize },
        5228usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1307)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1308 as *const _ as usize },
        5232usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1308)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1309 as *const _ as usize },
        5236usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1309)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1310 as *const _ as usize },
        5240usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1310)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1311 as *const _ as usize },
        5244usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1311)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1312 as *const _ as usize },
        5248usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1312)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1313 as *const _ as usize },
        5252usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1313)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1314 as *const _ as usize },
        5256usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1314)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1315 as *const _ as usize },
        5260usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1315)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1316 as *const _ as usize },
        5264usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1316)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1317 as *const _ as usize },
        5268usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1317)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1318 as *const _ as usize },
        5272usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1318)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1319 as *const _ as usize },
        5276usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1319)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1320 as *const _ as usize },
        5280usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1320)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1321 as *const _ as usize },
        5284usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1321)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1322 as *const _ as usize },
        5288usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1322)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1323 as *const _ as usize },
        5292usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1323)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1324 as *const _ as usize },
        5296usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1324)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1325 as *const _ as usize },
        5300usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1325)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1326 as *const _ as usize },
        5304usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1326)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1327 as *const _ as usize },
        5308usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1327)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1328 as *const _ as usize },
        5312usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1328)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1329 as *const _ as usize },
        5316usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1329)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1330 as *const _ as usize },
        5320usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1330)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1331 as *const _ as usize },
        5324usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1331)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1332 as *const _ as usize },
        5328usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1332)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1333 as *const _ as usize },
        5332usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1333)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1334 as *const _ as usize },
        5336usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1334)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1335 as *const _ as usize },
        5340usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1335)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1336 as *const _ as usize },
        5344usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1336)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1337 as *const _ as usize },
        5348usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1337)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1338 as *const _ as usize },
        5352usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1338)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1339 as *const _ as usize },
        5356usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1339)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1340 as *const _ as usize },
        5360usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1340)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1341 as *const _ as usize },
        5364usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1341)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1342 as *const _ as usize },
        5368usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1342)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1343 as *const _ as usize },
        5372usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1343)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1344 as *const _ as usize },
        5376usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1344)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1345 as *const _ as usize },
        5380usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1345)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1346 as *const _ as usize },
        5384usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1346)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1347 as *const _ as usize },
        5388usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1347)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1348 as *const _ as usize },
        5392usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1348)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1349 as *const _ as usize },
        5396usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1349)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1350 as *const _ as usize },
        5400usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1350)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1351 as *const _ as usize },
        5404usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1351)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1352 as *const _ as usize },
        5408usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1352)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1353 as *const _ as usize },
        5412usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1353)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1354 as *const _ as usize },
        5416usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1354)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1355 as *const _ as usize },
        5420usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1355)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1356 as *const _ as usize },
        5424usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1356)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1357 as *const _ as usize },
        5428usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1357)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1358 as *const _ as usize },
        5432usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1358)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1359 as *const _ as usize },
        5436usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1359)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1360 as *const _ as usize },
        5440usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1360)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1361 as *const _ as usize },
        5444usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1361)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1362 as *const _ as usize },
        5448usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1362)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1363 as *const _ as usize },
        5452usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1363)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1364 as *const _ as usize },
        5456usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1364)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1365 as *const _ as usize },
        5460usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1365)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1366 as *const _ as usize },
        5464usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1366)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1367 as *const _ as usize },
        5468usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1367)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1368 as *const _ as usize },
        5472usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1368)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1369 as *const _ as usize },
        5476usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1369)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1370 as *const _ as usize },
        5480usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1370)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1371 as *const _ as usize },
        5484usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1371)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1372 as *const _ as usize },
        5488usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1372)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1373 as *const _ as usize },
        5492usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1373)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1374 as *const _ as usize },
        5496usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1374)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1375 as *const _ as usize },
        5500usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1375)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1376 as *const _ as usize },
        5504usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1376)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1377 as *const _ as usize },
        5508usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1377)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1378 as *const _ as usize },
        5512usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1378)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1379 as *const _ as usize },
        5516usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1379)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1380 as *const _ as usize },
        5520usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1380)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1381 as *const _ as usize },
        5524usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1381)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1382 as *const _ as usize },
        5528usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1382)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1383 as *const _ as usize },
        5532usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1383)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1384 as *const _ as usize },
        5536usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1384)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1385 as *const _ as usize },
        5540usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1385)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1386 as *const _ as usize },
        5544usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1386)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1387 as *const _ as usize },
        5548usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1387)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1388 as *const _ as usize },
        5552usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1388)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1389 as *const _ as usize },
        5556usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1389)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1390 as *const _ as usize },
        5560usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1390)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1391 as *const _ as usize },
        5564usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1391)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1392 as *const _ as usize },
        5568usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1392)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1393 as *const _ as usize },
        5572usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1393)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1394 as *const _ as usize },
        5576usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1394)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1395 as *const _ as usize },
        5580usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1395)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1396 as *const _ as usize },
        5584usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1396)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1397 as *const _ as usize },
        5588usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1397)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1398 as *const _ as usize },
        5592usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1398)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1399 as *const _ as usize },
        5596usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1399)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1400 as *const _ as usize },
        5600usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1400)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1401 as *const _ as usize },
        5604usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1401)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1402 as *const _ as usize },
        5608usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1402)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1403 as *const _ as usize },
        5612usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1403)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1404 as *const _ as usize },
        5616usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1404)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1405 as *const _ as usize },
        5620usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1405)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1406 as *const _ as usize },
        5624usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1406)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1407 as *const _ as usize },
        5628usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1407)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1408 as *const _ as usize },
        5632usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1408)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1409 as *const _ as usize },
        5636usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1409)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1410 as *const _ as usize },
        5640usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1410)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1411 as *const _ as usize },
        5644usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1411)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1412 as *const _ as usize },
        5648usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1412)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1413 as *const _ as usize },
        5652usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1413)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1414 as *const _ as usize },
        5656usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1414)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1415 as *const _ as usize },
        5660usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1415)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1416 as *const _ as usize },
        5664usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1416)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1417 as *const _ as usize },
        5668usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1417)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1418 as *const _ as usize },
        5672usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1418)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1419 as *const _ as usize },
        5676usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1419)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1420 as *const _ as usize },
        5680usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1420)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1421 as *const _ as usize },
        5684usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1421)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1422 as *const _ as usize },
        5688usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1422)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1423 as *const _ as usize },
        5692usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1423)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1424 as *const _ as usize },
        5696usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1424)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1425 as *const _ as usize },
        5700usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1425)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1426 as *const _ as usize },
        5704usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1426)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1427 as *const _ as usize },
        5708usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1427)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1428 as *const _ as usize },
        5712usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1428)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1429 as *const _ as usize },
        5716usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1429)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1430 as *const _ as usize },
        5720usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1430)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1431 as *const _ as usize },
        5724usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1431)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1432 as *const _ as usize },
        5728usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1432)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1433 as *const _ as usize },
        5732usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1433)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1434 as *const _ as usize },
        5736usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1434)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1435 as *const _ as usize },
        5740usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1435)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1436 as *const _ as usize },
        5744usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1436)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1437 as *const _ as usize },
        5748usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1437)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1438 as *const _ as usize },
        5752usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1438)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1439 as *const _ as usize },
        5756usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1439)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1440 as *const _ as usize },
        5760usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1440)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1441 as *const _ as usize },
        5764usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1441)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1442 as *const _ as usize },
        5768usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1442)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1443 as *const _ as usize },
        5772usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1443)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1444 as *const _ as usize },
        5776usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1444)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1445 as *const _ as usize },
        5780usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1445)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1446 as *const _ as usize },
        5784usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1446)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1447 as *const _ as usize },
        5788usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1447)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1448 as *const _ as usize },
        5792usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1448)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1449 as *const _ as usize },
        5796usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1449)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1450 as *const _ as usize },
        5800usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1450)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1451 as *const _ as usize },
        5804usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1451)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1452 as *const _ as usize },
        5808usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1452)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1453 as *const _ as usize },
        5812usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1453)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1454 as *const _ as usize },
        5816usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1454)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1455 as *const _ as usize },
        5820usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1455)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1456 as *const _ as usize },
        5824usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1456)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1457 as *const _ as usize },
        5828usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1457)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1458 as *const _ as usize },
        5832usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1458)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1459 as *const _ as usize },
        5836usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1459)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1460 as *const _ as usize },
        5840usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1460)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1461 as *const _ as usize },
        5844usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1461)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1462 as *const _ as usize },
        5848usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1462)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1463 as *const _ as usize },
        5852usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1463)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1464 as *const _ as usize },
        5856usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1464)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1465 as *const _ as usize },
        5860usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1465)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1466 as *const _ as usize },
        5864usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1466)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1467 as *const _ as usize },
        5868usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1467)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1468 as *const _ as usize },
        5872usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1468)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1469 as *const _ as usize },
        5876usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1469)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1470 as *const _ as usize },
        5880usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1470)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1471 as *const _ as usize },
        5884usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1471)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1472 as *const _ as usize },
        5888usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1472)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1473 as *const _ as usize },
        5892usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1473)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1474 as *const _ as usize },
        5896usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1474)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1475 as *const _ as usize },
        5900usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1475)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1476 as *const _ as usize },
        5904usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1476)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1477 as *const _ as usize },
        5908usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1477)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1478 as *const _ as usize },
        5912usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1478)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1479 as *const _ as usize },
        5916usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1479)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1480 as *const _ as usize },
        5920usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1480)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1481 as *const _ as usize },
        5924usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1481)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1482 as *const _ as usize },
        5928usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1482)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1483 as *const _ as usize },
        5932usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1483)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1484 as *const _ as usize },
        5936usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1484)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1485 as *const _ as usize },
        5940usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1485)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1486 as *const _ as usize },
        5944usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1486)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1487 as *const _ as usize },
        5948usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1487)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1488 as *const _ as usize },
        5952usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1488)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1489 as *const _ as usize },
        5956usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1489)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1490 as *const _ as usize },
        5960usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1490)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1491 as *const _ as usize },
        5964usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1491)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1492 as *const _ as usize },
        5968usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1492)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1493 as *const _ as usize },
        5972usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1493)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1494 as *const _ as usize },
        5976usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1494)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1495 as *const _ as usize },
        5980usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1495)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1496 as *const _ as usize },
        5984usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1496)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1497 as *const _ as usize },
        5988usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1497)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1498 as *const _ as usize },
        5992usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1498)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1499 as *const _ as usize },
        5996usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1499)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1500 as *const _ as usize },
        6000usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1500)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1501 as *const _ as usize },
        6004usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1501)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1502 as *const _ as usize },
        6008usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1502)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1503 as *const _ as usize },
        6012usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1503)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1504 as *const _ as usize },
        6016usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1504)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1505 as *const _ as usize },
        6020usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1505)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1506 as *const _ as usize },
        6024usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1506)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1507 as *const _ as usize },
        6028usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1507)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1508 as *const _ as usize },
        6032usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1508)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1509 as *const _ as usize },
        6036usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1509)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1510 as *const _ as usize },
        6040usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1510)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1511 as *const _ as usize },
        6044usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1511)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1512 as *const _ as usize },
        6048usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1512)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1513 as *const _ as usize },
        6052usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1513)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1514 as *const _ as usize },
        6056usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1514)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1515 as *const _ as usize },
        6060usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1515)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1516 as *const _ as usize },
        6064usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1516)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1517 as *const _ as usize },
        6068usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1517)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1518 as *const _ as usize },
        6072usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1518)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1519 as *const _ as usize },
        6076usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1519)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1520 as *const _ as usize },
        6080usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1520)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1521 as *const _ as usize },
        6084usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1521)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1522 as *const _ as usize },
        6088usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1522)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1523 as *const _ as usize },
        6092usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1523)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1524 as *const _ as usize },
        6096usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1524)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1525 as *const _ as usize },
        6100usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1525)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1526 as *const _ as usize },
        6104usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1526)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1527 as *const _ as usize },
        6108usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1527)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1528 as *const _ as usize },
        6112usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1528)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1529 as *const _ as usize },
        6116usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1529)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1530 as *const _ as usize },
        6120usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1530)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1531 as *const _ as usize },
        6124usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1531)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1532 as *const _ as usize },
        6128usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1532)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1533 as *const _ as usize },
        6132usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1533)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1534 as *const _ as usize },
        6136usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1534)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1535 as *const _ as usize },
        6140usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1535)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1536 as *const _ as usize },
        6144usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1536)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1537 as *const _ as usize },
        6148usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1537)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1538 as *const _ as usize },
        6152usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1538)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1539 as *const _ as usize },
        6156usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1539)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1540 as *const _ as usize },
        6160usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1540)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1541 as *const _ as usize },
        6164usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1541)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1542 as *const _ as usize },
        6168usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1542)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1543 as *const _ as usize },
        6172usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1543)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1544 as *const _ as usize },
        6176usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1544)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1545 as *const _ as usize },
        6180usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1545)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1546 as *const _ as usize },
        6184usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1546)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1547 as *const _ as usize },
        6188usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1547)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1548 as *const _ as usize },
        6192usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1548)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1549 as *const _ as usize },
        6196usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1549)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1550 as *const _ as usize },
        6200usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1550)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1551 as *const _ as usize },
        6204usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1551)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1552 as *const _ as usize },
        6208usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1552)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1553 as *const _ as usize },
        6212usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1553)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1554 as *const _ as usize },
        6216usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1554)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1555 as *const _ as usize },
        6220usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1555)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1556 as *const _ as usize },
        6224usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1556)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1557 as *const _ as usize },
        6228usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1557)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1558 as *const _ as usize },
        6232usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1558)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1559 as *const _ as usize },
        6236usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1559)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1560 as *const _ as usize },
        6240usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1560)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1561 as *const _ as usize },
        6244usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1561)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1562 as *const _ as usize },
        6248usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1562)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1563 as *const _ as usize },
        6252usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1563)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1564 as *const _ as usize },
        6256usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1564)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1565 as *const _ as usize },
        6260usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1565)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1566 as *const _ as usize },
        6264usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1566)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1567 as *const _ as usize },
        6268usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1567)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1568 as *const _ as usize },
        6272usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1568)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1569 as *const _ as usize },
        6276usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1569)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1570 as *const _ as usize },
        6280usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1570)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1571 as *const _ as usize },
        6284usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1571)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1572 as *const _ as usize },
        6288usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1572)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1573 as *const _ as usize },
        6292usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1573)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1574 as *const _ as usize },
        6296usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1574)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1575 as *const _ as usize },
        6300usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1575)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1576 as *const _ as usize },
        6304usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1576)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1577 as *const _ as usize },
        6308usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1577)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1578 as *const _ as usize },
        6312usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1578)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1579 as *const _ as usize },
        6316usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1579)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1580 as *const _ as usize },
        6320usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1580)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1581 as *const _ as usize },
        6324usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1581)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1582 as *const _ as usize },
        6328usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1582)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1583 as *const _ as usize },
        6332usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1583)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1584 as *const _ as usize },
        6336usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1584)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1585 as *const _ as usize },
        6340usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1585)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1586 as *const _ as usize },
        6344usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1586)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1587 as *const _ as usize },
        6348usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1587)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1588 as *const _ as usize },
        6352usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1588)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1589 as *const _ as usize },
        6356usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1589)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1590 as *const _ as usize },
        6360usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1590)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1591 as *const _ as usize },
        6364usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1591)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1592 as *const _ as usize },
        6368usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1592)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1593 as *const _ as usize },
        6372usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1593)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1594 as *const _ as usize },
        6376usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1594)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1595 as *const _ as usize },
        6380usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1595)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1596 as *const _ as usize },
        6384usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1596)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1597 as *const _ as usize },
        6388usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1597)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1598 as *const _ as usize },
        6392usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1598)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1599 as *const _ as usize },
        6396usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1599)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1600 as *const _ as usize },
        6400usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1600)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1601 as *const _ as usize },
        6404usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1601)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1602 as *const _ as usize },
        6408usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1602)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1603 as *const _ as usize },
        6412usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1603)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1604 as *const _ as usize },
        6416usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1604)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1605 as *const _ as usize },
        6420usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1605)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1606 as *const _ as usize },
        6424usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1606)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1607 as *const _ as usize },
        6428usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1607)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1608 as *const _ as usize },
        6432usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1608)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1609 as *const _ as usize },
        6436usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1609)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1610 as *const _ as usize },
        6440usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1610)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1611 as *const _ as usize },
        6444usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1611)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1612 as *const _ as usize },
        6448usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1612)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1613 as *const _ as usize },
        6452usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1613)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1614 as *const _ as usize },
        6456usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1614)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1615 as *const _ as usize },
        6460usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1615)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1616 as *const _ as usize },
        6464usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1616)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1617 as *const _ as usize },
        6468usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1617)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1618 as *const _ as usize },
        6472usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1618)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1619 as *const _ as usize },
        6476usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1619)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1620 as *const _ as usize },
        6480usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1620)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1621 as *const _ as usize },
        6484usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1621)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1622 as *const _ as usize },
        6488usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1622)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1623 as *const _ as usize },
        6492usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1623)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1624 as *const _ as usize },
        6496usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1624)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1625 as *const _ as usize },
        6500usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1625)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1626 as *const _ as usize },
        6504usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1626)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1627 as *const _ as usize },
        6508usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1627)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1628 as *const _ as usize },
        6512usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1628)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1629 as *const _ as usize },
        6516usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1629)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1630 as *const _ as usize },
        6520usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1630)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1631 as *const _ as usize },
        6524usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1631)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1632 as *const _ as usize },
        6528usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1632)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1633 as *const _ as usize },
        6532usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1633)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1634 as *const _ as usize },
        6536usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1634)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1635 as *const _ as usize },
        6540usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1635)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1636 as *const _ as usize },
        6544usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1636)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1637 as *const _ as usize },
        6548usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1637)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1638 as *const _ as usize },
        6552usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1638)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1639 as *const _ as usize },
        6556usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1639)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1640 as *const _ as usize },
        6560usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1640)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1641 as *const _ as usize },
        6564usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1641)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1642 as *const _ as usize },
        6568usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1642)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1643 as *const _ as usize },
        6572usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1643)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1644 as *const _ as usize },
        6576usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1644)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1645 as *const _ as usize },
        6580usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1645)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1646 as *const _ as usize },
        6584usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1646)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1647 as *const _ as usize },
        6588usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1647)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1648 as *const _ as usize },
        6592usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1648)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1649 as *const _ as usize },
        6596usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1649)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1650 as *const _ as usize },
        6600usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1650)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1651 as *const _ as usize },
        6604usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1651)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1652 as *const _ as usize },
        6608usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1652)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1653 as *const _ as usize },
        6612usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1653)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1654 as *const _ as usize },
        6616usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1654)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1655 as *const _ as usize },
        6620usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1655)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1656 as *const _ as usize },
        6624usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1656)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1657 as *const _ as usize },
        6628usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1657)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1658 as *const _ as usize },
        6632usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1658)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1659 as *const _ as usize },
        6636usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1659)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1660 as *const _ as usize },
        6640usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1660)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1661 as *const _ as usize },
        6644usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1661)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1662 as *const _ as usize },
        6648usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1662)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1663 as *const _ as usize },
        6652usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1663)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1664 as *const _ as usize },
        6656usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1664)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1665 as *const _ as usize },
        6660usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1665)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1666 as *const _ as usize },
        6664usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1666)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1667 as *const _ as usize },
        6668usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1667)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1668 as *const _ as usize },
        6672usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1668)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1669 as *const _ as usize },
        6676usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1669)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1670 as *const _ as usize },
        6680usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1670)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1671 as *const _ as usize },
        6684usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1671)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1672 as *const _ as usize },
        6688usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1672)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1673 as *const _ as usize },
        6692usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1673)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1674 as *const _ as usize },
        6696usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1674)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1675 as *const _ as usize },
        6700usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1675)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1676 as *const _ as usize },
        6704usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1676)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1677 as *const _ as usize },
        6708usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1677)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1678 as *const _ as usize },
        6712usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1678)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1679 as *const _ as usize },
        6716usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1679)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1680 as *const _ as usize },
        6720usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1680)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1681 as *const _ as usize },
        6724usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1681)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1682 as *const _ as usize },
        6728usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1682)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1683 as *const _ as usize },
        6732usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1683)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1684 as *const _ as usize },
        6736usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1684)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1685 as *const _ as usize },
        6740usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1685)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1686 as *const _ as usize },
        6744usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1686)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1687 as *const _ as usize },
        6748usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1687)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1688 as *const _ as usize },
        6752usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1688)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1689 as *const _ as usize },
        6756usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1689)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1690 as *const _ as usize },
        6760usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1690)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1691 as *const _ as usize },
        6764usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1691)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1692 as *const _ as usize },
        6768usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1692)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1693 as *const _ as usize },
        6772usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1693)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1694 as *const _ as usize },
        6776usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1694)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1695 as *const _ as usize },
        6780usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1695)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1696 as *const _ as usize },
        6784usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1696)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1697 as *const _ as usize },
        6788usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1697)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1698 as *const _ as usize },
        6792usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1698)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1699 as *const _ as usize },
        6796usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1699)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1700 as *const _ as usize },
        6800usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1700)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1701 as *const _ as usize },
        6804usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1701)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1702 as *const _ as usize },
        6808usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1702)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1703 as *const _ as usize },
        6812usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1703)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1704 as *const _ as usize },
        6816usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1704)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1705 as *const _ as usize },
        6820usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1705)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1706 as *const _ as usize },
        6824usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1706)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1707 as *const _ as usize },
        6828usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1707)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1708 as *const _ as usize },
        6832usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1708)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1709 as *const _ as usize },
        6836usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1709)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1710 as *const _ as usize },
        6840usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1710)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1711 as *const _ as usize },
        6844usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1711)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1712 as *const _ as usize },
        6848usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1712)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1713 as *const _ as usize },
        6852usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1713)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1714 as *const _ as usize },
        6856usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1714)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1715 as *const _ as usize },
        6860usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1715)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1716 as *const _ as usize },
        6864usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1716)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1717 as *const _ as usize },
        6868usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1717)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1718 as *const _ as usize },
        6872usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1718)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1719 as *const _ as usize },
        6876usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1719)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1720 as *const _ as usize },
        6880usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1720)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1721 as *const _ as usize },
        6884usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1721)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1722 as *const _ as usize },
        6888usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1722)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1723 as *const _ as usize },
        6892usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1723)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1724 as *const _ as usize },
        6896usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1724)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1725 as *const _ as usize },
        6900usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1725)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1726 as *const _ as usize },
        6904usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1726)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1727 as *const _ as usize },
        6908usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1727)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1728 as *const _ as usize },
        6912usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1728)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1729 as *const _ as usize },
        6916usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1729)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1730 as *const _ as usize },
        6920usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1730)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1731 as *const _ as usize },
        6924usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1731)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1732 as *const _ as usize },
        6928usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1732)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1733 as *const _ as usize },
        6932usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1733)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1734 as *const _ as usize },
        6936usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1734)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1735 as *const _ as usize },
        6940usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1735)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1736 as *const _ as usize },
        6944usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1736)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1737 as *const _ as usize },
        6948usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1737)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1738 as *const _ as usize },
        6952usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1738)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1739 as *const _ as usize },
        6956usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1739)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1740 as *const _ as usize },
        6960usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1740)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1741 as *const _ as usize },
        6964usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1741)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1742 as *const _ as usize },
        6968usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1742)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1743 as *const _ as usize },
        6972usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1743)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1744 as *const _ as usize },
        6976usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1744)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1745 as *const _ as usize },
        6980usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1745)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1746 as *const _ as usize },
        6984usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1746)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1747 as *const _ as usize },
        6988usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1747)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1748 as *const _ as usize },
        6992usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1748)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1749 as *const _ as usize },
        6996usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1749)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1750 as *const _ as usize },
        7000usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1750)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1751 as *const _ as usize },
        7004usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1751)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1752 as *const _ as usize },
        7008usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1752)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1753 as *const _ as usize },
        7012usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1753)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1754 as *const _ as usize },
        7016usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1754)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1755 as *const _ as usize },
        7020usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1755)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1756 as *const _ as usize },
        7024usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1756)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1757 as *const _ as usize },
        7028usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1757)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1758 as *const _ as usize },
        7032usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1758)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1759 as *const _ as usize },
        7036usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1759)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1760 as *const _ as usize },
        7040usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1760)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1761 as *const _ as usize },
        7044usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1761)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1762 as *const _ as usize },
        7048usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1762)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1763 as *const _ as usize },
        7052usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1763)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1764 as *const _ as usize },
        7056usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1764)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1765 as *const _ as usize },
        7060usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1765)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1766 as *const _ as usize },
        7064usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1766)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1767 as *const _ as usize },
        7068usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1767)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1768 as *const _ as usize },
        7072usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1768)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1769 as *const _ as usize },
        7076usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1769)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1770 as *const _ as usize },
        7080usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1770)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1771 as *const _ as usize },
        7084usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1771)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1772 as *const _ as usize },
        7088usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1772)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1773 as *const _ as usize },
        7092usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1773)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1774 as *const _ as usize },
        7096usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1774)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1775 as *const _ as usize },
        7100usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1775)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1776 as *const _ as usize },
        7104usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1776)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1777 as *const _ as usize },
        7108usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1777)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1778 as *const _ as usize },
        7112usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1778)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1779 as *const _ as usize },
        7116usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1779)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1780 as *const _ as usize },
        7120usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1780)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1781 as *const _ as usize },
        7124usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1781)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1782 as *const _ as usize },
        7128usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1782)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1783 as *const _ as usize },
        7132usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1783)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1784 as *const _ as usize },
        7136usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1784)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1785 as *const _ as usize },
        7140usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1785)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1786 as *const _ as usize },
        7144usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1786)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1787 as *const _ as usize },
        7148usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1787)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1788 as *const _ as usize },
        7152usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1788)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1789 as *const _ as usize },
        7156usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1789)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1790 as *const _ as usize },
        7160usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1790)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1791 as *const _ as usize },
        7164usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1791)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1792 as *const _ as usize },
        7168usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1792)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1793 as *const _ as usize },
        7172usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1793)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1794 as *const _ as usize },
        7176usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1794)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1795 as *const _ as usize },
        7180usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1795)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1796 as *const _ as usize },
        7184usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1796)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1797 as *const _ as usize },
        7188usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1797)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1798 as *const _ as usize },
        7192usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1798)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1799 as *const _ as usize },
        7196usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1799)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1800 as *const _ as usize },
        7200usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1800)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1801 as *const _ as usize },
        7204usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1801)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1802 as *const _ as usize },
        7208usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1802)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1803 as *const _ as usize },
        7212usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1803)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1804 as *const _ as usize },
        7216usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1804)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1805 as *const _ as usize },
        7220usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1805)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1806 as *const _ as usize },
        7224usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1806)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1807 as *const _ as usize },
        7228usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1807)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1808 as *const _ as usize },
        7232usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1808)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1809 as *const _ as usize },
        7236usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1809)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1810 as *const _ as usize },
        7240usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1810)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1811 as *const _ as usize },
        7244usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1811)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1812 as *const _ as usize },
        7248usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1812)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1813 as *const _ as usize },
        7252usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1813)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1814 as *const _ as usize },
        7256usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1814)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1815 as *const _ as usize },
        7260usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1815)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1816 as *const _ as usize },
        7264usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1816)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1817 as *const _ as usize },
        7268usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1817)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1818 as *const _ as usize },
        7272usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1818)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1819 as *const _ as usize },
        7276usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1819)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1820 as *const _ as usize },
        7280usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1820)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1821 as *const _ as usize },
        7284usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1821)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1822 as *const _ as usize },
        7288usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1822)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1823 as *const _ as usize },
        7292usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1823)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1824 as *const _ as usize },
        7296usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1824)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1825 as *const _ as usize },
        7300usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1825)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1826 as *const _ as usize },
        7304usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1826)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1827 as *const _ as usize },
        7308usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1827)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1828 as *const _ as usize },
        7312usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1828)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1829 as *const _ as usize },
        7316usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1829)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1830 as *const _ as usize },
        7320usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1830)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1831 as *const _ as usize },
        7324usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1831)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1832 as *const _ as usize },
        7328usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1832)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1833 as *const _ as usize },
        7332usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1833)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1834 as *const _ as usize },
        7336usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1834)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1835 as *const _ as usize },
        7340usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1835)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1836 as *const _ as usize },
        7344usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1836)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1837 as *const _ as usize },
        7348usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1837)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1838 as *const _ as usize },
        7352usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1838)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1839 as *const _ as usize },
        7356usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1839)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1840 as *const _ as usize },
        7360usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1840)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1841 as *const _ as usize },
        7364usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1841)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1842 as *const _ as usize },
        7368usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1842)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1843 as *const _ as usize },
        7372usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1843)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1844 as *const _ as usize },
        7376usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1844)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1845 as *const _ as usize },
        7380usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1845)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1846 as *const _ as usize },
        7384usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1846)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1847 as *const _ as usize },
        7388usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1847)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1848 as *const _ as usize },
        7392usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1848)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1849 as *const _ as usize },
        7396usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1849)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1850 as *const _ as usize },
        7400usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1850)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1851 as *const _ as usize },
        7404usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1851)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1852 as *const _ as usize },
        7408usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1852)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1853 as *const _ as usize },
        7412usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1853)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1854 as *const _ as usize },
        7416usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1854)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1855 as *const _ as usize },
        7420usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1855)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1856 as *const _ as usize },
        7424usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1856)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1857 as *const _ as usize },
        7428usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1857)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1858 as *const _ as usize },
        7432usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1858)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1859 as *const _ as usize },
        7436usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1859)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1860 as *const _ as usize },
        7440usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1860)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1861 as *const _ as usize },
        7444usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1861)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1862 as *const _ as usize },
        7448usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1862)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1863 as *const _ as usize },
        7452usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1863)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1864 as *const _ as usize },
        7456usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1864)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1865 as *const _ as usize },
        7460usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1865)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1866 as *const _ as usize },
        7464usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1866)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1867 as *const _ as usize },
        7468usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1867)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1868 as *const _ as usize },
        7472usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1868)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1869 as *const _ as usize },
        7476usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1869)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1870 as *const _ as usize },
        7480usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1870)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1871 as *const _ as usize },
        7484usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1871)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1872 as *const _ as usize },
        7488usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1872)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1873 as *const _ as usize },
        7492usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1873)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1874 as *const _ as usize },
        7496usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1874)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1875 as *const _ as usize },
        7500usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1875)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1876 as *const _ as usize },
        7504usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1876)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1877 as *const _ as usize },
        7508usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1877)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1878 as *const _ as usize },
        7512usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1878)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1879 as *const _ as usize },
        7516usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1879)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1880 as *const _ as usize },
        7520usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1880)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1881 as *const _ as usize },
        7524usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1881)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1882 as *const _ as usize },
        7528usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1882)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1883 as *const _ as usize },
        7532usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1883)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1884 as *const _ as usize },
        7536usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1884)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1885 as *const _ as usize },
        7540usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1885)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1886 as *const _ as usize },
        7544usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1886)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1887 as *const _ as usize },
        7548usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1887)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1888 as *const _ as usize },
        7552usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1888)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1889 as *const _ as usize },
        7556usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1889)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1890 as *const _ as usize },
        7560usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1890)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1891 as *const _ as usize },
        7564usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1891)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1892 as *const _ as usize },
        7568usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1892)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1893 as *const _ as usize },
        7572usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1893)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1894 as *const _ as usize },
        7576usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1894)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1895 as *const _ as usize },
        7580usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1895)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1896 as *const _ as usize },
        7584usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1896)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1897 as *const _ as usize },
        7588usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1897)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1898 as *const _ as usize },
        7592usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1898)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1899 as *const _ as usize },
        7596usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1899)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1900 as *const _ as usize },
        7600usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1900)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1901 as *const _ as usize },
        7604usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1901)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1902 as *const _ as usize },
        7608usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1902)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1903 as *const _ as usize },
        7612usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1903)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1904 as *const _ as usize },
        7616usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1904)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1905 as *const _ as usize },
        7620usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1905)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1906 as *const _ as usize },
        7624usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1906)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1907 as *const _ as usize },
        7628usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1907)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1908 as *const _ as usize },
        7632usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1908)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1909 as *const _ as usize },
        7636usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1909)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1910 as *const _ as usize },
        7640usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1910)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1911 as *const _ as usize },
        7644usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1911)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1912 as *const _ as usize },
        7648usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1912)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1913 as *const _ as usize },
        7652usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1913)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1914 as *const _ as usize },
        7656usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1914)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1915 as *const _ as usize },
        7660usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1915)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1916 as *const _ as usize },
        7664usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1916)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1917 as *const _ as usize },
        7668usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1917)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1918 as *const _ as usize },
        7672usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1918)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1919 as *const _ as usize },
        7676usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1919)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1920 as *const _ as usize },
        7680usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1920)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1921 as *const _ as usize },
        7684usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1921)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1922 as *const _ as usize },
        7688usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1922)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1923 as *const _ as usize },
        7692usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1923)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1924 as *const _ as usize },
        7696usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1924)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1925 as *const _ as usize },
        7700usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1925)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1926 as *const _ as usize },
        7704usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1926)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1927 as *const _ as usize },
        7708usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1927)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1928 as *const _ as usize },
        7712usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1928)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1929 as *const _ as usize },
        7716usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1929)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1930 as *const _ as usize },
        7720usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1930)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1931 as *const _ as usize },
        7724usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1931)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1932 as *const _ as usize },
        7728usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1932)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1933 as *const _ as usize },
        7732usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1933)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1934 as *const _ as usize },
        7736usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1934)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1935 as *const _ as usize },
        7740usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1935)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1936 as *const _ as usize },
        7744usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1936)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1937 as *const _ as usize },
        7748usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1937)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1938 as *const _ as usize },
        7752usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1938)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1939 as *const _ as usize },
        7756usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1939)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1940 as *const _ as usize },
        7760usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1940)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1941 as *const _ as usize },
        7764usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1941)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1942 as *const _ as usize },
        7768usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1942)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1943 as *const _ as usize },
        7772usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1943)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1944 as *const _ as usize },
        7776usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1944)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1945 as *const _ as usize },
        7780usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1945)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1946 as *const _ as usize },
        7784usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1946)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1947 as *const _ as usize },
        7788usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1947)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1948 as *const _ as usize },
        7792usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1948)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1949 as *const _ as usize },
        7796usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1949)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1950 as *const _ as usize },
        7800usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1950)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1951 as *const _ as usize },
        7804usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1951)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1952 as *const _ as usize },
        7808usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1952)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1953 as *const _ as usize },
        7812usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1953)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1954 as *const _ as usize },
        7816usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1954)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1955 as *const _ as usize },
        7820usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1955)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1956 as *const _ as usize },
        7824usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1956)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1957 as *const _ as usize },
        7828usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1957)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1958 as *const _ as usize },
        7832usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1958)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1959 as *const _ as usize },
        7836usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1959)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1960 as *const _ as usize },
        7840usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1960)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1961 as *const _ as usize },
        7844usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1961)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1962 as *const _ as usize },
        7848usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1962)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1963 as *const _ as usize },
        7852usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1963)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1964 as *const _ as usize },
        7856usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1964)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1965 as *const _ as usize },
        7860usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1965)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1966 as *const _ as usize },
        7864usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1966)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1967 as *const _ as usize },
        7868usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1967)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1968 as *const _ as usize },
        7872usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1968)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1969 as *const _ as usize },
        7876usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1969)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1970 as *const _ as usize },
        7880usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1970)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1971 as *const _ as usize },
        7884usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1971)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1972 as *const _ as usize },
        7888usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1972)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1973 as *const _ as usize },
        7892usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1973)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1974 as *const _ as usize },
        7896usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1974)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1975 as *const _ as usize },
        7900usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1975)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1976 as *const _ as usize },
        7904usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1976)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1977 as *const _ as usize },
        7908usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1977)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1978 as *const _ as usize },
        7912usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1978)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1979 as *const _ as usize },
        7916usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1979)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1980 as *const _ as usize },
        7920usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1980)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1981 as *const _ as usize },
        7924usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1981)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1982 as *const _ as usize },
        7928usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1982)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1983 as *const _ as usize },
        7932usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1983)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1984 as *const _ as usize },
        7936usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1984)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1985 as *const _ as usize },
        7940usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1985)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1986 as *const _ as usize },
        7944usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1986)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1987 as *const _ as usize },
        7948usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1987)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1988 as *const _ as usize },
        7952usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1988)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1989 as *const _ as usize },
        7956usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1989)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1990 as *const _ as usize },
        7960usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1990)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1991 as *const _ as usize },
        7964usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1991)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1992 as *const _ as usize },
        7968usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1992)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).TM_OSDEnabled as *const _ as usize },
        7972usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(TM_OSDEnabled)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).TM_OSDMax as *const _ as usize },
        7976usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(TM_OSDMax)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).TM_EventPage as *const _ as usize },
        7977usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(TM_EventPage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).TM_OSDRecommended as *const _ as usize },
        7978usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(TM_OSDRecommended)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1995 as *const _ as usize },
        7980usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1995)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1996 as *const _ as usize },
        7984usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1996)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1997 as *const _ as usize },
        7988usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1997)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1998 as *const _ as usize },
        7992usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1998)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk1999 as *const _ as usize },
        7996usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk1999)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2000 as *const _ as usize },
        8000usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2000)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2001 as *const _ as usize },
        8004usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2001)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2002 as *const _ as usize },
        8008usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2002)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2003 as *const _ as usize },
        8012usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2003)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2004 as *const _ as usize },
        8016usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2004)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2005 as *const _ as usize },
        8020usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2005)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2006 as *const _ as usize },
        8024usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2006)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2007 as *const _ as usize },
        8028usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2007)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2008 as *const _ as usize },
        8032usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2008)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2009 as *const _ as usize },
        8036usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2009)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2010 as *const _ as usize },
        8040usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2010)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2011 as *const _ as usize },
        8044usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2011)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2012 as *const _ as usize },
        8048usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2012)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2013 as *const _ as usize },
        8052usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2013)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2014 as *const _ as usize },
        8056usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2014)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2015 as *const _ as usize },
        8060usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2015)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2016 as *const _ as usize },
        8064usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2016)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2017 as *const _ as usize },
        8068usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2017)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2018 as *const _ as usize },
        8072usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2018)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2019 as *const _ as usize },
        8076usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2019)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2020 as *const _ as usize },
        8080usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2020)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2021 as *const _ as usize },
        8084usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2021)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2022 as *const _ as usize },
        8088usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2022)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2023 as *const _ as usize },
        8092usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2023)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2024 as *const _ as usize },
        8096usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2024)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2025 as *const _ as usize },
        8100usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2025)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2026 as *const _ as usize },
        8104usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2026)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2027 as *const _ as usize },
        8108usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2027)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2028 as *const _ as usize },
        8112usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2028)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2029 as *const _ as usize },
        8116usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2029)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2030 as *const _ as usize },
        8120usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2030)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2031 as *const _ as usize },
        8124usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2031)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2032 as *const _ as usize },
        8128usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2032)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2033 as *const _ as usize },
        8132usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2033)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2034 as *const _ as usize },
        8136usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2034)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2035 as *const _ as usize },
        8140usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2035)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2036 as *const _ as usize },
        8144usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2036)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2037 as *const _ as usize },
        8148usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2037)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2038 as *const _ as usize },
        8152usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2038)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2039 as *const _ as usize },
        8156usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2039)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2040 as *const _ as usize },
        8160usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2040)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2041 as *const _ as usize },
        8164usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2041)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2042 as *const _ as usize },
        8168usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2042)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2043 as *const _ as usize },
        8172usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2043)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2044 as *const _ as usize },
        8176usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2044)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2045 as *const _ as usize },
        8180usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2045)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2046 as *const _ as usize },
        8184usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2046)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Memcard>())).unk2047 as *const _ as usize },
        8188usize,
        concat!(
            "Offset of field: ",
            stringify!(Memcard),
            "::",
            stringify!(unk2047)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct SnapshotInfo {
    pub snap_id: ::std::os::raw::c_int,
    pub is_exist: u16_,
    pub block_size: u16_,
}
#[test]
fn bindgen_test_layout_SnapshotInfo() {
    assert_eq!(
        ::std::mem::size_of::<SnapshotInfo>(),
        8usize,
        concat!("Size of: ", stringify!(SnapshotInfo))
    );
    assert_eq!(
        ::std::mem::align_of::<SnapshotInfo>(),
        4usize,
        concat!("Alignment of ", stringify!(SnapshotInfo))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SnapshotInfo>())).snap_id as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(SnapshotInfo),
            "::",
            stringify!(snap_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SnapshotInfo>())).is_exist as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(SnapshotInfo),
            "::",
            stringify!(is_exist)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SnapshotInfo>())).block_size as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(SnapshotInfo),
            "::",
            stringify!(block_size)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct SnapshotList {
    pub x0: ::std::os::raw::c_int,
    pub snap_num: ::std::os::raw::c_int,
    pub x8: ::std::os::raw::c_int,
    pub xc: ::std::os::raw::c_int,
    pub snap_info: [SnapshotInfo; 128usize],
}
#[test]
fn bindgen_test_layout_SnapshotList() {
    assert_eq!(
        ::std::mem::size_of::<SnapshotList>(),
        1040usize,
        concat!("Size of: ", stringify!(SnapshotList))
    );
    assert_eq!(
        ::std::mem::align_of::<SnapshotList>(),
        4usize,
        concat!("Alignment of ", stringify!(SnapshotList))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SnapshotList>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(SnapshotList),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SnapshotList>())).snap_num as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(SnapshotList),
            "::",
            stringify!(snap_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SnapshotList>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(SnapshotList),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SnapshotList>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(SnapshotList),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<SnapshotList>())).snap_info as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(SnapshotList),
            "::",
            stringify!(snap_info)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MemSnapIconData {
    pub banner: *mut _HSD_ImageDesc,
    pub icon: *mut _HSD_ImageDesc,
}
#[test]
fn bindgen_test_layout_MemSnapIconData() {
    assert_eq!(
        ::std::mem::size_of::<MemSnapIconData>(),
        16usize,
        concat!("Size of: ", stringify!(MemSnapIconData))
    );
    assert_eq!(
        ::std::mem::align_of::<MemSnapIconData>(),
        8usize,
        concat!("Alignment of ", stringify!(MemSnapIconData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemSnapIconData>())).banner as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MemSnapIconData),
            "::",
            stringify!(banner)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemSnapIconData>())).icon as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MemSnapIconData),
            "::",
            stringify!(icon)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MemcardSave {
    pub size: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub data: *mut ::std::os::raw::c_void,
    pub xc: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_MemcardSave() {
    assert_eq!(
        ::std::mem::size_of::<MemcardSave>(),
        24usize,
        concat!("Size of: ", stringify!(MemcardSave))
    );
    assert_eq!(
        ::std::mem::align_of::<MemcardSave>(),
        8usize,
        concat!("Alignment of ", stringify!(MemcardSave))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardSave>())).size as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardSave),
            "::",
            stringify!(size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardSave>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardSave),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardSave>())).data as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardSave),
            "::",
            stringify!(data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardSave>())).xc as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardSave),
            "::",
            stringify!(xc)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MemcardWork {
    pub work_area: *mut ::std::os::raw::c_void,
    pub buffer: *mut ::std::os::raw::c_void,
    pub x8: ::std::os::raw::c_int,
    pub xc: ::std::os::raw::c_int,
    pub x10: ::std::os::raw::c_int,
    pub x14: ::std::os::raw::c_int,
    pub icon_data: *mut ::std::os::raw::c_void,
    pub banner_data: *mut ::std::os::raw::c_void,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_int,
    pub x28: ::std::os::raw::c_int,
    pub x2c: ::std::os::raw::c_int,
    pub x30: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub x38: ::std::os::raw::c_int,
    pub x3c: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4c: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8c: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub card_file_x94: CARDFileInfo,
    pub buffer_use: *mut ::std::os::raw::c_void,
    pub xac: ::std::os::raw::c_int,
    pub buffer_size: ::std::os::raw::c_int,
    pub card_file_info: CARDFileInfo,
    pub xc8: ::std::os::raw::c_int,
    pub card_data_start: ::std::os::raw::c_int,
    pub xd0: ::std::os::raw::c_int,
    pub xd4: ::std::os::raw::c_int,
    pub xd8: ::std::os::raw::c_int,
    pub xdc: ::std::os::raw::c_int,
    pub xe0: ::std::os::raw::c_int,
    pub xe4: ::std::os::raw::c_int,
    pub xe8: ::std::os::raw::c_int,
    pub xec: ::std::os::raw::c_int,
    pub xf0: ::std::os::raw::c_int,
    pub xf4: ::std::os::raw::c_int,
    pub xf8: ::std::os::raw::c_int,
    pub xfc: ::std::os::raw::c_int,
    pub x100: ::std::os::raw::c_int,
    pub x104: ::std::os::raw::c_int,
    pub x108: ::std::os::raw::c_int,
    pub x10c: ::std::os::raw::c_int,
    pub x110: ::std::os::raw::c_int,
    pub x114: ::std::os::raw::c_int,
    pub x118: ::std::os::raw::c_int,
    pub x11c: ::std::os::raw::c_int,
    pub x120: ::std::os::raw::c_int,
    pub x124: ::std::os::raw::c_int,
    pub x128: ::std::os::raw::c_int,
    pub x12c: ::std::os::raw::c_int,
    pub x130: ::std::os::raw::c_int,
    pub x134: ::std::os::raw::c_int,
    pub x138: ::std::os::raw::c_int,
    pub x13c: ::std::os::raw::c_int,
    pub x140: ::std::os::raw::c_int,
    pub x144: ::std::os::raw::c_int,
    pub x148: ::std::os::raw::c_int,
    pub x14c: ::std::os::raw::c_int,
    pub x150: ::std::os::raw::c_int,
    pub x154: ::std::os::raw::c_int,
    pub x158: ::std::os::raw::c_int,
    pub x15c: ::std::os::raw::c_int,
    pub x160: ::std::os::raw::c_int,
    pub x164: ::std::os::raw::c_int,
    pub x168: ::std::os::raw::c_int,
    pub x16c: ::std::os::raw::c_int,
    pub x170: ::std::os::raw::c_int,
    pub x174: ::std::os::raw::c_int,
    pub x178: ::std::os::raw::c_int,
    pub x17c: ::std::os::raw::c_int,
    pub x180: ::std::os::raw::c_int,
    pub x184: ::std::os::raw::c_int,
    pub x188: ::std::os::raw::c_int,
    pub x18c: ::std::os::raw::c_int,
    pub x190: ::std::os::raw::c_int,
    pub x194: ::std::os::raw::c_int,
    pub x198: ::std::os::raw::c_int,
    pub x19c: ::std::os::raw::c_int,
    pub x1a0: ::std::os::raw::c_int,
    pub x1a4: ::std::os::raw::c_int,
    pub x1a8: ::std::os::raw::c_int,
    pub x1ac: ::std::os::raw::c_int,
    pub x1b0: ::std::os::raw::c_int,
    pub x1b4: ::std::os::raw::c_int,
    pub x1b8: ::std::os::raw::c_int,
    pub x1bc: ::std::os::raw::c_int,
    pub x1c0: ::std::os::raw::c_int,
    pub x1c4: ::std::os::raw::c_int,
    pub x1c8: ::std::os::raw::c_int,
    pub x1cc: ::std::os::raw::c_int,
    pub x1d0: ::std::os::raw::c_int,
    pub x1d4: ::std::os::raw::c_int,
    pub x1d8: ::std::os::raw::c_int,
    pub x1dc: ::std::os::raw::c_int,
    pub x1e0: ::std::os::raw::c_int,
    pub x1e4: ::std::os::raw::c_int,
    pub x1e8: ::std::os::raw::c_int,
    pub x1ec: ::std::os::raw::c_int,
    pub x1f0: ::std::os::raw::c_int,
    pub x1f4: ::std::os::raw::c_int,
    pub x1f8: ::std::os::raw::c_int,
    pub x1fc: ::std::os::raw::c_int,
    pub x200: ::std::os::raw::c_int,
    pub x204: ::std::os::raw::c_int,
    pub x208: ::std::os::raw::c_int,
    pub x20c: ::std::os::raw::c_int,
    pub x210: ::std::os::raw::c_int,
    pub x214: ::std::os::raw::c_int,
    pub x218: ::std::os::raw::c_int,
    pub x21c: ::std::os::raw::c_int,
    pub x220: ::std::os::raw::c_int,
    pub x224: ::std::os::raw::c_int,
    pub x228: ::std::os::raw::c_int,
    pub x22c: ::std::os::raw::c_int,
    pub x230: ::std::os::raw::c_int,
    pub x234: ::std::os::raw::c_int,
    pub x238: ::std::os::raw::c_int,
    pub x23c: ::std::os::raw::c_int,
    pub x240: ::std::os::raw::c_int,
    pub x244: ::std::os::raw::c_int,
    pub x248: ::std::os::raw::c_int,
    pub x24c: ::std::os::raw::c_int,
    pub x250: ::std::os::raw::c_int,
    pub x254: ::std::os::raw::c_int,
    pub x258: ::std::os::raw::c_int,
    pub x25c: ::std::os::raw::c_int,
    pub x260: ::std::os::raw::c_int,
    pub x264: ::std::os::raw::c_int,
    pub x268: ::std::os::raw::c_int,
    pub x26c: ::std::os::raw::c_int,
    pub x270: ::std::os::raw::c_int,
    pub x274: ::std::os::raw::c_int,
    pub x278: ::std::os::raw::c_int,
    pub x27c: ::std::os::raw::c_int,
    pub x280: ::std::os::raw::c_int,
    pub x284: ::std::os::raw::c_int,
    pub x288: ::std::os::raw::c_int,
    pub x28c: ::std::os::raw::c_int,
    pub x290: ::std::os::raw::c_int,
    pub x294: ::std::os::raw::c_int,
    pub x298: ::std::os::raw::c_int,
    pub x29c: ::std::os::raw::c_int,
    pub x2a0: ::std::os::raw::c_int,
    pub x2a4: ::std::os::raw::c_int,
    pub x2a8: ::std::os::raw::c_int,
    pub x2ac: ::std::os::raw::c_int,
    pub x2b0: ::std::os::raw::c_int,
    pub x2b4: ::std::os::raw::c_int,
    pub x2b8: ::std::os::raw::c_int,
    pub x2bc: ::std::os::raw::c_int,
    pub x2c0: ::std::os::raw::c_int,
    pub x2c4: ::std::os::raw::c_int,
    pub x2c8: ::std::os::raw::c_int,
    pub x2cc: ::std::os::raw::c_int,
    pub x2d0: ::std::os::raw::c_int,
    pub x2d4: ::std::os::raw::c_int,
    pub x2d8: ::std::os::raw::c_int,
    pub x2dc: ::std::os::raw::c_int,
    pub x2e0: ::std::os::raw::c_int,
    pub x2e4: ::std::os::raw::c_int,
    pub x2e8: ::std::os::raw::c_int,
    pub x2ec: ::std::os::raw::c_int,
    pub x2f0: ::std::os::raw::c_int,
    pub x2f4: ::std::os::raw::c_int,
    pub x2f8: ::std::os::raw::c_int,
    pub x2fc: ::std::os::raw::c_int,
    pub x300: ::std::os::raw::c_int,
    pub x304: ::std::os::raw::c_int,
    pub x308: ::std::os::raw::c_int,
    pub x30c: ::std::os::raw::c_int,
    pub x310: ::std::os::raw::c_int,
    pub x314: ::std::os::raw::c_int,
    pub x318: ::std::os::raw::c_int,
    pub x31c: ::std::os::raw::c_int,
    pub x320: ::std::os::raw::c_int,
    pub x324: ::std::os::raw::c_int,
    pub x328: ::std::os::raw::c_int,
    pub x32c: ::std::os::raw::c_int,
    pub x330: ::std::os::raw::c_int,
    pub x334: ::std::os::raw::c_int,
    pub x338: ::std::os::raw::c_int,
    pub x33c: ::std::os::raw::c_int,
    pub x340: ::std::os::raw::c_int,
    pub x344: ::std::os::raw::c_int,
    pub x348: ::std::os::raw::c_int,
    pub x34c: ::std::os::raw::c_int,
    pub x350: ::std::os::raw::c_int,
    pub x354: ::std::os::raw::c_int,
    pub x358: ::std::os::raw::c_int,
    pub x35c: ::std::os::raw::c_int,
    pub x360: ::std::os::raw::c_int,
    pub x364: ::std::os::raw::c_int,
    pub x368: ::std::os::raw::c_int,
    pub x36c: ::std::os::raw::c_int,
    pub x370: ::std::os::raw::c_int,
    pub x374: ::std::os::raw::c_int,
    pub x378: ::std::os::raw::c_int,
    pub x37c: ::std::os::raw::c_int,
    pub x380: ::std::os::raw::c_int,
    pub x384: ::std::os::raw::c_int,
    pub x388: ::std::os::raw::c_int,
    pub x38c: ::std::os::raw::c_int,
    pub x390: ::std::os::raw::c_int,
    pub x394: ::std::os::raw::c_int,
    pub x398: ::std::os::raw::c_int,
    pub x39c: ::std::os::raw::c_int,
    pub x3a0: ::std::os::raw::c_int,
    pub x3a4: ::std::os::raw::c_int,
    pub x3a8: ::std::os::raw::c_int,
    pub x3ac: ::std::os::raw::c_int,
    pub x3b0: ::std::os::raw::c_int,
    pub x3b4: ::std::os::raw::c_int,
    pub x3b8: ::std::os::raw::c_int,
    pub x3bc: ::std::os::raw::c_int,
    pub x3c0: ::std::os::raw::c_int,
    pub x3c4: ::std::os::raw::c_int,
    pub x3c8: ::std::os::raw::c_int,
    pub x3cc: ::std::os::raw::c_int,
    pub x3d0: ::std::os::raw::c_int,
    pub x3d4: ::std::os::raw::c_int,
    pub x3d8: ::std::os::raw::c_int,
    pub x3dc: ::std::os::raw::c_int,
    pub x3e0: ::std::os::raw::c_int,
    pub x3e4: ::std::os::raw::c_int,
    pub x3e8: ::std::os::raw::c_int,
    pub x3ec: ::std::os::raw::c_int,
    pub x3f0: ::std::os::raw::c_int,
    pub x3f4: ::std::os::raw::c_int,
    pub x3f8: ::std::os::raw::c_int,
    pub x3fc: ::std::os::raw::c_int,
    pub x400: ::std::os::raw::c_int,
    pub x404: ::std::os::raw::c_int,
    pub x408: ::std::os::raw::c_int,
    pub x40c: ::std::os::raw::c_int,
    pub x410: ::std::os::raw::c_int,
    pub x414: ::std::os::raw::c_int,
    pub x418: ::std::os::raw::c_int,
    pub x41c: ::std::os::raw::c_int,
    pub x420: ::std::os::raw::c_int,
    pub x424: ::std::os::raw::c_int,
    pub x428: ::std::os::raw::c_int,
    pub x42c: ::std::os::raw::c_int,
    pub x430: ::std::os::raw::c_int,
    pub x434: ::std::os::raw::c_int,
    pub x438: ::std::os::raw::c_int,
    pub x43c: ::std::os::raw::c_int,
    pub x440: ::std::os::raw::c_int,
    pub x444: ::std::os::raw::c_int,
    pub x448: ::std::os::raw::c_int,
    pub x44c: ::std::os::raw::c_int,
    pub x450: ::std::os::raw::c_int,
    pub x454: ::std::os::raw::c_int,
    pub x458: ::std::os::raw::c_int,
    pub x45c: ::std::os::raw::c_int,
    pub x460: ::std::os::raw::c_int,
    pub x464: ::std::os::raw::c_int,
    pub x468: ::std::os::raw::c_int,
    pub x46c: ::std::os::raw::c_int,
    pub x470: ::std::os::raw::c_int,
    pub x474: ::std::os::raw::c_int,
    pub x478: ::std::os::raw::c_int,
    pub x47c: ::std::os::raw::c_int,
    pub x480: ::std::os::raw::c_int,
    pub x484: ::std::os::raw::c_int,
    pub x488: ::std::os::raw::c_int,
    pub x48c: ::std::os::raw::c_int,
    pub x490: ::std::os::raw::c_int,
    pub x494: ::std::os::raw::c_int,
    pub x498: ::std::os::raw::c_int,
    pub x49c: ::std::os::raw::c_int,
    pub x4a0: ::std::os::raw::c_int,
    pub x4a4: ::std::os::raw::c_int,
    pub x4a8: ::std::os::raw::c_int,
    pub x4ac: ::std::os::raw::c_int,
    pub x4b0: ::std::os::raw::c_int,
    pub x4b4: ::std::os::raw::c_int,
    pub x4b8: ::std::os::raw::c_int,
    pub x4bc: ::std::os::raw::c_int,
    pub x4c0: ::std::os::raw::c_int,
    pub x4c4: ::std::os::raw::c_int,
    pub x4c8: ::std::os::raw::c_int,
    pub x4cc: ::std::os::raw::c_int,
    pub x4d0: ::std::os::raw::c_int,
    pub x4d4: ::std::os::raw::c_int,
    pub x4d8: ::std::os::raw::c_int,
    pub x4dc: ::std::os::raw::c_int,
    pub x4e0: ::std::os::raw::c_int,
    pub x4e4: ::std::os::raw::c_int,
    pub x4e8: ::std::os::raw::c_int,
    pub x4ec: ::std::os::raw::c_int,
    pub x4f0: ::std::os::raw::c_int,
    pub x4f4: ::std::os::raw::c_int,
    pub x4f8: ::std::os::raw::c_int,
    pub x4fc: ::std::os::raw::c_int,
    pub x500: ::std::os::raw::c_int,
    pub x504: ::std::os::raw::c_int,
    pub x508: ::std::os::raw::c_int,
    pub x50c: ::std::os::raw::c_int,
    pub x510: ::std::os::raw::c_int,
    pub x514: ::std::os::raw::c_int,
    pub x518: ::std::os::raw::c_int,
    pub x51c: ::std::os::raw::c_int,
    pub x520: ::std::os::raw::c_int,
    pub x524: ::std::os::raw::c_int,
    pub x528: ::std::os::raw::c_int,
    pub x52c: ::std::os::raw::c_int,
    pub x530: ::std::os::raw::c_int,
    pub x534: ::std::os::raw::c_int,
    pub x538: ::std::os::raw::c_int,
    pub x53c: ::std::os::raw::c_int,
    pub x540: ::std::os::raw::c_int,
    pub x544: ::std::os::raw::c_int,
    pub x548: ::std::os::raw::c_int,
    pub x54c: ::std::os::raw::c_int,
    pub x550: ::std::os::raw::c_int,
    pub x554: ::std::os::raw::c_int,
    pub x558: ::std::os::raw::c_int,
    pub x55c: ::std::os::raw::c_int,
    pub x560: ::std::os::raw::c_int,
    pub x564: ::std::os::raw::c_int,
    pub x568: ::std::os::raw::c_int,
    pub x56c: ::std::os::raw::c_int,
    pub x570: ::std::os::raw::c_int,
    pub x574: ::std::os::raw::c_int,
    pub x578: ::std::os::raw::c_int,
    pub x57c: ::std::os::raw::c_int,
    pub x580: ::std::os::raw::c_int,
    pub x584: ::std::os::raw::c_int,
    pub x588: ::std::os::raw::c_int,
    pub x58c: ::std::os::raw::c_int,
    pub x590: ::std::os::raw::c_int,
    pub x594: ::std::os::raw::c_int,
    pub x598: ::std::os::raw::c_int,
    pub x59c: ::std::os::raw::c_int,
    pub x5a0: ::std::os::raw::c_int,
    pub x5a4: ::std::os::raw::c_int,
    pub x5a8: ::std::os::raw::c_int,
    pub x5ac: ::std::os::raw::c_int,
    pub x5b0: ::std::os::raw::c_int,
    pub x5b4: ::std::os::raw::c_int,
    pub x5b8: ::std::os::raw::c_int,
    pub x5bc: ::std::os::raw::c_int,
    pub x5c0: ::std::os::raw::c_int,
    pub x5c4: ::std::os::raw::c_int,
    pub x5c8: ::std::os::raw::c_int,
    pub x5cc: ::std::os::raw::c_int,
    pub x5d0: ::std::os::raw::c_int,
    pub x5d4: ::std::os::raw::c_int,
    pub x5d8: ::std::os::raw::c_int,
    pub x5dc: ::std::os::raw::c_int,
    pub x5e0: ::std::os::raw::c_int,
    pub x5e4: ::std::os::raw::c_int,
    pub x5e8: ::std::os::raw::c_int,
    pub x5ec: ::std::os::raw::c_int,
    pub x5f0: ::std::os::raw::c_int,
    pub x5f4: ::std::os::raw::c_int,
    pub x5f8: ::std::os::raw::c_int,
    pub x5fc: ::std::os::raw::c_int,
    pub x600: ::std::os::raw::c_int,
    pub x604: ::std::os::raw::c_int,
    pub x608: ::std::os::raw::c_int,
    pub x60c: ::std::os::raw::c_int,
    pub x610: ::std::os::raw::c_int,
    pub x614: ::std::os::raw::c_int,
    pub x618: ::std::os::raw::c_int,
    pub x61c: ::std::os::raw::c_int,
    pub x620: ::std::os::raw::c_int,
    pub x624: ::std::os::raw::c_int,
    pub x628: ::std::os::raw::c_int,
    pub x62c: ::std::os::raw::c_int,
    pub x630: ::std::os::raw::c_int,
    pub x634: ::std::os::raw::c_int,
    pub x638: ::std::os::raw::c_int,
    pub x63c: ::std::os::raw::c_int,
    pub x640: ::std::os::raw::c_int,
    pub x644: ::std::os::raw::c_int,
    pub x648: ::std::os::raw::c_int,
    pub x64c: ::std::os::raw::c_int,
    pub x650: ::std::os::raw::c_int,
    pub x654: ::std::os::raw::c_int,
    pub x658: ::std::os::raw::c_int,
    pub x65c: ::std::os::raw::c_int,
    pub x660: ::std::os::raw::c_int,
    pub x664: ::std::os::raw::c_int,
    pub x668: ::std::os::raw::c_int,
    pub x66c: ::std::os::raw::c_int,
    pub x670: ::std::os::raw::c_int,
    pub x674: ::std::os::raw::c_int,
    pub x678: ::std::os::raw::c_int,
    pub x67c: ::std::os::raw::c_int,
    pub x680: ::std::os::raw::c_int,
    pub x684: ::std::os::raw::c_int,
    pub x688: ::std::os::raw::c_int,
    pub x68c: ::std::os::raw::c_int,
    pub x690: ::std::os::raw::c_int,
    pub x694: ::std::os::raw::c_int,
    pub x698: ::std::os::raw::c_int,
    pub x69c: ::std::os::raw::c_int,
    pub x6a0: ::std::os::raw::c_int,
    pub x6a4: ::std::os::raw::c_int,
    pub x6a8: ::std::os::raw::c_int,
    pub x6ac: ::std::os::raw::c_int,
    pub x6b0: ::std::os::raw::c_int,
    pub x6b4: ::std::os::raw::c_int,
    pub x6b8: ::std::os::raw::c_int,
    pub x6bc: ::std::os::raw::c_int,
    pub x6c0: ::std::os::raw::c_int,
    pub x6c4: ::std::os::raw::c_int,
    pub x6c8: ::std::os::raw::c_int,
    pub x6cc: ::std::os::raw::c_int,
    pub x6d0: ::std::os::raw::c_int,
    pub x6d4: ::std::os::raw::c_int,
    pub x6d8: ::std::os::raw::c_int,
    pub x6dc: ::std::os::raw::c_int,
    pub x6e0: ::std::os::raw::c_int,
    pub x6e4: ::std::os::raw::c_int,
    pub x6e8: ::std::os::raw::c_int,
    pub x6ec: ::std::os::raw::c_int,
    pub x6f0: ::std::os::raw::c_int,
    pub x6f4: ::std::os::raw::c_int,
    pub x6f8: ::std::os::raw::c_int,
    pub x6fc: ::std::os::raw::c_int,
    pub x700: ::std::os::raw::c_int,
    pub x704: ::std::os::raw::c_int,
    pub x708: ::std::os::raw::c_int,
    pub x70c: ::std::os::raw::c_int,
    pub x710: ::std::os::raw::c_int,
    pub x714: ::std::os::raw::c_int,
    pub x718: ::std::os::raw::c_int,
    pub x71c: ::std::os::raw::c_int,
    pub x720: ::std::os::raw::c_int,
    pub x724: ::std::os::raw::c_int,
    pub x728: ::std::os::raw::c_int,
    pub x72c: ::std::os::raw::c_int,
    pub x730: ::std::os::raw::c_int,
    pub x734: ::std::os::raw::c_int,
    pub x738: ::std::os::raw::c_int,
    pub x73c: ::std::os::raw::c_int,
    pub x740: ::std::os::raw::c_int,
    pub x744: ::std::os::raw::c_int,
    pub x748: ::std::os::raw::c_int,
    pub x74c: ::std::os::raw::c_int,
    pub x750: ::std::os::raw::c_int,
    pub x754: ::std::os::raw::c_int,
    pub x758: ::std::os::raw::c_int,
    pub x75c: ::std::os::raw::c_int,
    pub x760: ::std::os::raw::c_int,
    pub x764: ::std::os::raw::c_int,
    pub x768: ::std::os::raw::c_int,
    pub x76c: ::std::os::raw::c_int,
    pub x770: ::std::os::raw::c_int,
    pub x774: ::std::os::raw::c_int,
    pub x778: ::std::os::raw::c_int,
    pub x77c: ::std::os::raw::c_int,
    pub x780: ::std::os::raw::c_int,
    pub x784: ::std::os::raw::c_int,
    pub x788: ::std::os::raw::c_int,
    pub x78c: ::std::os::raw::c_int,
    pub x790: ::std::os::raw::c_int,
    pub x794: ::std::os::raw::c_int,
    pub x798: ::std::os::raw::c_int,
    pub x79c: ::std::os::raw::c_int,
    pub x7a0: ::std::os::raw::c_int,
    pub x7a4: ::std::os::raw::c_int,
    pub x7a8: ::std::os::raw::c_int,
    pub x7ac: ::std::os::raw::c_int,
    pub x7b0: ::std::os::raw::c_int,
    pub x7b4: ::std::os::raw::c_int,
    pub x7b8: ::std::os::raw::c_int,
    pub x7bc: ::std::os::raw::c_int,
    pub x7c0: ::std::os::raw::c_int,
    pub x7c4: ::std::os::raw::c_int,
    pub x7c8: ::std::os::raw::c_int,
    pub x7cc: ::std::os::raw::c_int,
    pub x7d0: ::std::os::raw::c_int,
    pub x7d4: ::std::os::raw::c_int,
    pub x7d8: ::std::os::raw::c_int,
    pub x7dc: ::std::os::raw::c_int,
    pub x7e0: ::std::os::raw::c_int,
    pub x7e4: ::std::os::raw::c_int,
    pub x7e8: ::std::os::raw::c_int,
    pub x7ec: ::std::os::raw::c_int,
    pub x7f0: ::std::os::raw::c_int,
    pub x7f4: ::std::os::raw::c_int,
    pub x7f8: ::std::os::raw::c_int,
    pub x7fc: ::std::os::raw::c_int,
    pub x800: ::std::os::raw::c_int,
    pub x804: ::std::os::raw::c_int,
    pub x808: ::std::os::raw::c_int,
    pub x80c: ::std::os::raw::c_int,
    pub x810: ::std::os::raw::c_int,
    pub x814: ::std::os::raw::c_int,
    pub x818: ::std::os::raw::c_int,
    pub x81c: ::std::os::raw::c_int,
    pub x820: ::std::os::raw::c_int,
    pub x824: ::std::os::raw::c_int,
    pub x828: ::std::os::raw::c_int,
    pub x82c: ::std::os::raw::c_int,
    pub x830: ::std::os::raw::c_int,
    pub x834: ::std::os::raw::c_int,
    pub x838: ::std::os::raw::c_int,
    pub x83c: ::std::os::raw::c_int,
    pub x840: ::std::os::raw::c_int,
    pub x844: ::std::os::raw::c_int,
    pub x848: ::std::os::raw::c_int,
    pub x84c: ::std::os::raw::c_int,
    pub x850: ::std::os::raw::c_int,
    pub x854: ::std::os::raw::c_int,
    pub x858: ::std::os::raw::c_int,
    pub x85c: ::std::os::raw::c_int,
    pub x860: ::std::os::raw::c_int,
    pub x864: ::std::os::raw::c_int,
    pub x868: ::std::os::raw::c_int,
    pub x86c: ::std::os::raw::c_int,
    pub x870: ::std::os::raw::c_int,
    pub x874: ::std::os::raw::c_int,
    pub x878: ::std::os::raw::c_int,
    pub x87c: ::std::os::raw::c_int,
    pub x880: ::std::os::raw::c_int,
    pub x884: ::std::os::raw::c_int,
    pub x888: ::std::os::raw::c_int,
    pub x88c: ::std::os::raw::c_int,
    pub x890: ::std::os::raw::c_int,
    pub x894: ::std::os::raw::c_int,
    pub x898: ::std::os::raw::c_int,
    pub x89c: ::std::os::raw::c_int,
    pub x8a0: ::std::os::raw::c_int,
    pub x8a4: ::std::os::raw::c_int,
    pub x8a8: ::std::os::raw::c_int,
    pub is_done: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_MemcardWork() {
    assert_eq!(
        ::std::mem::size_of::<MemcardWork>(),
        2248usize,
        concat!("Size of: ", stringify!(MemcardWork))
    );
    assert_eq!(
        ::std::mem::align_of::<MemcardWork>(),
        8usize,
        concat!("Alignment of ", stringify!(MemcardWork))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).work_area as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(work_area)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).buffer as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(buffer)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xc as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x10 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x10)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x14 as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x14)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).icon_data as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(icon_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).banner_data as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(banner_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x20 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x24 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x28 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x30 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x34 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x38 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3c as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x40 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x44 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x48 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4c as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x50 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x54 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x58 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5c as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x60 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x64 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x68 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6c as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x70 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x74 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x78 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7c as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x80 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x84 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x88 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x8c as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x90 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).card_file_x94 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(card_file_x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).buffer_use as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(buffer_use)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xac as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).buffer_size as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(buffer_size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).card_file_info as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(card_file_info)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xc8 as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).card_data_start as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(card_data_start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xd0 as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xd4 as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xd8 as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xdc as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xe0 as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xe4 as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xe8 as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xec as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xf0 as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xf4 as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xf8 as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).xfc as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(xfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x100 as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x104 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x108 as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x10c as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x10c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x110 as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x114 as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x118 as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x11c as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x11c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x120 as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x124 as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x128 as *const _ as usize },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x12c as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x12c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x130 as *const _ as usize },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x134 as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x138 as *const _ as usize },
        332usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x13c as *const _ as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x13c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x140 as *const _ as usize },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x144 as *const _ as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x148 as *const _ as usize },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x14c as *const _ as usize },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x14c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x150 as *const _ as usize },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x154 as *const _ as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x158 as *const _ as usize },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x15c as *const _ as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x15c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x160 as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x164 as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x168 as *const _ as usize },
        380usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x16c as *const _ as usize },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x16c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x170 as *const _ as usize },
        388usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x174 as *const _ as usize },
        392usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x178 as *const _ as usize },
        396usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x17c as *const _ as usize },
        400usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x17c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x180 as *const _ as usize },
        404usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x184 as *const _ as usize },
        408usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x188 as *const _ as usize },
        412usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x18c as *const _ as usize },
        416usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x18c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x190 as *const _ as usize },
        420usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x190)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x194 as *const _ as usize },
        424usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x194)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x198 as *const _ as usize },
        428usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x198)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x19c as *const _ as usize },
        432usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x19c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1a0 as *const _ as usize },
        436usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1a4 as *const _ as usize },
        440usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1a8 as *const _ as usize },
        444usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1ac as *const _ as usize },
        448usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1b0 as *const _ as usize },
        452usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1b4 as *const _ as usize },
        456usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1b8 as *const _ as usize },
        460usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1bc as *const _ as usize },
        464usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1c0 as *const _ as usize },
        468usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1c4 as *const _ as usize },
        472usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1c8 as *const _ as usize },
        476usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1cc as *const _ as usize },
        480usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1d0 as *const _ as usize },
        484usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1d4 as *const _ as usize },
        488usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1d8 as *const _ as usize },
        492usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1dc as *const _ as usize },
        496usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1e0 as *const _ as usize },
        500usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1e4 as *const _ as usize },
        504usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1e8 as *const _ as usize },
        508usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1ec as *const _ as usize },
        512usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1f0 as *const _ as usize },
        516usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1f4 as *const _ as usize },
        520usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1f8 as *const _ as usize },
        524usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x1fc as *const _ as usize },
        528usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x1fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x200 as *const _ as usize },
        532usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x200)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x204 as *const _ as usize },
        536usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x204)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x208 as *const _ as usize },
        540usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x208)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x20c as *const _ as usize },
        544usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x20c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x210 as *const _ as usize },
        548usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x210)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x214 as *const _ as usize },
        552usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x214)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x218 as *const _ as usize },
        556usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x218)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x21c as *const _ as usize },
        560usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x21c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x220 as *const _ as usize },
        564usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x220)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x224 as *const _ as usize },
        568usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x224)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x228 as *const _ as usize },
        572usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x228)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x22c as *const _ as usize },
        576usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x22c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x230 as *const _ as usize },
        580usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x230)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x234 as *const _ as usize },
        584usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x234)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x238 as *const _ as usize },
        588usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x238)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x23c as *const _ as usize },
        592usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x23c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x240 as *const _ as usize },
        596usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x240)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x244 as *const _ as usize },
        600usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x244)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x248 as *const _ as usize },
        604usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x248)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x24c as *const _ as usize },
        608usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x24c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x250 as *const _ as usize },
        612usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x250)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x254 as *const _ as usize },
        616usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x254)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x258 as *const _ as usize },
        620usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x258)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x25c as *const _ as usize },
        624usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x25c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x260 as *const _ as usize },
        628usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x260)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x264 as *const _ as usize },
        632usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x264)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x268 as *const _ as usize },
        636usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x268)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x26c as *const _ as usize },
        640usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x26c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x270 as *const _ as usize },
        644usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x270)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x274 as *const _ as usize },
        648usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x274)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x278 as *const _ as usize },
        652usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x278)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x27c as *const _ as usize },
        656usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x27c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x280 as *const _ as usize },
        660usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x280)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x284 as *const _ as usize },
        664usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x284)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x288 as *const _ as usize },
        668usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x288)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x28c as *const _ as usize },
        672usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x28c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x290 as *const _ as usize },
        676usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x290)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x294 as *const _ as usize },
        680usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x294)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x298 as *const _ as usize },
        684usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x298)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x29c as *const _ as usize },
        688usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x29c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2a0 as *const _ as usize },
        692usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2a4 as *const _ as usize },
        696usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2a8 as *const _ as usize },
        700usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2ac as *const _ as usize },
        704usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2b0 as *const _ as usize },
        708usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2b4 as *const _ as usize },
        712usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2b8 as *const _ as usize },
        716usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2bc as *const _ as usize },
        720usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2c0 as *const _ as usize },
        724usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2c4 as *const _ as usize },
        728usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2c8 as *const _ as usize },
        732usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2cc as *const _ as usize },
        736usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2d0 as *const _ as usize },
        740usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2d4 as *const _ as usize },
        744usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2d8 as *const _ as usize },
        748usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2dc as *const _ as usize },
        752usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2e0 as *const _ as usize },
        756usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2e4 as *const _ as usize },
        760usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2e8 as *const _ as usize },
        764usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2ec as *const _ as usize },
        768usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2f0 as *const _ as usize },
        772usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2f4 as *const _ as usize },
        776usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2f8 as *const _ as usize },
        780usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x2fc as *const _ as usize },
        784usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x2fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x300 as *const _ as usize },
        788usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x300)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x304 as *const _ as usize },
        792usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x304)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x308 as *const _ as usize },
        796usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x308)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x30c as *const _ as usize },
        800usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x30c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x310 as *const _ as usize },
        804usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x310)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x314 as *const _ as usize },
        808usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x314)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x318 as *const _ as usize },
        812usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x318)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x31c as *const _ as usize },
        816usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x31c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x320 as *const _ as usize },
        820usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x320)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x324 as *const _ as usize },
        824usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x324)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x328 as *const _ as usize },
        828usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x328)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x32c as *const _ as usize },
        832usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x32c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x330 as *const _ as usize },
        836usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x330)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x334 as *const _ as usize },
        840usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x334)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x338 as *const _ as usize },
        844usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x338)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x33c as *const _ as usize },
        848usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x33c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x340 as *const _ as usize },
        852usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x340)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x344 as *const _ as usize },
        856usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x344)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x348 as *const _ as usize },
        860usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x348)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x34c as *const _ as usize },
        864usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x34c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x350 as *const _ as usize },
        868usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x350)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x354 as *const _ as usize },
        872usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x354)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x358 as *const _ as usize },
        876usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x358)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x35c as *const _ as usize },
        880usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x35c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x360 as *const _ as usize },
        884usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x360)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x364 as *const _ as usize },
        888usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x364)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x368 as *const _ as usize },
        892usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x368)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x36c as *const _ as usize },
        896usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x36c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x370 as *const _ as usize },
        900usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x370)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x374 as *const _ as usize },
        904usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x374)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x378 as *const _ as usize },
        908usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x378)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x37c as *const _ as usize },
        912usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x37c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x380 as *const _ as usize },
        916usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x380)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x384 as *const _ as usize },
        920usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x384)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x388 as *const _ as usize },
        924usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x388)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x38c as *const _ as usize },
        928usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x38c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x390 as *const _ as usize },
        932usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x390)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x394 as *const _ as usize },
        936usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x394)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x398 as *const _ as usize },
        940usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x398)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x39c as *const _ as usize },
        944usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x39c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3a0 as *const _ as usize },
        948usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3a4 as *const _ as usize },
        952usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3a8 as *const _ as usize },
        956usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3ac as *const _ as usize },
        960usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3b0 as *const _ as usize },
        964usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3b4 as *const _ as usize },
        968usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3b8 as *const _ as usize },
        972usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3bc as *const _ as usize },
        976usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3c0 as *const _ as usize },
        980usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3c4 as *const _ as usize },
        984usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3c8 as *const _ as usize },
        988usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3cc as *const _ as usize },
        992usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3d0 as *const _ as usize },
        996usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3d4 as *const _ as usize },
        1000usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3d8 as *const _ as usize },
        1004usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3dc as *const _ as usize },
        1008usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3e0 as *const _ as usize },
        1012usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3e4 as *const _ as usize },
        1016usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3e8 as *const _ as usize },
        1020usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3ec as *const _ as usize },
        1024usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3f0 as *const _ as usize },
        1028usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3f4 as *const _ as usize },
        1032usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3f8 as *const _ as usize },
        1036usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x3fc as *const _ as usize },
        1040usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x3fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x400 as *const _ as usize },
        1044usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x400)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x404 as *const _ as usize },
        1048usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x404)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x408 as *const _ as usize },
        1052usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x408)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x40c as *const _ as usize },
        1056usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x40c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x410 as *const _ as usize },
        1060usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x410)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x414 as *const _ as usize },
        1064usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x414)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x418 as *const _ as usize },
        1068usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x418)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x41c as *const _ as usize },
        1072usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x41c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x420 as *const _ as usize },
        1076usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x420)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x424 as *const _ as usize },
        1080usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x424)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x428 as *const _ as usize },
        1084usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x428)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x42c as *const _ as usize },
        1088usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x42c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x430 as *const _ as usize },
        1092usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x430)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x434 as *const _ as usize },
        1096usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x434)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x438 as *const _ as usize },
        1100usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x438)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x43c as *const _ as usize },
        1104usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x43c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x440 as *const _ as usize },
        1108usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x440)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x444 as *const _ as usize },
        1112usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x444)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x448 as *const _ as usize },
        1116usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x448)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x44c as *const _ as usize },
        1120usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x44c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x450 as *const _ as usize },
        1124usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x450)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x454 as *const _ as usize },
        1128usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x454)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x458 as *const _ as usize },
        1132usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x458)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x45c as *const _ as usize },
        1136usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x45c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x460 as *const _ as usize },
        1140usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x460)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x464 as *const _ as usize },
        1144usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x464)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x468 as *const _ as usize },
        1148usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x468)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x46c as *const _ as usize },
        1152usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x46c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x470 as *const _ as usize },
        1156usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x470)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x474 as *const _ as usize },
        1160usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x474)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x478 as *const _ as usize },
        1164usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x478)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x47c as *const _ as usize },
        1168usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x47c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x480 as *const _ as usize },
        1172usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x480)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x484 as *const _ as usize },
        1176usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x484)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x488 as *const _ as usize },
        1180usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x488)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x48c as *const _ as usize },
        1184usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x48c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x490 as *const _ as usize },
        1188usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x490)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x494 as *const _ as usize },
        1192usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x494)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x498 as *const _ as usize },
        1196usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x498)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x49c as *const _ as usize },
        1200usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x49c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4a0 as *const _ as usize },
        1204usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4a4 as *const _ as usize },
        1208usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4a8 as *const _ as usize },
        1212usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4ac as *const _ as usize },
        1216usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4b0 as *const _ as usize },
        1220usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4b4 as *const _ as usize },
        1224usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4b8 as *const _ as usize },
        1228usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4bc as *const _ as usize },
        1232usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4c0 as *const _ as usize },
        1236usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4c4 as *const _ as usize },
        1240usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4c8 as *const _ as usize },
        1244usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4cc as *const _ as usize },
        1248usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4d0 as *const _ as usize },
        1252usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4d4 as *const _ as usize },
        1256usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4d8 as *const _ as usize },
        1260usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4dc as *const _ as usize },
        1264usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4e0 as *const _ as usize },
        1268usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4e4 as *const _ as usize },
        1272usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4e8 as *const _ as usize },
        1276usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4ec as *const _ as usize },
        1280usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4f0 as *const _ as usize },
        1284usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4f4 as *const _ as usize },
        1288usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4f8 as *const _ as usize },
        1292usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x4fc as *const _ as usize },
        1296usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x4fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x500 as *const _ as usize },
        1300usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x500)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x504 as *const _ as usize },
        1304usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x504)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x508 as *const _ as usize },
        1308usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x508)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x50c as *const _ as usize },
        1312usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x50c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x510 as *const _ as usize },
        1316usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x510)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x514 as *const _ as usize },
        1320usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x514)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x518 as *const _ as usize },
        1324usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x518)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x51c as *const _ as usize },
        1328usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x51c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x520 as *const _ as usize },
        1332usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x520)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x524 as *const _ as usize },
        1336usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x524)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x528 as *const _ as usize },
        1340usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x528)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x52c as *const _ as usize },
        1344usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x52c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x530 as *const _ as usize },
        1348usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x530)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x534 as *const _ as usize },
        1352usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x534)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x538 as *const _ as usize },
        1356usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x538)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x53c as *const _ as usize },
        1360usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x53c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x540 as *const _ as usize },
        1364usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x540)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x544 as *const _ as usize },
        1368usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x544)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x548 as *const _ as usize },
        1372usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x548)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x54c as *const _ as usize },
        1376usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x54c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x550 as *const _ as usize },
        1380usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x550)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x554 as *const _ as usize },
        1384usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x554)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x558 as *const _ as usize },
        1388usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x558)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x55c as *const _ as usize },
        1392usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x55c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x560 as *const _ as usize },
        1396usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x560)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x564 as *const _ as usize },
        1400usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x564)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x568 as *const _ as usize },
        1404usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x568)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x56c as *const _ as usize },
        1408usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x56c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x570 as *const _ as usize },
        1412usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x570)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x574 as *const _ as usize },
        1416usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x574)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x578 as *const _ as usize },
        1420usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x578)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x57c as *const _ as usize },
        1424usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x57c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x580 as *const _ as usize },
        1428usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x580)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x584 as *const _ as usize },
        1432usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x584)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x588 as *const _ as usize },
        1436usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x588)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x58c as *const _ as usize },
        1440usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x58c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x590 as *const _ as usize },
        1444usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x590)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x594 as *const _ as usize },
        1448usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x594)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x598 as *const _ as usize },
        1452usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x598)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x59c as *const _ as usize },
        1456usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x59c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5a0 as *const _ as usize },
        1460usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5a4 as *const _ as usize },
        1464usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5a8 as *const _ as usize },
        1468usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5ac as *const _ as usize },
        1472usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5b0 as *const _ as usize },
        1476usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5b4 as *const _ as usize },
        1480usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5b8 as *const _ as usize },
        1484usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5bc as *const _ as usize },
        1488usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5c0 as *const _ as usize },
        1492usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5c4 as *const _ as usize },
        1496usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5c8 as *const _ as usize },
        1500usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5cc as *const _ as usize },
        1504usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5d0 as *const _ as usize },
        1508usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5d4 as *const _ as usize },
        1512usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5d8 as *const _ as usize },
        1516usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5dc as *const _ as usize },
        1520usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5e0 as *const _ as usize },
        1524usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5e4 as *const _ as usize },
        1528usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5e8 as *const _ as usize },
        1532usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5ec as *const _ as usize },
        1536usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5f0 as *const _ as usize },
        1540usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5f4 as *const _ as usize },
        1544usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5f8 as *const _ as usize },
        1548usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x5fc as *const _ as usize },
        1552usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x5fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x600 as *const _ as usize },
        1556usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x600)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x604 as *const _ as usize },
        1560usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x604)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x608 as *const _ as usize },
        1564usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x608)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x60c as *const _ as usize },
        1568usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x60c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x610 as *const _ as usize },
        1572usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x610)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x614 as *const _ as usize },
        1576usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x614)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x618 as *const _ as usize },
        1580usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x618)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x61c as *const _ as usize },
        1584usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x61c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x620 as *const _ as usize },
        1588usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x620)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x624 as *const _ as usize },
        1592usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x624)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x628 as *const _ as usize },
        1596usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x628)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x62c as *const _ as usize },
        1600usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x62c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x630 as *const _ as usize },
        1604usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x630)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x634 as *const _ as usize },
        1608usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x634)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x638 as *const _ as usize },
        1612usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x638)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x63c as *const _ as usize },
        1616usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x63c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x640 as *const _ as usize },
        1620usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x640)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x644 as *const _ as usize },
        1624usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x644)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x648 as *const _ as usize },
        1628usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x648)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x64c as *const _ as usize },
        1632usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x64c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x650 as *const _ as usize },
        1636usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x650)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x654 as *const _ as usize },
        1640usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x654)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x658 as *const _ as usize },
        1644usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x658)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x65c as *const _ as usize },
        1648usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x65c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x660 as *const _ as usize },
        1652usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x660)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x664 as *const _ as usize },
        1656usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x664)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x668 as *const _ as usize },
        1660usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x668)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x66c as *const _ as usize },
        1664usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x66c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x670 as *const _ as usize },
        1668usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x670)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x674 as *const _ as usize },
        1672usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x674)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x678 as *const _ as usize },
        1676usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x678)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x67c as *const _ as usize },
        1680usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x67c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x680 as *const _ as usize },
        1684usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x680)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x684 as *const _ as usize },
        1688usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x684)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x688 as *const _ as usize },
        1692usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x688)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x68c as *const _ as usize },
        1696usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x68c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x690 as *const _ as usize },
        1700usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x690)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x694 as *const _ as usize },
        1704usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x694)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x698 as *const _ as usize },
        1708usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x698)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x69c as *const _ as usize },
        1712usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x69c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6a0 as *const _ as usize },
        1716usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6a4 as *const _ as usize },
        1720usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6a8 as *const _ as usize },
        1724usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6ac as *const _ as usize },
        1728usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6b0 as *const _ as usize },
        1732usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6b4 as *const _ as usize },
        1736usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6b8 as *const _ as usize },
        1740usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6bc as *const _ as usize },
        1744usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6c0 as *const _ as usize },
        1748usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6c4 as *const _ as usize },
        1752usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6c8 as *const _ as usize },
        1756usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6cc as *const _ as usize },
        1760usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6d0 as *const _ as usize },
        1764usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6d4 as *const _ as usize },
        1768usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6d8 as *const _ as usize },
        1772usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6dc as *const _ as usize },
        1776usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6e0 as *const _ as usize },
        1780usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6e4 as *const _ as usize },
        1784usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6e8 as *const _ as usize },
        1788usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6ec as *const _ as usize },
        1792usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6f0 as *const _ as usize },
        1796usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6f4 as *const _ as usize },
        1800usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6f8 as *const _ as usize },
        1804usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x6fc as *const _ as usize },
        1808usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x6fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x700 as *const _ as usize },
        1812usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x700)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x704 as *const _ as usize },
        1816usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x704)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x708 as *const _ as usize },
        1820usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x708)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x70c as *const _ as usize },
        1824usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x70c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x710 as *const _ as usize },
        1828usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x710)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x714 as *const _ as usize },
        1832usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x714)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x718 as *const _ as usize },
        1836usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x718)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x71c as *const _ as usize },
        1840usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x71c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x720 as *const _ as usize },
        1844usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x720)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x724 as *const _ as usize },
        1848usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x724)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x728 as *const _ as usize },
        1852usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x728)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x72c as *const _ as usize },
        1856usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x72c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x730 as *const _ as usize },
        1860usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x730)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x734 as *const _ as usize },
        1864usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x734)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x738 as *const _ as usize },
        1868usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x738)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x73c as *const _ as usize },
        1872usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x73c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x740 as *const _ as usize },
        1876usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x740)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x744 as *const _ as usize },
        1880usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x744)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x748 as *const _ as usize },
        1884usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x748)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x74c as *const _ as usize },
        1888usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x74c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x750 as *const _ as usize },
        1892usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x750)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x754 as *const _ as usize },
        1896usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x754)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x758 as *const _ as usize },
        1900usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x758)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x75c as *const _ as usize },
        1904usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x75c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x760 as *const _ as usize },
        1908usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x760)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x764 as *const _ as usize },
        1912usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x764)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x768 as *const _ as usize },
        1916usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x768)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x76c as *const _ as usize },
        1920usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x76c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x770 as *const _ as usize },
        1924usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x770)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x774 as *const _ as usize },
        1928usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x774)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x778 as *const _ as usize },
        1932usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x778)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x77c as *const _ as usize },
        1936usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x77c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x780 as *const _ as usize },
        1940usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x780)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x784 as *const _ as usize },
        1944usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x784)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x788 as *const _ as usize },
        1948usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x788)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x78c as *const _ as usize },
        1952usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x78c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x790 as *const _ as usize },
        1956usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x790)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x794 as *const _ as usize },
        1960usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x794)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x798 as *const _ as usize },
        1964usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x798)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x79c as *const _ as usize },
        1968usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x79c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7a0 as *const _ as usize },
        1972usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7a4 as *const _ as usize },
        1976usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7a8 as *const _ as usize },
        1980usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7ac as *const _ as usize },
        1984usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7b0 as *const _ as usize },
        1988usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7b4 as *const _ as usize },
        1992usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7b8 as *const _ as usize },
        1996usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7bc as *const _ as usize },
        2000usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7c0 as *const _ as usize },
        2004usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7c4 as *const _ as usize },
        2008usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7c8 as *const _ as usize },
        2012usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7cc as *const _ as usize },
        2016usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7d0 as *const _ as usize },
        2020usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7d4 as *const _ as usize },
        2024usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7d8 as *const _ as usize },
        2028usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7dc as *const _ as usize },
        2032usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7e0 as *const _ as usize },
        2036usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7e4 as *const _ as usize },
        2040usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7e8 as *const _ as usize },
        2044usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7ec as *const _ as usize },
        2048usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7f0 as *const _ as usize },
        2052usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7f4 as *const _ as usize },
        2056usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7f8 as *const _ as usize },
        2060usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x7fc as *const _ as usize },
        2064usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x7fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x800 as *const _ as usize },
        2068usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x800)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x804 as *const _ as usize },
        2072usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x804)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x808 as *const _ as usize },
        2076usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x808)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x80c as *const _ as usize },
        2080usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x80c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x810 as *const _ as usize },
        2084usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x810)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x814 as *const _ as usize },
        2088usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x814)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x818 as *const _ as usize },
        2092usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x818)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x81c as *const _ as usize },
        2096usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x81c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x820 as *const _ as usize },
        2100usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x820)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x824 as *const _ as usize },
        2104usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x824)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x828 as *const _ as usize },
        2108usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x828)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x82c as *const _ as usize },
        2112usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x82c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x830 as *const _ as usize },
        2116usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x830)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x834 as *const _ as usize },
        2120usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x834)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x838 as *const _ as usize },
        2124usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x838)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x83c as *const _ as usize },
        2128usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x83c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x840 as *const _ as usize },
        2132usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x840)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x844 as *const _ as usize },
        2136usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x844)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x848 as *const _ as usize },
        2140usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x848)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x84c as *const _ as usize },
        2144usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x84c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x850 as *const _ as usize },
        2148usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x850)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x854 as *const _ as usize },
        2152usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x854)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x858 as *const _ as usize },
        2156usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x858)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x85c as *const _ as usize },
        2160usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x85c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x860 as *const _ as usize },
        2164usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x860)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x864 as *const _ as usize },
        2168usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x864)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x868 as *const _ as usize },
        2172usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x868)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x86c as *const _ as usize },
        2176usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x86c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x870 as *const _ as usize },
        2180usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x870)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x874 as *const _ as usize },
        2184usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x874)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x878 as *const _ as usize },
        2188usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x878)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x87c as *const _ as usize },
        2192usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x87c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x880 as *const _ as usize },
        2196usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x880)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x884 as *const _ as usize },
        2200usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x884)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x888 as *const _ as usize },
        2204usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x888)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x88c as *const _ as usize },
        2208usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x88c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x890 as *const _ as usize },
        2212usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x890)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x894 as *const _ as usize },
        2216usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x894)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x898 as *const _ as usize },
        2220usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x898)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x89c as *const _ as usize },
        2224usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x89c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x8a0 as *const _ as usize },
        2228usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x8a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x8a4 as *const _ as usize },
        2232usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x8a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).x8a8 as *const _ as usize },
        2236usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(x8a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardWork>())).is_done as *const _ as usize },
        2240usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardWork),
            "::",
            stringify!(is_done)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MemcardUnk {
    pub block_size: u8_,
    pub x1: u8_,
    pub x2: u8_,
    pub x3: u8_,
    pub x4: u8_,
    pub x5: u8_,
    pub x6: u8_,
    pub x7: u8_,
    pub x8: u8_,
    pub x9: u8_,
    pub xa: [u8_; 8usize],
}
#[test]
fn bindgen_test_layout_MemcardUnk() {
    assert_eq!(
        ::std::mem::size_of::<MemcardUnk>(),
        18usize,
        concat!("Size of: ", stringify!(MemcardUnk))
    );
    assert_eq!(
        ::std::mem::align_of::<MemcardUnk>(),
        1usize,
        concat!("Alignment of ", stringify!(MemcardUnk))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).block_size as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(block_size)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).x1 as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(x1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).x2 as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(x2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).x3 as *const _ as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(x3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).x5 as *const _ as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(x5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).x6 as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(x6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).x7 as *const _ as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(x7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).x9 as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(x9)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardUnk>())).xa as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardUnk),
            "::",
            stringify!(xa)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MemcardInfo {
    pub snap_data: *mut ::std::os::raw::c_void,
    pub file_name: [::std::os::raw::c_char; 32usize],
    pub file_desc: [::std::os::raw::c_char; 32usize],
    pub icon_data: *mut MemSnapIconData,
    pub snap_list: *mut SnapshotList,
    pub memcard_probe: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8c: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa4: ::std::os::raw::c_int,
    pub xa8: ::std::os::raw::c_int,
    pub xac: ::std::os::raw::c_int,
    pub xb0: ::std::os::raw::c_int,
    pub xb4: ::std::os::raw::c_int,
    pub xb8: ::std::os::raw::c_int,
    pub xbc: ::std::os::raw::c_int,
    pub xc0: ::std::os::raw::c_int,
    pub xc4: ::std::os::raw::c_int,
    pub xc8: ::std::os::raw::c_int,
    pub xcc: ::std::os::raw::c_int,
    pub xd0: ::std::os::raw::c_int,
    pub xd4: ::std::os::raw::c_int,
    pub xd8: ::std::os::raw::c_int,
    pub xdc: ::std::os::raw::c_int,
    pub xe0: ::std::os::raw::c_int,
    pub xe4: ::std::os::raw::c_int,
    pub xe8: ::std::os::raw::c_int,
    pub xec: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_MemcardInfo() {
    assert_eq!(
        ::std::mem::size_of::<MemcardInfo>(),
        256usize,
        concat!("Size of: ", stringify!(MemcardInfo))
    );
    assert_eq!(
        ::std::mem::align_of::<MemcardInfo>(),
        8usize,
        concat!("Alignment of ", stringify!(MemcardInfo))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).snap_data as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(snap_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).file_name as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(file_name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).file_desc as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(file_desc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).icon_data as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(icon_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).snap_list as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(snap_list)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).memcard_probe as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(memcard_probe)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x50 as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x54 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x58 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x5c as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x60 as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x64 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x68 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x6c as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x70 as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x74 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x78 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x7c as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x80 as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x84 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x88 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x8c as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x90 as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x94 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x98 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).x9c as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xa0 as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xa4 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xa8 as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xac as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xb0 as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xb4 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xb8 as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xbc as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xc0 as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xc4 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xc8 as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xcc as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xd0 as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xd4 as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xd8 as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xdc as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xe0 as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xe4 as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xe8 as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MemcardInfo>())).xec as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(MemcardInfo),
            "::",
            stringify!(xec)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Rules1 {
    pub x0: u8_,
    pub x1: u8_,
    pub x2: u8_,
    pub x3: u8_,
    pub x4: u8_,
    pub handicap: u8_,
    pub x6: u8_,
    pub x7: u8_,
    pub x8: u8_,
    pub x9: u8_,
    pub xa: u8_,
    pub xb: u8_,
    pub xc: u8_,
}
#[test]
fn bindgen_test_layout_Rules1() {
    assert_eq!(
        ::std::mem::size_of::<Rules1>(),
        13usize,
        concat!("Size of: ", stringify!(Rules1))
    );
    assert_eq!(
        ::std::mem::align_of::<Rules1>(),
        1usize,
        concat!("Alignment of ", stringify!(Rules1))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).x1 as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(x1)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).x2 as *const _ as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(x2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).x3 as *const _ as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(x3)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).handicap as *const _ as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(handicap)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).x6 as *const _ as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(x6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).x7 as *const _ as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(x7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).x8 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).x9 as *const _ as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(x9)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).xa as *const _ as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(xa)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).xb as *const _ as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(xb)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Rules1>())).xc as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(Rules1),
            "::",
            stringify!(xc)
        )
    );
}
extern "C" {
    pub static mut stc_memcard_info: *mut MemcardInfo;
}
extern "C" {
    pub static mut stc_memcard_unk: *mut MemcardUnk;
}
extern "C" {
    pub static mut stc_memcard_work: *mut MemcardWork;
}
extern "C" {
    pub static mut stc_memcard_block_curr: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_memcard_block_last: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_memcard_write_status: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_CardXferredBytes: *mut ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PreloadChar {
    pub kind: ::std::os::raw::c_int,
    pub costume: u8_,
}
#[test]
fn bindgen_test_layout_PreloadChar() {
    assert_eq!(
        ::std::mem::size_of::<PreloadChar>(),
        8usize,
        concat!("Size of: ", stringify!(PreloadChar))
    );
    assert_eq!(
        ::std::mem::align_of::<PreloadChar>(),
        4usize,
        concat!("Alignment of ", stringify!(PreloadChar))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PreloadChar>())).kind as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(PreloadChar),
            "::",
            stringify!(kind)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<PreloadChar>())).costume as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(PreloadChar),
            "::",
            stringify!(costume)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Preload {
    pub x0: ::std::os::raw::c_int,
    pub x4: ::std::os::raw::c_int,
    pub xc: u8_,
    pub stage: ::std::os::raw::c_int,
    pub fighters: [PreloadChar; 8usize],
    pub defragNum: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_Preload() {
    assert_eq!(
        ::std::mem::size_of::<Preload>(),
        84usize,
        concat!("Size of: ", stringify!(Preload))
    );
    assert_eq!(
        ::std::mem::align_of::<Preload>(),
        4usize,
        concat!("Alignment of ", stringify!(Preload))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Preload>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Preload),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Preload>())).x4 as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Preload),
            "::",
            stringify!(x4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Preload>())).xc as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Preload),
            "::",
            stringify!(xc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Preload>())).stage as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(Preload),
            "::",
            stringify!(stage)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Preload>())).fighters as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(Preload),
            "::",
            stringify!(fighters)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Preload>())).defragNum as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(Preload),
            "::",
            stringify!(defragNum)
        )
    );
}
extern "C" {
    #[doc = " Functions"]
    pub fn Preload_Update();
}
extern "C" {
    pub fn Preload_GetTable() -> *mut Preload;
}
pub const GrInternal_GR_DUMMY: GrInternal = 0;
pub const GrInternal_GR_TEST: GrInternal = 1;
pub const GrInternal_GR_CASTLE: GrInternal = 2;
pub const GrInternal_GR_RCRUISE: GrInternal = 3;
pub const GrInternal_GR_KONGO: GrInternal = 4;
pub const GrInternal_GR_GARDEN: GrInternal = 5;
pub const GrInternal_GR_GREATBAY: GrInternal = 6;
pub const GrInternal_GR_SHRINE: GrInternal = 7;
pub const GrInternal_GR_ZEBES: GrInternal = 8;
pub const GrInternal_GR_KRAID: GrInternal = 9;
pub const GrInternal_GR_STORY: GrInternal = 10;
pub const GrInternal_GR_YOSTER: GrInternal = 11;
pub const GrInternal_GR_IZUMI: GrInternal = 12;
pub const GrInternal_GR_GREENS: GrInternal = 13;
pub const GrInternal_GR_CORNERIA: GrInternal = 14;
pub const GrInternal_GR_VENOM: GrInternal = 15;
pub const GrInternal_GR_PSTAD: GrInternal = 16;
pub const GrInternal_GR_PURA: GrInternal = 17;
pub const GrInternal_GR_MUTECITY: GrInternal = 18;
pub const GrInternal_GR_BIGBLUE: GrInternal = 19;
pub const GrInternal_GR_ONETT: GrInternal = 20;
pub const GrInternal_GR_FOURSIDE: GrInternal = 21;
pub const GrInternal_GR_ICEMT: GrInternal = 22;
pub const GrInternal_GR_ICETOP: GrInternal = 23;
pub const GrInternal_GR_MK1: GrInternal = 24;
pub const GrInternal_GR_MK2: GrInternal = 25;
pub const GrInternal_GR_AKANEIA: GrInternal = 26;
pub const GrInternal_GR_FLATZONE: GrInternal = 27;
pub const GrInternal_GR_OLDPU: GrInternal = 28;
pub const GrInternal_GR_OLDSTORY: GrInternal = 29;
pub const GrInternal_GR_OLDKONGO: GrInternal = 30;
pub const GrInternal_GR_ADVKRAID: GrInternal = 31;
pub const GrInternal_GR_ADVSHRINE: GrInternal = 32;
pub const GrInternal_GR_ADVZR: GrInternal = 33;
pub const GrInternal_GR_ADVBR: GrInternal = 34;
pub const GrInternal_GR_ADVTE: GrInternal = 35;
pub const GrInternal_GR_BATTLE: GrInternal = 36;
pub const GrInternal_GR_FD: GrInternal = 37;
pub type GrInternal = ::std::os::raw::c_uint;
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct map_gobjDesc {
    pub onCreation:
        ::std::option::Option<unsafe extern "C" fn(map: *mut GOBJ) -> *mut ::std::os::raw::c_void>,
    pub onDeletion: *mut ::std::os::raw::c_void,
    pub onFrame: *mut ::std::os::raw::c_void,
    pub onUnk: *mut ::std::os::raw::c_void,
    pub flags: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_map_gobjDesc() {
    assert_eq!(
        ::std::mem::size_of::<map_gobjDesc>(),
        40usize,
        concat!("Size of: ", stringify!(map_gobjDesc))
    );
    assert_eq!(
        ::std::mem::align_of::<map_gobjDesc>(),
        8usize,
        concat!("Alignment of ", stringify!(map_gobjDesc))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjDesc>())).onCreation as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjDesc),
            "::",
            stringify!(onCreation)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjDesc>())).onDeletion as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjDesc),
            "::",
            stringify!(onDeletion)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjDesc>())).onFrame as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjDesc),
            "::",
            stringify!(onFrame)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjDesc>())).onUnk as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjDesc),
            "::",
            stringify!(onUnk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjDesc>())).flags as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjDesc),
            "::",
            stringify!(flags)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct map_gobjData {
    pub x0: ::std::os::raw::c_int,
    pub gobj: *mut GOBJ,
    pub x8: ::std::os::raw::c_int,
    pub xC: ::std::os::raw::c_int,
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 2usize], u8>,
    pub map_gobjID: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub onUnk: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub x24: ::std::os::raw::c_int,
    pub stateID: ::std::os::raw::c_int,
    pub facingDirection: ::std::os::raw::c_int,
    pub x30: ::std::os::raw::c_int,
    pub x34: ::std::os::raw::c_int,
    pub scale: f32,
    pub x3c: ::std::os::raw::c_int,
    pub selfVelX: f32,
    pub selfVelY: f32,
    pub selfVelZ: f32,
    pub posX: f32,
    pub posY: f32,
    pub posZ: f32,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub x74: ::std::os::raw::c_int,
    pub x78: ::std::os::raw::c_int,
    pub x7c: ::std::os::raw::c_int,
    pub x80: ::std::os::raw::c_int,
    pub x84: ::std::os::raw::c_int,
    pub x88: ::std::os::raw::c_int,
    pub x8c: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub x98: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa4: ::std::os::raw::c_int,
    pub xa8: ::std::os::raw::c_int,
    pub xac: ::std::os::raw::c_int,
    pub xb0: ::std::os::raw::c_int,
    pub xb4: ::std::os::raw::c_int,
    pub xb8: ::std::os::raw::c_int,
    pub xbc: ::std::os::raw::c_int,
    pub xc0: ::std::os::raw::c_int,
    pub xc4: u8_,
    pub xc5: u8_,
    pub xc6: u8_,
    pub xc7: u8_,
    pub xc8: ::std::os::raw::c_int,
    pub xcc: ::std::os::raw::c_int,
    pub xd0: ::std::os::raw::c_int,
    pub xd4: ::std::os::raw::c_int,
    pub xd8: ::std::os::raw::c_int,
    pub xdc: ::std::os::raw::c_int,
    pub map_struct: map_gobjData__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct map_gobjData__bindgen_ty_1 {
    pub mapVar0: ::std::os::raw::c_int,
    pub mapVar1: ::std::os::raw::c_int,
    pub mapVar2: ::std::os::raw::c_int,
    pub mapVar3: ::std::os::raw::c_int,
    pub mapVar4: ::std::os::raw::c_int,
    pub mapVar5: ::std::os::raw::c_int,
    pub mapVar6: ::std::os::raw::c_int,
    pub mapVar7: ::std::os::raw::c_int,
    pub x100: ::std::os::raw::c_int,
    pub x104: ::std::os::raw::c_int,
    pub x108: ::std::os::raw::c_int,
    pub x10c: ::std::os::raw::c_int,
    pub x110: ::std::os::raw::c_int,
    pub x114: ::std::os::raw::c_int,
    pub x118: ::std::os::raw::c_int,
    pub x11c: ::std::os::raw::c_int,
    pub x120: ::std::os::raw::c_int,
    pub x124: ::std::os::raw::c_int,
    pub x128: ::std::os::raw::c_int,
    pub x12c: ::std::os::raw::c_int,
    pub x130: ::std::os::raw::c_int,
    pub x134: ::std::os::raw::c_int,
    pub x138: ::std::os::raw::c_int,
    pub x13c: ::std::os::raw::c_int,
    pub x140: ::std::os::raw::c_int,
    pub x144: ::std::os::raw::c_int,
    pub x148: ::std::os::raw::c_int,
    pub x14c: ::std::os::raw::c_int,
    pub x150: ::std::os::raw::c_int,
    pub x154: ::std::os::raw::c_int,
    pub x158: ::std::os::raw::c_int,
    pub x15c: ::std::os::raw::c_int,
    pub x160: ::std::os::raw::c_int,
    pub x164: ::std::os::raw::c_int,
    pub x168: ::std::os::raw::c_int,
    pub x16c: ::std::os::raw::c_int,
    pub x170: ::std::os::raw::c_int,
    pub x174: ::std::os::raw::c_int,
    pub x178: ::std::os::raw::c_int,
    pub x17c: ::std::os::raw::c_int,
    pub x180: ::std::os::raw::c_int,
    pub x184: ::std::os::raw::c_int,
    pub x188: ::std::os::raw::c_int,
    pub x18c: ::std::os::raw::c_int,
    pub x190: ::std::os::raw::c_int,
    pub x194: ::std::os::raw::c_int,
    pub x198: ::std::os::raw::c_int,
    pub x19c: ::std::os::raw::c_int,
    pub x1a0: ::std::os::raw::c_int,
    pub x1a4: ::std::os::raw::c_int,
    pub x1a8: ::std::os::raw::c_int,
    pub x1ac: ::std::os::raw::c_int,
    pub x1b0: ::std::os::raw::c_int,
    pub x1b4: ::std::os::raw::c_int,
    pub x1b8: ::std::os::raw::c_int,
    pub x1bc: ::std::os::raw::c_int,
    pub x1c0: ::std::os::raw::c_int,
    pub x1c4: ::std::os::raw::c_int,
    pub x1c8: ::std::os::raw::c_int,
    pub x1cc: ::std::os::raw::c_int,
    pub x1d0: ::std::os::raw::c_int,
    pub x1d4: ::std::os::raw::c_int,
    pub x1d8: ::std::os::raw::c_int,
    pub x1dc: ::std::os::raw::c_int,
    pub x1e0: ::std::os::raw::c_int,
    pub x1e4: ::std::os::raw::c_int,
    pub x1e8: ::std::os::raw::c_int,
    pub x1ec: ::std::os::raw::c_int,
    pub x1f0: ::std::os::raw::c_int,
    pub x1f4: ::std::os::raw::c_int,
    pub x1f8: ::std::os::raw::c_int,
    pub x1fc: ::std::os::raw::c_int,
    pub x200: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_map_gobjData__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<map_gobjData__bindgen_ty_1>(),
        292usize,
        concat!("Size of: ", stringify!(map_gobjData__bindgen_ty_1))
    );
    assert_eq!(
        ::std::mem::align_of::<map_gobjData__bindgen_ty_1>(),
        4usize,
        concat!("Alignment of ", stringify!(map_gobjData__bindgen_ty_1))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).mapVar0 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(mapVar0)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).mapVar1 as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(mapVar1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).mapVar2 as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(mapVar2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).mapVar3 as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(mapVar3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).mapVar4 as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(mapVar4)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).mapVar5 as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(mapVar5)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).mapVar6 as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(mapVar6)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).mapVar7 as *const _ as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(mapVar7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x100 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x104 as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x108 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x10c as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x10c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x110 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x114 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x118 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x11c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x11c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x120 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x124 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x128 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x12c as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x12c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x130 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x134 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x138 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x13c as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x13c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x140 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x144 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x148 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x14c as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x14c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x150 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x154 as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x158 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x15c as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x15c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x160 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x164 as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x168 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x16c as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x16c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x170 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x174 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x178 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x17c as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x17c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x180 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x180)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x184 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x184)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x188 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x188)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x18c as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x18c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x190 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x190)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x194 as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x194)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x198 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x198)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x19c as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x19c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1a0 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1a4 as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1a4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1a8 as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1a8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1ac as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1ac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1b0 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1b0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1b4 as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1b4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1b8 as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1b8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1bc as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1bc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1c0 as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1c0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1c4 as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1c4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1c8 as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1cc as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1cc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1d0 as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1d4 as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1d4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1d8 as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1dc as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1e0 as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1e4 as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1e8 as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1ec as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1f0 as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1f4 as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1f8 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x1fc as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x1fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData__bindgen_ty_1>())).x200 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData__bindgen_ty_1),
            "::",
            stringify!(x200)
        )
    );
}
#[test]
fn bindgen_test_layout_map_gobjData() {
    assert_eq!(
        ::std::mem::size_of::<map_gobjData>(),
        528usize,
        concat!("Size of: ", stringify!(map_gobjData))
    );
    assert_eq!(
        ::std::mem::align_of::<map_gobjData>(),
        8usize,
        concat!("Alignment of ", stringify!(map_gobjData))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x0 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).gobj as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(gobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x8 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xC as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).map_gobjID as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(map_gobjID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x18 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x18)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).onUnk as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(onUnk)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x20 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x20)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x24 as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x24)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).stateID as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(stateID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).facingDirection as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(facingDirection)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x30 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x34 as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).scale as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x3c as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).selfVelX as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(selfVelX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).selfVelY as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(selfVelY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).selfVelZ as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(selfVelZ)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).posX as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(posX)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).posY as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(posY)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).posZ as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(posZ)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x58 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x5c as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x60 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x64 as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x68 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x6c as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x70 as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x74 as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x74)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x78 as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x78)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x7c as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x7c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x80 as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x80)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x84 as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x84)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x88 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x88)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x8c as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x8c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x90 as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x94 as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x98 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x98)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).x9c as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xa0 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xa4 as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xa8 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xac as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xb0 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xb4 as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xb8 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xbc as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xc0 as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xc4 as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xc5 as *const _ as usize },
        205usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xc5)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xc6 as *const _ as usize },
        206usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xc6)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xc7 as *const _ as usize },
        207usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xc7)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xc8 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xcc as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xd0 as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xd4 as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xd8 as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).xdc as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(xdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<map_gobjData>())).map_struct as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(map_gobjData),
            "::",
            stringify!(map_struct)
        )
    );
}
impl map_gobjData {
    #[inline]
    pub fn flagx80(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flagx80(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flagx40(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flagx40(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn isFog(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_isFog(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flagx10(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flagx10(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flagx8(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flagx8(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn gx_unk1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_gx_unk1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flagx2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flagx2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flagx1(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flagx1(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn gx_unk2(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(8usize, 3u8) as u8) }
    }
    #[inline]
    pub fn set_gx_unk2(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(8usize, 3u8, val as u64)
        }
    }
    #[inline]
    pub fn flag2x10(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(11usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag2x10(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(11usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag2x08(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(12usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag2x08(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(12usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag2x04(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(13usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag2x04(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(13usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag2x02(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(14usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag2x02(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(14usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn flag2x01(&self) -> ::std::os::raw::c_uchar {
        unsafe { ::std::mem::transmute(self._bitfield_1.get(15usize, 1u8) as u8) }
    }
    #[inline]
    pub fn set_flag2x01(&mut self, val: ::std::os::raw::c_uchar) {
        unsafe {
            let val: u8 = ::std::mem::transmute(val);
            self._bitfield_1.set(15usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        flagx80: ::std::os::raw::c_uchar,
        flagx40: ::std::os::raw::c_uchar,
        isFog: ::std::os::raw::c_uchar,
        flagx10: ::std::os::raw::c_uchar,
        flagx8: ::std::os::raw::c_uchar,
        gx_unk1: ::std::os::raw::c_uchar,
        flagx2: ::std::os::raw::c_uchar,
        flagx1: ::std::os::raw::c_uchar,
        gx_unk2: ::std::os::raw::c_uchar,
        flag2x10: ::std::os::raw::c_uchar,
        flag2x08: ::std::os::raw::c_uchar,
        flag2x04: ::std::os::raw::c_uchar,
        flag2x02: ::std::os::raw::c_uchar,
        flag2x01: ::std::os::raw::c_uchar,
    ) -> __BindgenBitfieldUnit<[u8; 2usize], u8> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 2usize], u8> =
            Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let flagx80: u8 = unsafe { ::std::mem::transmute(flagx80) };
            flagx80 as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let flagx40: u8 = unsafe { ::std::mem::transmute(flagx40) };
            flagx40 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let isFog: u8 = unsafe { ::std::mem::transmute(isFog) };
            isFog as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let flagx10: u8 = unsafe { ::std::mem::transmute(flagx10) };
            flagx10 as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let flagx8: u8 = unsafe { ::std::mem::transmute(flagx8) };
            flagx8 as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let gx_unk1: u8 = unsafe { ::std::mem::transmute(gx_unk1) };
            gx_unk1 as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let flagx2: u8 = unsafe { ::std::mem::transmute(flagx2) };
            flagx2 as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let flagx1: u8 = unsafe { ::std::mem::transmute(flagx1) };
            flagx1 as u64
        });
        __bindgen_bitfield_unit.set(8usize, 3u8, {
            let gx_unk2: u8 = unsafe { ::std::mem::transmute(gx_unk2) };
            gx_unk2 as u64
        });
        __bindgen_bitfield_unit.set(11usize, 1u8, {
            let flag2x10: u8 = unsafe { ::std::mem::transmute(flag2x10) };
            flag2x10 as u64
        });
        __bindgen_bitfield_unit.set(12usize, 1u8, {
            let flag2x08: u8 = unsafe { ::std::mem::transmute(flag2x08) };
            flag2x08 as u64
        });
        __bindgen_bitfield_unit.set(13usize, 1u8, {
            let flag2x04: u8 = unsafe { ::std::mem::transmute(flag2x04) };
            flag2x04 as u64
        });
        __bindgen_bitfield_unit.set(14usize, 1u8, {
            let flag2x02: u8 = unsafe { ::std::mem::transmute(flag2x02) };
            flag2x02 as u64
        });
        __bindgen_bitfield_unit.set(15usize, 1u8, {
            let flag2x01: u8 = unsafe { ::std::mem::transmute(flag2x01) };
            flag2x01 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct StageOnGO {
    pub next: *mut StageOnGO,
    pub map_gobj: *mut GOBJ,
    pub cb: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout_StageOnGO() {
    assert_eq!(
        ::std::mem::size_of::<StageOnGO>(),
        24usize,
        concat!("Size of: ", stringify!(StageOnGO))
    );
    assert_eq!(
        ::std::mem::align_of::<StageOnGO>(),
        8usize,
        concat!("Alignment of ", stringify!(StageOnGO))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<StageOnGO>())).next as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(StageOnGO),
            "::",
            stringify!(next)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<StageOnGO>())).map_gobj as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(StageOnGO),
            "::",
            stringify!(map_gobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<StageOnGO>())).cb as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(StageOnGO),
            "::",
            stringify!(cb)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct Stage {
    pub cam_LeftBound: f32,
    pub cam_RightBound: f32,
    pub cam_TopBound: f32,
    pub cam_BottomBound: f32,
    pub cam_HorizOffset: f32,
    pub crowdReactStart: f32,
    pub fov_d: f32,
    pub fov_u: f32,
    pub fov_r: f32,
    pub fov_l: f32,
    pub x28: f32,
    pub x2c: f32,
    pub x30: f32,
    pub x34: f32,
    pub x38: f32,
    pub x3c: f32,
    pub x40: f32,
    pub x44: ::std::os::raw::c_int,
    pub x48: ::std::os::raw::c_int,
    pub x4c: ::std::os::raw::c_int,
    pub x50: ::std::os::raw::c_int,
    pub x54: ::std::os::raw::c_int,
    pub x58: ::std::os::raw::c_int,
    pub x5c: ::std::os::raw::c_int,
    pub x60: ::std::os::raw::c_int,
    pub x64: ::std::os::raw::c_int,
    pub x68: ::std::os::raw::c_int,
    pub x6c: ::std::os::raw::c_int,
    pub x70: ::std::os::raw::c_int,
    pub blastzoneLeft: f32,
    pub blastzoneRight: f32,
    pub blastzoneTop: f32,
    pub blastzoneBottom: f32,
    pub flags: ::std::os::raw::c_int,
    pub stageID: ::std::os::raw::c_int,
    pub flags2: ::std::os::raw::c_int,
    pub x90: ::std::os::raw::c_int,
    pub x94: ::std::os::raw::c_int,
    pub hpsID: ::std::os::raw::c_int,
    pub x9c: ::std::os::raw::c_int,
    pub xa0: ::std::os::raw::c_int,
    pub xa4: ::std::os::raw::c_int,
    pub xa8: ::std::os::raw::c_int,
    pub xac: ::std::os::raw::c_int,
    pub xb0: ::std::os::raw::c_int,
    pub xb4: ::std::os::raw::c_int,
    pub xb8: ::std::os::raw::c_int,
    pub xbc: ::std::os::raw::c_int,
    pub xc0: ::std::os::raw::c_int,
    pub xc4: ::std::os::raw::c_int,
    pub xc8: ::std::os::raw::c_int,
    pub xcc: ::std::os::raw::c_int,
    pub xd0: ::std::os::raw::c_int,
    pub xd4: ::std::os::raw::c_int,
    pub xd8: ::std::os::raw::c_int,
    pub xdc: ::std::os::raw::c_int,
    pub xe0: ::std::os::raw::c_int,
    pub xe4: ::std::os::raw::c_int,
    pub xe8: ::std::os::raw::c_int,
    pub xec: ::std::os::raw::c_int,
    pub xf0: ::std::os::raw::c_int,
    pub xf4: ::std::os::raw::c_int,
    pub xf8: ::std::os::raw::c_int,
    pub xfc: ::std::os::raw::c_int,
    pub x100: ::std::os::raw::c_int,
    pub x104: ::std::os::raw::c_int,
    pub x108: ::std::os::raw::c_int,
    pub x10c: ::std::os::raw::c_int,
    pub x110: ::std::os::raw::c_int,
    pub x114: ::std::os::raw::c_int,
    pub x118: ::std::os::raw::c_int,
    pub x11c: ::std::os::raw::c_int,
    pub x120: ::std::os::raw::c_int,
    pub x124: ::std::os::raw::c_int,
    pub x128: ::std::os::raw::c_int,
    pub x12c: ::std::os::raw::c_int,
    pub x130: ::std::os::raw::c_int,
    pub x134: ::std::os::raw::c_int,
    pub x138: ::std::os::raw::c_int,
    pub x13c: ::std::os::raw::c_int,
    pub x140: ::std::os::raw::c_int,
    pub x144: ::std::os::raw::c_int,
    pub x148: ::std::os::raw::c_int,
    pub x14c: ::std::os::raw::c_int,
    pub x150: ::std::os::raw::c_int,
    pub x154: ::std::os::raw::c_int,
    pub x158: ::std::os::raw::c_int,
    pub x15c: ::std::os::raw::c_int,
    pub x160: ::std::os::raw::c_int,
    pub x164: ::std::os::raw::c_int,
    pub x168: ::std::os::raw::c_int,
    pub x16c: ::std::os::raw::c_int,
    pub x170: ::std::os::raw::c_int,
    pub x174: ::std::os::raw::c_int,
    pub x178: ::std::os::raw::c_int,
    pub x17c: ::std::os::raw::c_int,
    pub map_gobjs: [*mut GOBJ; 64usize],
    pub general_points: [*mut JOBJ; 256usize],
    pub x680: ::std::os::raw::c_int,
    pub x684: ::std::os::raw::c_int,
    pub x688: ::std::os::raw::c_int,
    pub x68c: ::std::os::raw::c_int,
    pub x690: ::std::os::raw::c_int,
    pub x694: ::std::os::raw::c_int,
    pub x698: ::std::os::raw::c_int,
    pub x69c: ::std::os::raw::c_int,
    pub x6a0: ::std::os::raw::c_int,
    pub on_go: *mut StageOnGO,
    pub itemData: *mut ::std::os::raw::c_int,
    pub coll_data: *mut ::std::os::raw::c_int,
    pub grGroundParam: *mut ::std::os::raw::c_int,
    pub ALDYakuAll: *mut ::std::os::raw::c_int,
    pub map_ptcl: *mut ::std::os::raw::c_int,
    pub map_texg: *mut ::std::os::raw::c_int,
    pub yakumono_param: *mut ::std::os::raw::c_int,
    pub map_plit: *mut ::std::os::raw::c_int,
    pub x6c8: *mut ::std::os::raw::c_int,
    pub quake_model_set: *mut ::std::os::raw::c_void,
    pub x6d0: *mut ::std::os::raw::c_int,
    pub targetsRemaining: *mut ::std::os::raw::c_int,
    pub x6d8: ::std::os::raw::c_int,
    pub x6dc: ::std::os::raw::c_int,
    pub x6e0: ::std::os::raw::c_int,
    pub x6e4: ::std::os::raw::c_int,
    pub x6e8: ::std::os::raw::c_int,
    pub x6ec: ::std::os::raw::c_int,
    pub x6f0: ::std::os::raw::c_int,
    pub x6f4: ::std::os::raw::c_int,
    pub x6f8: ::std::os::raw::c_int,
    pub x6fc: ::std::os::raw::c_int,
    pub x700: ::std::os::raw::c_int,
    pub x704: ::std::os::raw::c_int,
    pub x708: ::std::os::raw::c_int,
    pub x70c: ::std::os::raw::c_int,
    pub x710: ::std::os::raw::c_int,
    pub x714: ::std::os::raw::c_int,
    pub x718: ::std::os::raw::c_int,
    pub x71c: ::std::os::raw::c_int,
    pub x720: ::std::os::raw::c_int,
    pub x724: ::std::os::raw::c_int,
    pub x728: ::std::os::raw::c_int,
    pub x72C: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_Stage() {
    assert_eq!(
        ::std::mem::size_of::<Stage>(),
        3176usize,
        concat!("Size of: ", stringify!(Stage))
    );
    assert_eq!(
        ::std::mem::align_of::<Stage>(),
        8usize,
        concat!("Alignment of ", stringify!(Stage))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).cam_LeftBound as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(cam_LeftBound)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).cam_RightBound as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(cam_RightBound)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).cam_TopBound as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(cam_TopBound)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).cam_BottomBound as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(cam_BottomBound)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).cam_HorizOffset as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(cam_HorizOffset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).crowdReactStart as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(crowdReactStart)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).fov_d as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(fov_d)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).fov_u as *const _ as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(fov_u)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).fov_r as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(fov_r)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).fov_l as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(fov_l)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x28 as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x28)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x2c as *const _ as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x2c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x30 as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x30)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x34 as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x34)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x38 as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x38)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x3c as *const _ as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x3c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x40 as *const _ as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x40)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x44 as *const _ as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x44)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x48 as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x48)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x4c as *const _ as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x4c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x50 as *const _ as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x50)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x54 as *const _ as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x54)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x58 as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x58)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x5c as *const _ as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x5c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x60 as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x60)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x64 as *const _ as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x64)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x68 as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x68)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6c as *const _ as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x70 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x70)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).blastzoneLeft as *const _ as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(blastzoneLeft)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).blastzoneRight as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(blastzoneRight)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).blastzoneTop as *const _ as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(blastzoneTop)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).blastzoneBottom as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(blastzoneBottom)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).flags as *const _ as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(flags)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).stageID as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(stageID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).flags2 as *const _ as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(flags2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x90 as *const _ as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x90)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x94 as *const _ as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x94)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).hpsID as *const _ as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(hpsID)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x9c as *const _ as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x9c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xa0 as *const _ as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xa0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xa4 as *const _ as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xa4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xa8 as *const _ as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xa8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xac as *const _ as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xac)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xb0 as *const _ as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xb0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xb4 as *const _ as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xb4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xb8 as *const _ as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xb8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xbc as *const _ as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xbc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xc0 as *const _ as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xc0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xc4 as *const _ as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xc4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xc8 as *const _ as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xc8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xcc as *const _ as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xcc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xd0 as *const _ as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xd0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xd4 as *const _ as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xd4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xd8 as *const _ as usize },
        216usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xd8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xdc as *const _ as usize },
        220usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xdc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xe0 as *const _ as usize },
        224usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xe0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xe4 as *const _ as usize },
        228usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xe4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xe8 as *const _ as usize },
        232usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xe8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xec as *const _ as usize },
        236usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xf0 as *const _ as usize },
        240usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xf0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xf4 as *const _ as usize },
        244usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xf4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xf8 as *const _ as usize },
        248usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xf8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).xfc as *const _ as usize },
        252usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(xfc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x100 as *const _ as usize },
        256usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x100)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x104 as *const _ as usize },
        260usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x104)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x108 as *const _ as usize },
        264usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x108)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x10c as *const _ as usize },
        268usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x10c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x110 as *const _ as usize },
        272usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x110)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x114 as *const _ as usize },
        276usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x114)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x118 as *const _ as usize },
        280usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x118)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x11c as *const _ as usize },
        284usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x11c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x120 as *const _ as usize },
        288usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x120)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x124 as *const _ as usize },
        292usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x124)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x128 as *const _ as usize },
        296usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x128)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x12c as *const _ as usize },
        300usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x12c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x130 as *const _ as usize },
        304usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x130)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x134 as *const _ as usize },
        308usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x134)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x138 as *const _ as usize },
        312usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x138)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x13c as *const _ as usize },
        316usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x13c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x140 as *const _ as usize },
        320usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x140)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x144 as *const _ as usize },
        324usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x144)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x148 as *const _ as usize },
        328usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x148)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x14c as *const _ as usize },
        332usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x14c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x150 as *const _ as usize },
        336usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x150)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x154 as *const _ as usize },
        340usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x154)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x158 as *const _ as usize },
        344usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x158)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x15c as *const _ as usize },
        348usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x15c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x160 as *const _ as usize },
        352usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x160)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x164 as *const _ as usize },
        356usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x164)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x168 as *const _ as usize },
        360usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x168)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x16c as *const _ as usize },
        364usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x16c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x170 as *const _ as usize },
        368usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x170)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x174 as *const _ as usize },
        372usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x174)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x178 as *const _ as usize },
        376usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x178)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x17c as *const _ as usize },
        380usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x17c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).map_gobjs as *const _ as usize },
        384usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(map_gobjs)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).general_points as *const _ as usize },
        896usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(general_points)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x680 as *const _ as usize },
        2944usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x680)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x684 as *const _ as usize },
        2948usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x684)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x688 as *const _ as usize },
        2952usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x688)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x68c as *const _ as usize },
        2956usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x68c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x690 as *const _ as usize },
        2960usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x690)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x694 as *const _ as usize },
        2964usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x694)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x698 as *const _ as usize },
        2968usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x698)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x69c as *const _ as usize },
        2972usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x69c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6a0 as *const _ as usize },
        2976usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6a0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).on_go as *const _ as usize },
        2984usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(on_go)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).itemData as *const _ as usize },
        2992usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(itemData)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).coll_data as *const _ as usize },
        3000usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(coll_data)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).grGroundParam as *const _ as usize },
        3008usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(grGroundParam)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).ALDYakuAll as *const _ as usize },
        3016usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(ALDYakuAll)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).map_ptcl as *const _ as usize },
        3024usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(map_ptcl)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).map_texg as *const _ as usize },
        3032usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(map_texg)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).yakumono_param as *const _ as usize },
        3040usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(yakumono_param)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).map_plit as *const _ as usize },
        3048usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(map_plit)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6c8 as *const _ as usize },
        3056usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6c8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).quake_model_set as *const _ as usize },
        3064usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(quake_model_set)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6d0 as *const _ as usize },
        3072usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6d0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).targetsRemaining as *const _ as usize },
        3080usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(targetsRemaining)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6d8 as *const _ as usize },
        3088usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6d8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6dc as *const _ as usize },
        3092usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6dc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6e0 as *const _ as usize },
        3096usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6e0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6e4 as *const _ as usize },
        3100usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6e4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6e8 as *const _ as usize },
        3104usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6e8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6ec as *const _ as usize },
        3108usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6ec)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6f0 as *const _ as usize },
        3112usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6f0)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6f4 as *const _ as usize },
        3116usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6f4)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6f8 as *const _ as usize },
        3120usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6f8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x6fc as *const _ as usize },
        3124usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x6fc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x700 as *const _ as usize },
        3128usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x700)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x704 as *const _ as usize },
        3132usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x704)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x708 as *const _ as usize },
        3136usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x708)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x70c as *const _ as usize },
        3140usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x70c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x710 as *const _ as usize },
        3144usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x710)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x714 as *const _ as usize },
        3148usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x714)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x718 as *const _ as usize },
        3152usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x718)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x71c as *const _ as usize },
        3156usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x71c)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x720 as *const _ as usize },
        3160usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x720)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x724 as *const _ as usize },
        3164usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x724)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x728 as *const _ as usize },
        3168usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x728)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Stage>())).x72C as *const _ as usize },
        3172usize,
        concat!(
            "Offset of field: ",
            stringify!(Stage),
            "::",
            stringify!(x72C)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MapHead {
    pub general_points: *mut ::std::os::raw::c_int,
    pub general_points_num: ::std::os::raw::c_int,
    pub map_gobjs: *mut ::std::os::raw::c_int,
    pub map_gobj_num: ::std::os::raw::c_int,
    pub splines: *mut ::std::os::raw::c_int,
    pub splines_num: ::std::os::raw::c_int,
    pub lights: *mut ::std::os::raw::c_int,
    pub lights_num: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_MapHead() {
    assert_eq!(
        ::std::mem::size_of::<MapHead>(),
        64usize,
        concat!("Size of: ", stringify!(MapHead))
    );
    assert_eq!(
        ::std::mem::align_of::<MapHead>(),
        8usize,
        concat!("Alignment of ", stringify!(MapHead))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MapHead>())).general_points as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MapHead),
            "::",
            stringify!(general_points)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MapHead>())).general_points_num as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MapHead),
            "::",
            stringify!(general_points_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MapHead>())).map_gobjs as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MapHead),
            "::",
            stringify!(map_gobjs)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MapHead>())).map_gobj_num as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MapHead),
            "::",
            stringify!(map_gobj_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MapHead>())).splines as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MapHead),
            "::",
            stringify!(splines)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MapHead>())).splines_num as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MapHead),
            "::",
            stringify!(splines_num)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MapHead>())).lights as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(MapHead),
            "::",
            stringify!(lights)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<MapHead>())).lights_num as *const _ as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(MapHead),
            "::",
            stringify!(lights_num)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct StageFile {
    pub archive_info: *mut ArchiveInfo,
    pub map_head: *mut MapHead,
}
#[test]
fn bindgen_test_layout_StageFile() {
    assert_eq!(
        ::std::mem::size_of::<StageFile>(),
        16usize,
        concat!("Size of: ", stringify!(StageFile))
    );
    assert_eq!(
        ::std::mem::align_of::<StageFile>(),
        8usize,
        concat!("Alignment of ", stringify!(StageFile))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<StageFile>())).archive_info as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(StageFile),
            "::",
            stringify!(archive_info)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<StageFile>())).map_head as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(StageFile),
            "::",
            stringify!(map_head)
        )
    );
}
extern "C" {
    #[doc = " Functions"]
    pub fn Stage_GetStageFiles() -> *mut StageFile;
}
extern "C" {
    pub fn Stage_GetStageFile(mapgobj_index: ::std::os::raw::c_int) -> *mut StageFile;
}
extern "C" {
    pub fn Stage_AddFtChkDevice(
        map: *mut GOBJ,
        hazard_kind: ::std::os::raw::c_int,
        check: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Stage_SetChkDevicePos(y_pos: f32);
}
extern "C" {
    pub fn Stage_GetChkDevicePos(y_pos: *mut f32, y_delta: *mut f32);
}
extern "C" {
    pub fn Stage_GetScale() -> f32;
}
extern "C" {
    pub fn Stage_GetYakumonoParam() -> *mut ::std::os::raw::c_int;
}
extern "C" {
    pub fn Stage_MapStateChange(
        map: *mut GOBJ,
        map_gobjID: ::std::os::raw::c_int,
        anim_id: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn Dynamics_DecayWind();
}
extern "C" {
    pub fn Stage_CreateMapGObj(mapgobjID: ::std::os::raw::c_int) -> *mut GOBJ;
}
extern "C" {
    pub fn Stage_DestroyMapGObj(map_gobj: *mut GOBJ);
}
extern "C" {
    pub fn GXLink_Stage(
        gobj: *mut GOBJ,
        pass: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn Stage_GetMapGObj(mapgobjID: ::std::os::raw::c_int) -> *mut GOBJ;
}
extern "C" {
    pub fn Stage_GetMapGObjJObj(mapgobj: *mut GOBJ, jointIndex: ::std::os::raw::c_int)
        -> *mut JOBJ;
}
extern "C" {
    pub fn Stage_GetLinesGroup(line: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Stage_GetLinesDirection(line: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Stage_SetGroundCallback(
        line: ::std::os::raw::c_int,
        userdata: *mut ::std::os::raw::c_void,
        callback: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Stage_SetCeilingCallback(
        line: ::std::os::raw::c_int,
        userdata: *mut ::std::os::raw::c_void,
        callback: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn Stage_InitMovingColl(mapjoint: *mut JOBJ, mapgobjID: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Stage_UpdateMovingColl(mapgobj: *mut GOBJ);
}
extern "C" {
    pub fn Stage_SpawnEffectPos(
        gfxID: ::std::os::raw::c_int,
        efFileID: ::std::os::raw::c_int,
        pos: *mut Vec3,
    ) -> *mut Particle;
}
extern "C" {
    pub fn Stage_SpawnEffectJointPos(
        gfxID: ::std::os::raw::c_int,
        efFileID: ::std::os::raw::c_int,
        pos: *mut JOBJ,
    ) -> *mut Particle;
}
extern "C" {
    pub fn Stage_SpawnEffectJointPos2(
        gfxID: ::std::os::raw::c_int,
        efFileID: ::std::os::raw::c_int,
        pos: *mut JOBJ,
    ) -> *mut Particle;
}
extern "C" {
    pub fn Zako_Create(
        item_id: ::std::os::raw::c_int,
        pos: *mut Vec3,
        jobj: *mut JOBJ,
        velocity: *mut Vec3,
        isMovingItem: ::std::os::raw::c_int,
    ) -> *mut GOBJ;
}
extern "C" {
    pub fn Stage_CreateMapItem(
        map_data: *mut map_gobjData,
        takeDamageSFXKind: ::std::os::raw::c_int,
        state: ::std::os::raw::c_int,
        joint: *mut JOBJ,
        pos: *mut Vec3,
        unk_bool: ::std::os::raw::c_int,
        onGiveDamage: *mut ::std::os::raw::c_void,
        onTakeDamage: *mut ::std::os::raw::c_void,
    ) -> *mut GOBJ;
}
extern "C" {
    pub fn Stage_CheckForNearbyFighters(pos: *mut Vec3, radius: f32) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Stage_GetBlastzoneRight() -> f32;
}
extern "C" {
    pub fn Stage_GetBlastzoneLeft() -> f32;
}
extern "C" {
    pub fn Stage_GetBlastzoneTop() -> f32;
}
extern "C" {
    pub fn Stage_GetBlastzoneBottom() -> f32;
}
extern "C" {
    pub fn Stage_GetCameraRight() -> f32;
}
extern "C" {
    pub fn Stage_GetCameraLeft() -> f32;
}
extern "C" {
    pub fn Stage_GetCameraTop() -> f32;
}
extern "C" {
    pub fn Stage_GetCameraBottom() -> f32;
}
extern "C" {
    pub fn Stage_GetGeneralPoint(index: ::std::os::raw::c_int, pos: *mut Vec3);
}
extern "C" {
    pub fn Stage_EnableLineGroup(index: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Stage_DisableLineGroup(index: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Stage_GetExternalID() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Stage_ExternalToInternal(ext_id: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub static mut stc_stage: *mut Stage;
}
extern "C" {
    pub static mut ftchkdevice_windnum: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut ftchkdevice_grabnum: *mut ::std::os::raw::c_int;
}
extern "C" {
    pub static mut ftchkdevice_dmgnum: *mut ::std::os::raw::c_int;
}
#[doc = " Structs"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct TextAllocInfo {
    pub curr: *mut u8_,
    pub start: *mut u8_,
    pub size: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_TextAllocInfo() {
    assert_eq!(
        ::std::mem::size_of::<TextAllocInfo>(),
        24usize,
        concat!("Size of: ", stringify!(TextAllocInfo))
    );
    assert_eq!(
        ::std::mem::align_of::<TextAllocInfo>(),
        8usize,
        concat!("Alignment of ", stringify!(TextAllocInfo))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TextAllocInfo>())).curr as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(TextAllocInfo),
            "::",
            stringify!(curr)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TextAllocInfo>())).start as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(TextAllocInfo),
            "::",
            stringify!(start)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<TextAllocInfo>())).size as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(TextAllocInfo),
            "::",
            stringify!(size)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Text {
    pub trans: Vec3,
    pub aspect: Vec2,
    pub x14: ::std::os::raw::c_int,
    pub x18: ::std::os::raw::c_int,
    pub x1c: ::std::os::raw::c_int,
    pub x20: ::std::os::raw::c_int,
    pub scale: Vec2,
    pub x2C: ::std::os::raw::c_int,
    pub color: GXColor,
    pub stretch: Vec2,
    pub x3c: ::std::os::raw::c_int,
    pub x40: ::std::os::raw::c_int,
    pub x44: ::std::os::raw::c_int,
    pub use_aspect: u8_,
    pub kerning: u8_,
    pub align: u8_,
    pub x4b: u8_,
    pub x4c: u8_,
    pub hidden: u8_,
    pub x4e: u8_,
    pub sis_id: u8_,
    pub x50: ::std::os::raw::c_int,
    pub gobj: *mut GOBJ,
    pub callback: *mut ::std::os::raw::c_void,
    pub textAlloc: *mut u8_,
    pub textAlloc2: *mut u8_,
    pub allocInfo: *mut TextAllocInfo,
}
#[test]
fn bindgen_test_layout_Text() {
    assert_eq!(
        ::std::mem::size_of::<Text>(),
        128usize,
        concat!("Size of: ", stringify!(Text))
    );
    assert_eq!(
        ::std::mem::align_of::<Text>(),
        8usize,
        concat!("Alignment of ", stringify!(Text))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).trans as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(trans)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).aspect as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(aspect)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x14 as *const _ as usize },
        20usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x14))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x18 as *const _ as usize },
        24usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x18))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x1c as *const _ as usize },
        28usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x1c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x20 as *const _ as usize },
        32usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x20))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).scale as *const _ as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x2C as *const _ as usize },
        44usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x2C))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).color as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(color)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).stretch as *const _ as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(stretch)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x3c as *const _ as usize },
        60usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x3c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x40 as *const _ as usize },
        64usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x40))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x44 as *const _ as usize },
        68usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x44))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).use_aspect as *const _ as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(use_aspect)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).kerning as *const _ as usize },
        73usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(kerning)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).align as *const _ as usize },
        74usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(align)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x4b as *const _ as usize },
        75usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x4b))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x4c as *const _ as usize },
        76usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x4c))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).hidden as *const _ as usize },
        77usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(hidden)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x4e as *const _ as usize },
        78usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x4e))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).sis_id as *const _ as usize },
        79usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(sis_id)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).x50 as *const _ as usize },
        80usize,
        concat!("Offset of field: ", stringify!(Text), "::", stringify!(x50))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).gobj as *const _ as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(gobj)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).callback as *const _ as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(callback)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).textAlloc as *const _ as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(textAlloc)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).textAlloc2 as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(textAlloc2)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Text>())).allocInfo as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(Text),
            "::",
            stringify!(allocInfo)
        )
    );
}
extern "C" {
    #[doc = " Functions"]
    pub fn Text_CreateCanvas(
        unk: ::std::os::raw::c_int,
        gobj: *mut GOBJ,
        text_gobjkind: ::std::os::raw::c_int,
        text_gobjsubclass: ::std::os::raw::c_int,
        text_gobjflags: ::std::os::raw::c_int,
        text_gxlink: ::std::os::raw::c_int,
        text_gxpri: ::std::os::raw::c_int,
        cobj_gxpri: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Text_CreateText(
        SisIndex: ::std::os::raw::c_int,
        canvasID: ::std::os::raw::c_int,
    ) -> *mut Text;
}
extern "C" {
    pub fn Text_CreateText2(
        SisIndex: ::std::os::raw::c_int,
        canvasID: ::std::os::raw::c_int,
        pos_x: f32,
        pos_y: f32,
        pos_z: f32,
        limit_x: f32,
        limit_y: f32,
    ) -> *mut Text;
}
extern "C" {
    pub fn Text_Destroy(text: *mut Text);
}
extern "C" {
    pub fn Text_AddSubtext(
        text: *mut Text,
        xPos: f32,
        yPos: f32,
        string: *mut ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Text_SetScale(text: *mut Text, subtext: ::std::os::raw::c_int, x: f32, y: f32);
}
extern "C" {
    pub fn Text_SetColor(text: *mut Text, subtext: ::std::os::raw::c_int, color: *mut GXColor);
}
extern "C" {
    pub fn Text_SetPosition(text: *mut Text, subtext: ::std::os::raw::c_int, x: f32, y: f32);
}
extern "C" {
    pub fn Text_SetText(
        text: *mut Text,
        subtext: ::std::os::raw::c_int,
        string: *mut ::std::os::raw::c_char,
        ...
    );
}
extern "C" {
    pub fn Text_ConvertToMenuText(
        buffer: *mut ::std::os::raw::c_char,
        string: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Text_Alloc(size: ::std::os::raw::c_int) -> *mut u8_;
}
extern "C" {
    pub fn Text_DestroyAlloc(alloc: *mut u8_);
}
extern "C" {
    pub fn Text_DestroyAllAlloc(text: *mut Text);
}
extern "C" {
    pub fn Text_StringToMenuText(
        out: *mut u8_,
        in_: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Text_GX(gobj: *mut GOBJ, pass: ::std::os::raw::c_int);
}
extern "C" {
    pub fn Text_LoadSdFile(
        index: ::std::os::raw::c_int,
        filename: *mut ::std::os::raw::c_char,
        symbol: *mut ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn Text_SetSisText(text: *mut Text, text_index: ::std::os::raw::c_int);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_Tlut {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_TexLODDesc {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_TObjTev {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_FObj {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_Obj {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_PEDesc {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_TExpTevDesc {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_TObj {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_DObjDesc {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_Spline {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_SList {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_RObjDesc {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _HSD_WObjDesc {
    pub _address: u8,
}
pub type __builtin_va_list = [__va_list_tag; 1usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __va_list_tag {
    pub gp_offset: ::std::os::raw::c_uint,
    pub fp_offset: ::std::os::raw::c_uint,
    pub overflow_arg_area: *mut ::std::os::raw::c_void,
    pub reg_save_area: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout___va_list_tag() {
    assert_eq!(
        ::std::mem::size_of::<__va_list_tag>(),
        24usize,
        concat!("Size of: ", stringify!(__va_list_tag))
    );
    assert_eq!(
        ::std::mem::align_of::<__va_list_tag>(),
        8usize,
        concat!("Alignment of ", stringify!(__va_list_tag))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__va_list_tag>())).gp_offset as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__va_list_tag),
            "::",
            stringify!(gp_offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__va_list_tag>())).fp_offset as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(__va_list_tag),
            "::",
            stringify!(fp_offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__va_list_tag>())).overflow_arg_area as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(__va_list_tag),
            "::",
            stringify!(overflow_arg_area)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__va_list_tag>())).reg_save_area as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(__va_list_tag),
            "::",
            stringify!(reg_save_area)
        )
    );
}
